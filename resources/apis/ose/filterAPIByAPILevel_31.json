{
    "product": "Open",
    "APILevel": 31,
    "build": "799",
    "services": [
        {
            "uri": "com.palm.service.tellurium",
            "summary": "<p>Intended for interacting with web applications</p>\n"
        },
        {
            "uri": "com.webos.appInstallService",
            "summary": "<p>This API carries out the application installation and provides information of the application being installed.&nbsp;</p>\n"
        },
        {
            "uri": "com.webos.bootManager",
            "summary": "<p>Monitors and controls the boot status/mode.</p>\n\n<p>It manages the boot sequence for:</p>\n\n<ul>\n\t<li>Ensuring&nbsp;boot time performance.</li>\n\t<li>Providing&nbsp;boot mode like &#39;Normal&#39;, and so on.</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.media",
            "summary": "<p>Provides access to the functionality provided&nbsp;by the webOS media server. The webOS media server supports both<strong> </strong>managed and unmanaged pipelines.&nbsp;For managed pipelines, com.webos.media provides high-level&nbsp;methods to control the playback of media content (e.g. load, play, seek).&nbsp;For unmanaged pipelines, com.webos.media provides low-level methods for resource management and display control.</p>\n\n<p>Direct use of com.webos.media by application developers is strongly discouraged.&nbsp;Instead, the media interfaces native to a particular application framework&nbsp;(e.g. Web, QT, SDL/NDL) should be used.</p>\n\n<ul>\n</ul>\n"
        },
        {
            "uri": "com.webos.notification",
            "summary": "<p>Manages the system notifications.</p>\n"
        },
        {
            "uri": "com.webos.service.activitymanager",
            "summary": "<p>Monitors various parts of the system and does actions&nbsp;when the corresponding events happen.&nbsp;Activities can also be used to schedule work periodically or at particular times.</p>\n"
        },
        {
            "uri": "com.webos.service.ai.voice",
            "summary": "<p>This service is used to recognize voice input.</p>\n\n<p>It can use and customize the configurations defined by the configuration API (<strong>com.webos.service.config</strong>).</p>\n"
        },
        {
            "uri": "com.webos.service.alarm",
            "summary": "<p>Enables webOS daemons or apps to call webOS API methods with specific parameters in a specified time interval.&nbsp;</p>\n"
        },
        {
            "uri": "com.webos.service.applicationmanager",
            "summary": "<p><span style=\"color:#333333\">Provides methods for managing application life cycle, application information, LaunchPoint list.</span></p>\n"
        },
        {
            "uri": "com.webos.service.audio",
            "summary": "<p>Controls the audio&nbsp;policy of a webOS system. Implements audio routing (sending audio streams to the proper destinations) and setting volumes in different scenarios.</p>\n\n<p>Its functionality is categorized into the following modules:</p>\n\n<ul>\n\t<li><strong>Master:</strong> Controls the master volume of audio output devices.</li>\n\t<li><strong>UMI:</strong> Handles connections and manages volume for audio resources, when playing audio from applications like YouTube.</li>\n\t<li><strong>System:</strong>&nbsp;Controls audio policy for DTMF (touch tones), alarm, calendar, and effects.</li>\n\t<li><strong>Media:</strong>&nbsp;Controls audio policy for media playback.</li>\n\t<li><strong>Ringtone:</strong> Controls audio policy for ringtones.</li>\n\t<li><strong>Alert:</strong> Controls audio policy for alerts.</li>\n</ul>\n\n<p>In addition, there is a <strong>soundSettings</strong>&nbsp;category, to manage sound settings such as setting the output device for the audio.</p>\n\n<p><strong>Note: [&nbsp;</strong>Applicable for <strong>Master</strong>, <strong>UMI</strong>, and <strong>SoundSettings ]&nbsp;</strong>The <strong>audio</strong>&nbsp;service calls the <strong>audiooutput</strong>&nbsp;service to communicate with the audio hardware layer.</p>\n"
        },
        {
            "uri": "com.webos.service.audiofocusmanager",
            "summary": "<p>Provides an interface that allows the user to access and gain audio controls through a specific application to use audio resources.</p>\n"
        },
        {
            "uri": "com.webos.service.audiooutput",
            "summary": "<p>Connects&nbsp;the audio source to the audio output&nbsp;device and also controls the volume on the audio device. It provides HAL abstraction for the back-end, which means that&nbsp;the &#39;audiooutput&#39; service works with HAL or ALSA or other hardware abstraction layer.</p>\n\n<p>The&nbsp;&#39;audiooutput&#39; service is a context-less (stateless) implementation of audio handling. Since the &#39;audio&#39; service&nbsp;manages audio policies, the &#39;audiooutput&#39; service&nbsp;will not hold any context information.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The service must only be used by the &#39;audio&#39; service.</li>\n\t<li>Application developers must not use&nbsp;the service directly.</li>\n\t<li>[For webOS OSE Developers] Any modifications to the &#39;audiooutput&#39; service can adversely effect the working of the &#39;audio&#39; service.</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.bluetooth2",
            "summary": "<p>Allows webOS to use remote Bluetooth devices.</p>\n"
        },
        {
            "uri": "com.webos.service.bugreport",
            "summary": "<p>Provides methods for reporting bug&nbsp;in Jira system.</p>\n"
        },
        {
            "uri": "com.webos.service.bus",
            "summary": "<p><span style=\"color:black\">The service provides:</span></p>\n\n<ul>\n\t<li><span style=\"color:black\">an interface for clients to register to signals<strong> </strong>from other clients</span></li>\n\t<li>methods for receiving from com.webos.service.bus data about registered clients.</li>\n\t<li>methods for configuring com.webos.service.bus internal security data</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.camera2",
            "summary": "<p style=\"text-align:justify\">Provides an interface to capture and stream images from a camera that is connected to a webOS device.</p>\n\n<p style=\"text-align:justify\"><strong>Note: </strong>Currently, only V4L2 USB cameras are supported.</p>\n\n<p style=\"text-align:justify\">It&nbsp;provides the following features:</p>\n\n<ul>\n\t<li style=\"text-align:justify\"><strong>Live Camera Preview:&nbsp;</strong>Continuously streams live data from the camera to the shared memory (SystemV and POSIX). The data on the shared memory can be used by applications either using the native shared memory API for Linux or through multimedia middleware framework like GStreamer.</li>\n\t<li style=\"text-align:justify\"><strong>Capture Images:&nbsp;</strong>Allows capturing&nbsp;images in various modes. You can take single or multiple images based on the selected mode.&nbsp;</li>\n\t<li style=\"text-align:justify\"><strong>Control Camera Settings:&nbsp;</strong>Allows you to adjust the camera frame size, output format, and properties such as brightness, exposure, and so on.</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.cec",
            "summary": "<p>The CEC (Consumer Electronic Control)&nbsp;service allows webOS to control connected HDMI CEC devices.</p>\n"
        },
        {
            "uri": "com.webos.service.config",
            "summary": "<p>A static service in the system that provides product specific configurations to webOS components.</p>\n\n<p>This service provides simple <strong>get/set</strong> interfaces to access the configurations.</p>\n\n<p><span style=\"color:#0000FF\"><strong>[Terminology]</strong></span></p>\n\n<ul>\n\t<li><strong>config : </strong>It consists of &#39;key&#39; and &#39;value&#39;. Following is an example of config.\n\n\t<ul>\n\t\t<li>{ &#39;language&#39; : &#39;KOR&#39;&nbsp;} // configName is &#39;language&#39;. configValue is &#39;KOR&#39;</li>\n\t</ul>\n\t</li>\n\t<li><strong>configs &amp; configs.json : </strong>&#39;configs&#39; is a set of configs. We called a file which describes the set as &#39;configs.json&#39;. Normally, the file name is url name\n\t<ul>\n\t\t<li><strong>com.webos.service.surfacemanager.json</strong> : configs.json file&nbsp;for lsm(luna surface manager)</li>\n\t\t<li><strong>layer &amp; selector &amp; selection</strong> : &#39;layer&#39; is a set of &#39;configs.json&#39; files. It means layer is same with directory.&nbsp;\n\t\t<ul>\n\t\t\t<li><strong>basedir&nbsp;</strong>in layer :It is a parent dir of others. Basically directories could be there.</li>\n\t\t\t<li><strong>selection </strong>in layer<strong>&nbsp;</strong>:It is leaf dir name. All &#39;configs.json&#39; files should be in&nbsp;<strong>&#39;basedir&#39; + &#39;selection&#39;</strong>.&nbsp;If the layer type is &quot;none&quot; and there is no selection, configs.json files would be in basedir.</li>\n\t\t\t<li><strong>selector</strong> in layer : It is a method to get right selection. There are many types of selector in configd.</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li><strong>configuration &amp;&nbsp;reconfiguration</strong>\n\t<ul>\n\t\t<li><strong>configuration </strong>is a set of layer. Actually, higher layer can overwrite lower layer&#39;s configs.</li>\n\t\t<li><strong>reconfiguration</strong>&nbsp;is a process to make configuration again. If selector can be changed, reconfiguration process is needed. Please refer below sections for more information.</li>\n\t</ul>\n\t</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.configurator",
            "summary": "<p>Creates the database schema, filecache configuration, and activities for webOS applications.</p>\n"
        },
        {
            "uri": "com.webos.service.connectionmanager",
            "summary": "<p>Manages wired and wireless network connections across&nbsp;webOS apps and services</p>\n"
        },
        {
            "uri": "com.webos.service.contextintentmgr",
            "summary": "<p>CIM is a service that adds AI logic to your web app, without actually modifying its source code.&nbsp;This makes your web app context-aware and therefore provide a better experience to your customers.</p>\n\n<p>How does it work:</p>\n\n<ol>\n\t<li>The CIM service interacts with an app and workflow (defined by the&nbsp;Workflow Designer toolkit).</li>\n\t<li>The workflow must specify:\n\t<ul>\n\t\t<li>The AI engine to be used.</li>\n\t\t<li>The condition, and the action to be performed when that&nbsp;condition is satisfied.</li>\n\t\t<li>Whether the app and workflow need to share data.\n\t\t<ul>\n\t\t\t<li>If yes, then the workflow must include the &#39;data-inject&#39;&nbsp;and/or &#39;data-publish&#39;&nbsp;nodes.</li>\n\t\t\t<li>The app must correspondingly invoke the &#39;injectDataToWorkflow&#39;&nbsp;and/or &#39;getDataFromWorkflow&#39;&nbsp;methods.</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n\t<li>The workflow is packaged with the app.</li>\n\t<li>The packaged app is then deployed on the device.</li>\n</ol>\n\n<p><strong>Before using the Service</strong></p>\n\n<p>Add necessary permissions (<strong>cim.release)</strong>&nbsp;in the&nbsp;<strong>appinfo.json</strong> file (see below)</p>\n\n<ul>\n\t<li>&quot;requiredPermissions&quot;:[&quot;cim.release&quot;]</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.db",
            "summary": "<p>Enables apps to store persistent data.</p>\n"
        },
        {
            "uri": "com.webos.service.devmode",
            "summary": "<p>Developer mode support service. Allows you to enable or disable&nbsp;developer mode on a device and to query the status of developer mode.</p>\n"
        },
        {
            "uri": "com.webos.service.downloadmanager",
            "summary": "<p>Manages file upload and download on the device.</p>\n"
        },
        {
            "uri": "com.webos.service.filecache",
            "summary": "<p>This service enables you to manage caching of files. It implements the global shared cache space, which webOS applications (such as&nbsp;<strong>Email</strong>) can use to temporary store cache files or send files to other webOS applications.</p>\n"
        },
        {
            "uri": "com.webos.service.hfp",
            "summary": "<p>Provides the <strong>HFP</strong> service functions in webOS.</p>\n"
        },
        {
            "uri": "com.webos.service.ime",
            "summary": "<p>IME and Virtual Keyboard Service.</p>\n"
        },
        {
            "uri": "com.webos.service.intent",
            "summary": "<p>An intent is an abstract description of an operation to be performed. Intent manager is a native service to handle the intent.</p>\n\n<p>There are two types of intent:</p>\n\n<ul>\n\t<li><strong>Implicit Intent</strong> : Does not specify a component</li>\n\t<li><strong>Explicit Intent</strong> : Specifies a component</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.location",
            "summary": "<p>Provides basic location services for single or multiple position fixes.&nbsp;This service connects to Luna bus to interact with other system components (e.g. apps, services) that require location services.</p>\n\n<ul>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.mediacontroller",
            "summary": "<p>Provides features to handle the <strong>AVRCP</strong> events regardless of application type (web app/native app) in order to remotely control the playback and handles key events such as play, pause, next, previous, mute and unmute..</p>\n"
        },
        {
            "uri": "com.webos.service.mediaindexer",
            "summary": "<p>Provides the functionalities that scan media files (audios, videos, images) from internal / external storage devices such as the usb devices and extracts the meta data.</p>\n"
        },
        {
            "uri": "com.webos.service.mediarecorder",
            "summary": "<p>Provides an interface to record in&nbsp;a webOS device.</p>\n"
        },
        {
            "uri": "com.webos.service.memorymanager",
            "summary": "<p>Manages applications&nbsp;to ensure that the system does not run into kernel-Out-Of-Memory situation. This is achieved by killing applications that are in the background when we reach low memory conditions.</p>\n\n<p>The goal of MemoryManager:</p>\n\n<ul>\n\t<li>To maintain the state of memory usage across the app</li>\n\t<li>To prevent running OOM (out of memory)</li>\n\t<li>To correct the situation where memory runs out.&nbsp;</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.nettools",
            "summary": "<p>Provides a selection of standard network tools.</p>\n"
        },
        {
            "uri": "com.webos.service.pdm",
            "summary": "<p>Manages USB devices that are connected to the webOS system.</p>\n\n<p><strong>Main Functions:</strong></p>\n\n<ul>\n\t<li>Mount/unmount of Mass Storage Class (MSC)&nbsp;USB devices</li>\n\t<li>Format, Fdisk, File system check (FSCK)</li>\n\t<li>Detect USB device\n\t<ul>\n\t</ul>\n\t</li>\n</ul>\n\n<p><strong>Supported USB Devices</strong></p>\n\n<ul>\n\t<li>MSC USB device\n\t<ul>\n\t\t<li>Supported file system: Windows compatible file system (FAT, NTFS)</li>\n\t\t<li>Supported device type: HDD, Memory Stick, SSD, Memory card</li>\n\t</ul>\n\t</li>\n\t<li>Still image device (Picture Transfer&nbsp;Protocol (PTP)&nbsp;Camera)</li>\n\t<li>Camera</li>\n\t<li>HID &amp; XPAD</li>\n\t<li>USB to Serial</li>\n</ul>\n\n<p><strong>Important Terms</strong></p>\n\n<ul>\n\t<li>Device - A device that is&nbsp;directly connected to a USB port or hub.</li>\n\t<li>Drive - A device can have multiple drives, where each drive is a partition of a physical storage device.</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.peripheralmanager",
            "summary": "<p>The peripheralmanager is a service to provide APIs to monitor sensors and control actuators connected to I/O peripherals using industry-standard protocols.&nbsp;</p>\n\n<p>Currently, supported protocols are&nbsp;UART ,GPIO, SPI and I2C.</p>\n\n<p>This service manages parallel requests from multiple applications to access peripherals and control the hardware.</p>\n"
        },
        {
            "uri": "com.webos.service.power2",
            "summary": "<p>Allows client applications to power-on, power-off, and perform other power-related operations on the device.</p>\n"
        },
        {
            "uri": "com.webos.service.preferences",
            "summary": "<p>Enables applications to manage system and application properties.</p>\n\n<p><strong>Note:</strong> This service must be used only if existing system applications are already using it.&nbsp;Else, use &quot;com.webos.service.systemservice&quot;.&nbsp;</p>\n"
        },
        {
            "uri": "com.webos.service.sdkagent",
            "summary": "<p>The sdkagent service controls&nbsp;Telegraf in webOS and communicates with SDK tools.</p>\n\n<p>Operations:</p>\n\n<ul>\n\t<li>Start, stop, and restart the Telegraf service.</li>\n\t<li>Gets the status of the Telegraf service.</li>\n\t<li>Sets auto start on boot of Telegraf service.</li>\n\t<li>Sets and retrieves&nbsp;configuration of the&nbsp;Telegraf service.</li>\n\t<li>Gets&nbsp;monitoring data that is collected by the Telegraf service.</li>\n</ul>\n\n<p><strong>Note:&nbsp;</strong>Telegraf is open source resource monitoring tool.</p>\n"
        },
        {
            "uri": "com.webos.service.settings",
            "summary": "<p>Settings Service manages the settings used in webOS and provides the setting information (descriptions) such as Set, Get functions to setting values, the valid range of data that can be set, and whether UI is exposed or not. Subscription option is supported for all settings.</p>\n\n<p>Settings Service manages different values according to dimension, such as country and external input, under the same setting. When the dimension has changed, it sends a necessary subscription message.</p>\n"
        },
        {
            "uri": "com.webos.service.sleep",
            "summary": "<p>This service registers itself as <strong>com.webos.service.power </strong>and as <strong>com.webos.service.alarm </strong>and is provided by the sleep daemon (sleepd). It allows applications to interact with (e.g. defer or prevent) the system suspend/resume cycle.</p>\n"
        },
        {
            "uri": "com.webos.service.storageaccess",
            "summary": "<p>Provides a unified interface to access contents in different storage systems:</p>\n\n<ul>\n\t<li>USB storage</li>\n\t<li>Cloud&nbsp;storage provider (only <strong>Google Drive</strong> is supported)</li>\n\t<li>Network storage provider (<strong>SambaServer </strong>and <strong>UPnPMediaServer </strong>are supported)</li>\n\t<li>Internal storage</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.systemservice",
            "summary": "<p>Provides access to the webOS system settings such as:</p>\n\n<ul>\n\t<li>Backup options</li>\n\t<li>Getting device information</li>\n\t<li>Getting and modifying the date and time settings</li>\n\t<li>Setting ringtones</li>\n\t<li>Wallpaper</li>\n\t<li>Local formats</li>\n</ul>\n"
        },
        {
            "uri": "com.webos.service.tts",
            "summary": "<p>Converts plain language text into speech output.&nbsp;The synthesized speech can be used by applications such as voice assistants.</p>\n"
        },
        {
            "uri": "com.webos.service.unifiedsearch",
            "summary": "<p>Searches various items (intents) by using keyword.</p>\n"
        },
        {
            "uri": "com.webos.service.webappmanager",
            "summary": "<p>Internal system service for handling web-based (HTML) applications.</p>\n\n<p>The Web App Manager (WAM) is a component responsible for web application management in webOS platform. The Application Manager (SAM) sends a request to manage web applications to WAM.</p>\n\n<p>WAM handles basic routines such as launching, closing apps as well as the following features of web applications.</p>\n\n<ol>\n\t<li>Running lists</li>\n\t<li>Life cycles</li>\n\t<li>Current status of applications</li>\n\t<li>Application crash</li>\n</ol>\n"
        },
        {
            "uri": "com.webos.service.wifi",
            "summary": "<p><span style=\"color:rgb(77, 78, 83)\">Manages Wi-Fi connections on a webOS device. It provides an interface to find available Wi-Fi networks and handle connecting and disconnecting the device from those networks.</span></p>\n"
        },
        {
            "uri": "com.webos.surfacemanager",
            "summary": "<p>Handles the UX, animations of windows. It manages all system and application input handling.</p>\n"
        }
    ],
    "methods": [
        {
            "uri": "com.palm.service.tellurium/broadcastCommand",
            "description": "<p>Sends message to all TelluriomNub instances</p>",
            "acg": "testautomation.operation",
            "parameters": [
                {
                    "name": "command",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.palm.service.tellurium/handleRequest",
            "description": "<p>handleRequest allows to process requested method</p>\n\n<p>Available methods are:</p>\n\n<ul>\n\t<li>getRunningAppsAndStages: returns applications and their stageId</li>\n\t<li>getApplicationInformation: returns information for the selected application</li>\n\t<li>getItems: returns objects for the selected application</li>\n</ul>",
            "acg": "testautomation.operation",
            "parameters": [
                {
                    "name": "command",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "stageId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "queue",
                    "required": "no",
                    "type": "Object array: queue"
                }
            ]
        },
        {
            "uri": "com.palm.service.tellurium/notifyEvent",
            "description": "<p>Called by a nub to notify that an event occured</p>",
            "acg": "testautomation.operation",
            "parameters": [
                {
                    "name": "stageId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.palm.service.tellurium/ping",
            "description": "<p>Allows to perform &#39;are-you-alive&#39; check. Mirrors sent message</p>",
            "acg": "testautomation.operation",
            "parameters": [
                {
                    "name": "Message",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.palm.service.tellurium/replyToCommand",
            "description": "<p>This is called when a subscriber needs to reply to a command i.e., Sends&nbsp;a reply to the TelluriumdService from TelluriumNub(Webapp) or Qttestability(QML app) when client sends luna-send request to get&nbsp;element information for an application.</p>\n\n<p>For more details on replyToCommand Valid case, Please refer Internal notes section.</p>",
            "acg": "testautomation.operation",
            "parameters": [
                {
                    "name": "stageId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "teCommandId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "command",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "queue",
                    "required": "yes",
                    "type": "Object array: queue"
                }
            ]
        },
        {
            "uri": "com.palm.service.tellurium/subscribeToCommands",
            "description": "<p>Subscribes to Tellurium commands</p>",
            "acg": "testautomation.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "appInfo",
                    "required": "yes",
                    "type": "Object: appInfo"
                },
                {
                    "name": "baseURI",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "width",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "scene",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "version",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.palm.service.tellurium/subscribeToEvents",
            "description": "<p>Subscribes to stages&#39; events (received from stage in notifyEvent)</p>",
            "acg": "testautomation.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.palm.service.tellurium/version",
            "description": "<p>Returns the tellurium version from the submission tag.</p>",
            "acg": "testautomation.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.appInstallService/dev/install",
            "description": "<p>Installs an ipk file which exists in local repository of a device.</p>\n\n<p><strong>Note:&nbsp;</strong>This method is available only in developer mode (devmode).&nbsp;To enable devmode, call &#39;com.webos.service.devmode&#39; (&#39;setDevMode&#39;) with value &#39;true&#39;.&nbsp;</p>",
            "acg": "applicationinstall.devmode",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "ipkUrl",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.appInstallService/dev/remove",
            "description": "<p>Removes apps from a device that are installed using <strong>dev/install</strong> method.</p>\n\n<p><strong>Note:&nbsp;</strong>This method is available only in developer mode (devmode).&nbsp;To enable devmode, call &#39;com.webos.service.devmode&#39; (&#39;setDevMode&#39;) with value &#39;true&#39;.&nbsp;</p>",
            "acg": "applicationinstall.devmode",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.appInstallService/install",
            "description": "<p>Installs an app on a device.</p>",
            "acg": "applicationinstall.management",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "ipkUrl",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.appInstallService/remove",
            "description": "<p>Removes an installed app from a device.</p>",
            "acg": "applicationinstall.management",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.appInstallService/status",
            "description": "<p>Monitors the status of all installed and removed&nbsp;apps that are operating in the com.webos.appInstallService.</p>",
            "acg": "applicationinstall.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.bootManager/generateSignal",
            "description": "<p style=\"text-align:start\">Generates boot step signals. Caller and argument are decided statically.</p>",
            "acg": "boot.management",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.bootManager/getBootStatus",
            "description": "<p>Gets the boot status or subscribe to updates on the boot status.</p>",
            "acg": "boot.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.media/acquire",
            "description": "<p>Requests resources from the mediaserver.&nbsp;Typical usage is to request the number of audio and video decoders&nbsp;or other hardware components used by the pipeline.&nbsp;Acquire calls can be used to dynamically add more resources to the pipeline. This allows the pipeline to dynamically grow or shrink without monopolizing the resources from startup. Each time a resource is acquired, the indexes of the newly acquired resources are included in the acquireComplete event.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The types and quantities of resources available to be managed are&nbsp;specified in the file umediaserver_resource_config.txt.in file.</li>\n\t<li>This file is customized for each hardware platform.</li>\n\t<li>If required to satisfy the acquisition of requested resources, a policyAction may be issued to other pipelines, forcing them to release their resources.</li>\n\t<li>For format and list of acquired resources see acquireComplete event.</li>\n</ul>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "resources",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "connectionId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/attach",
            "description": "<p>Allows to transfer the control of a pipeline to be handed over to a different client. When this occurs, the original client gets notified that it got detached from the pipeline and can no longer control the pipeline.</p>\n\n<p><strong>Note:</strong> This method was added to address a specific early boot situation where the pipeline was initially created by one client process and then another client process takes over control of the pipeline.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/getActivePipelines",
            "description": "<p>Gets JSON formatted output of&nbsp;currently active media pipelines.</p>\n\n<p><strong>Note:</strong> Typically, a luna methods returns a JSON object as response. However, in this case, an array of&nbsp;object&nbsp;will be returned.</p>",
            "acg": "media.query",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/getDisplayId",
            "description": "<p>Gets information about the display on which the&nbsp;specified application instance is launched.</p>\n\n<p><strong>Note:</strong> This method&nbsp;supports multi-screen playback.&nbsp;</p>",
            "acg": "media.query",
            "parameters": [
                {
                    "name": "instanceId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/getForegroundAppInfo",
            "description": "<p>Provides the application&#39;s foreground information.</p>",
            "acg": "media.query",
            "parameters": []
        },
        {
            "uri": "com.webos.media/getPipelineState",
            "description": "<p>Requests the media server to retrieve&nbsp;pipeline state information.</p>",
            "acg": "media.query",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/load",
            "description": "<p>Loads a new pipeline for the specified URI. The media server returns a unique id to the client which is used for subsequent operations on the pipeline.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "uri",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "payload",
                    "required": "no",
                    "type": "Object: payload"
                }
            ]
        },
        {
            "uri": "com.webos.media/notifyActivity",
            "description": "<p>Notifies the media server that the specific pipeline is currently in use.&nbsp;This command raises the timestamp record of the&nbsp;corresponding pipeline to lessen the chance to be picked as the target for a policyAction, which would require the pipeline to release its resources.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "connectionId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/notifyBackground",
            "description": "<p>Marks a pipeline as background.&nbsp;This API is called when the media object in question is carded, deleted, or otherwise&nbsp;removed from view.&nbsp;</p>\n\n<p><strong>Note:</strong> Background video content is not currently visible on the display surface.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "connectionId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/notifyForeground",
            "description": "<p><span style=\"color:#000000\">M</span>arks a pipeline as foreground.&nbsp;This API is called when the media object in question is un-carded and made visible.</p>\n\n<p><strong>Note:</strong> Foreground pipeline video content is currently visible on the display surface.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "connectionId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/notifyPipelineStatus",
            "description": "<p>Notifies the&nbsp;playback status of media pipelines.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "connectionId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "pipelineStatus",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "pid",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.media/pause",
            "description": "<p>Requests the media server to pause the media object.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/play",
            "description": "<p>Requests the media server to play the media object.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/reacquire",
            "description": "<p>Dynamically adds more resources to the pipeline.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "connectionId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "resources",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/registerPipeline",
            "description": "<p>Registers with the Resource Manager. Session is persistent across all start/end transaction and acquire/release cycles. Registered clients and their current resource requirements will be tracked by Resource Manager. Param type as specified in Resource Manager configuration file pipeline settings.</p>\n\n<p><strong>Note:</strong> This method is applicable for&nbsp;unmanaged pipelines only.<strong>&nbsp;</strong>For managed pipelines, this is taken care of internally by the mediaserver.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "appId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/release",
            "description": "<p>Informs media server the resources are released correctly and are not being used anymore.</p>\n\n<p><strong>Note:</strong> This method is applicable for unmanaged pipelines only.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "resources",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "connectionId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/seek",
            "description": "<p>Seeks the media object to a specified time position.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "position",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/setPlayRate",
            "description": "<p>Sets the pipeline media play rate.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "playRate",
                    "required": "yes",
                    "type": "Number (double)"
                },
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "audioOutput",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.media/setVolume",
            "description": "<p>Sets the volume for the specified media object. Additionally, it specifies the ease (fade-in and fade-out) properties for the media object.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "volume",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.media/startCameraRecord",
            "description": "<p>Starts camera recording. Camera pipeline stores streamed data from the camera and microphone (if required)&nbsp;at the specified location.&nbsp;</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "location",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "format",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "audio",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "audioSrc",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/stopCameraRecord",
            "description": "<p>Requests media server to stop&nbsp;camera recording and change to the preview state.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/subscribe",
            "description": "<p>Subscribes the media client to receive events from a media pipeline.&nbsp;These events, described in the tables above, allow the media client (generally an app or test tool) to monitor pipeline status (including playback position) and adjust their internal state appropriately.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/takeCameraSnapshot",
            "description": "<p>Captures a frame from the camera preview.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "location",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "format",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "width",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "pictureQuality",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.media/trackAppProcesses",
            "description": "<p>Subscribes to messages containing the mapping of application ID (appID) and pipeline process ID (PID), i.e. it returns information about which application each managed pipeline belongs to.The subscription messages contain information about changes to these mappings, i.e. new mappings when a pipeline is associated with an application&nbsp;or destroyed mappings when a pipeline exits.</p>\n\n<p><strong>Note:</strong> The return value of the method contains an array of the PIDs of all currently existing pipelines mapped to the corresponding appIDs.</p>",
            "acg": "media.devutility",
            "parameters": []
        },
        {
            "uri": "com.webos.media/tryAcquire",
            "description": "<p>Tries&nbsp;to acquire resources from mediaserver.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>This API will not issue policyAction to other pipelines in order to force them to release resources.</li>\n\t<li>If there are insufficient resources to honor the request without issuing a policyAction, the request will fail.</li>\n</ul>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "resources",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "connectionId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/unload",
            "description": "<p>Unloads the pipeline and releases all AV resources.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/unregisterPipeline",
            "description": "<p>Unregisters pipeline with Resource Manager.</p>\n\n<p><strong>Note:&nbsp;</strong>This method is applicable to unmanaged pipelines<strong> </strong>only.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "connectionId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.media/unsubscribe",
            "description": "<p>Unsubscribes from media pipeline related events.</p>",
            "acg": "media.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.notification/closeAlert",
            "description": "<p>Closes the currently displayed alert notification.</p>",
            "acg": "notification.management",
            "parameters": [
                {
                    "name": "alertId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.notification/closeAllAlerts",
            "description": "<p>Closes all the open alerts.</p>\n\n<p><strong>Note:</strong> This method is for internal use. It must only be used by <strong>com.webos.service.battest</strong> during <strong>BAT test</strong>. If the caller is not <strong>com.webos.service.battest</strong>, the method will fail.</p>",
            "acg": "notification.management",
            "parameters": []
        },
        {
            "uri": "com.webos.notification/closeToast",
            "description": "<p style=\"text-align:left\">Removes a toast notification from the database.</p>",
            "acg": "notification.management",
            "parameters": [
                {
                    "name": "toastId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "sourceId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.notification/createAlert",
            "description": "<p>Creates a system alert notification.</p>",
            "acg": "notification.operation",
            "parameters": [
                {
                    "name": "iconUrl",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "title",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "message",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "modal",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "buttons",
                    "required": "yes",
                    "type": "Object array: button"
                },
                {
                    "name": "onclose",
                    "required": "no",
                    "type": "Object: onclose"
                },
                {
                    "name": "type",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "isSysReq",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "onfail",
                    "required": "no",
                    "type": "Object: onfail"
                }
            ]
        },
        {
            "uri": "com.webos.notification/createToast",
            "description": "<p style=\"text-align:left\">Creates a toast notification.</p>",
            "acg": "notification.operation",
            "parameters": [
                {
                    "name": "sourceId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "iconUrl",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "message",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "onclick",
                    "required": "no",
                    "type": "Object: onclick"
                },
                {
                    "name": "noaction",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "stale",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "persistent",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "isSysReq",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "schedule",
                    "required": "no",
                    "type": "Object: schedule"
                },
                {
                    "name": "type",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "extra",
                    "required": "no",
                    "type": "Object array: image"
                },
                {
                    "name": "onlyToast",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.notification/disable",
            "description": "<p>Disables all notification features (Toast, Alert, Input Alert, Pin Prompt).</p>\n\n<p><strong>Note:</strong> Only a privileged application or service can call this method.</p>",
            "acg": "notification.management",
            "parameters": []
        },
        {
            "uri": "com.webos.notification/enable",
            "description": "<p>Enables all notification features (Toast, Alert, Input Alert, Pin Prompt).</p>\n\n<p><strong>Note:</strong> Only a privileged app/service can call this method.</p>",
            "acg": "notification.management",
            "parameters": []
        },
        {
            "uri": "com.webos.notification/getAlertNotification",
            "description": "<p style=\"text-align:left\">Subscribe to create alert notifications.</p>\n\n<p style=\"text-align:left\"><strong>Note:</strong> This method should only be used by the <strong>Surface Manager</strong>.</p>",
            "acg": "notification.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.notification/getToastCount",
            "description": "<p>Queries&nbsp;the toast notification details of the stored messages and provides the read/unread count of the toast notifications.</p>\n\n<p><strong>Note:&nbsp;</strong>Only &quot;com.webos.surfacemanager&quot; and &quot;com.webos.app.notification&quot; have permission to monitor the notification status change.</p>",
            "acg": "notification.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.notification/getToastList",
            "description": "<p>Lists the toasts created for the app/client based on the user logged into the particular session.</p>",
            "acg": "notification.management",
            "parameters": [
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.notification/getToastNotification",
            "description": "<p style=\"text-align:left\">Subscribe to created toast notification.&nbsp;</p>\n\n<p style=\"text-align:left\"><strong>Note: </strong>This method should only be used by<strong> Surface Manager </strong>only.</p>",
            "acg": "notification.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.notification/removeAllNotification",
            "description": "<p>Removes all notifications that are currently being displayed.</p>",
            "acg": "notification.management",
            "parameters": [
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.notification/removeNotification",
            "description": "<p>Deletes the given notification(s) from DB. We can remove given set of notifications or remove all notifications from a given sourceId.</p>",
            "acg": "notification.management",
            "parameters": [
                {
                    "name": "removeNotiId",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "sourceId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.notification/setToastStatus",
            "description": "<p>Specifies whether the toast is to be marked as read or unread.</p>",
            "acg": "notification.management",
            "parameters": [
                {
                    "name": "toastId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "readStatus",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.activitymanager/adopt",
            "description": "<p>The Activity Manager considers the creator of the Activity as a parent.</p>\n\n<p>Therefore, the creator of the activity does not need to <strong>adopt </strong>the Activity&nbsp;to be a parent.</p>\n\n<p>An app or a service registers its willingness to become an Activity&#39;s parent, which means becoming an adopter.</p>\n\n<ul>\n\t<li>If there are adopters, all subscribers to this Activity receives&nbsp;an &quot;orphan&quot; event and the Activity is adopted to the new parent, one of the adopters.&nbsp;</li>\n\t<li>If&nbsp;there are no waiting adopters, all subscribers to this Activity receives&nbsp;a &quot;cancel&quot; event and the Activity disappears immediately.</li>\n</ul>",
            "acg": "activity.operation",
            "parameters": [
                {
                    "name": "activityId",
                    "required": "yes",
                    "type": "Number (uint64_t)"
                },
                {
                    "name": "activityName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "wait",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "detailedEvents",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.activitymanager/callback/scheduledwakeup",
            "description": "<p>A callback method indicating the scheduled time of the activities.</p>\n\n<p><strong>Note:</strong> Do not use this method in your application or service.&nbsp;This method is only called by sleepd (com.webos.service.alarm) service.</p>",
            "acg": "activity.wakeup",
            "parameters": []
        },
        {
            "uri": "com.webos.service.activitymanager/cancel",
            "description": "<p>Terminate the specified Activity and send a &quot;cancel&quot; event to all subscribers to this Activity.&nbsp;This&nbsp;method succeeds if the Activity exists.</p>",
            "acg": "activity.operation",
            "parameters": [
                {
                    "name": "activityId",
                    "required": "yes",
                    "type": "Number (uint64_t)"
                },
                {
                    "name": "activityName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.activitymanager/complete",
            "description": "<p>Terminate the specified Activity and optionally <strong>restart </strong>it with(or without)&nbsp;new callback, schedule or trigger. Only the Activity&#39;s parent can call this method. Other subscribers to the Activity receive a &quot;complete&quot; event.</p>\n\n<p>If the Activity is persistent (i.e., <strong>persist</strong>&nbsp;in the Type object is set to true), the db8 is updated before the call returns.</p>\n\n<p><strong>Note:&nbsp;</strong>The invocations to callback/triggers are constrained by ACG security model.&nbsp;It means that Activity Manager can invoke trigger/callback when both Activity Manager and activity creator have the permissions to those methods. Otherwise, the method&nbsp;fails with the error &quot;&#39;com.webos.service.activitymanager&#39; doesn&#39;t have rights to call callback/trigger&quot;.</p>",
            "acg": "activity.operation",
            "parameters": [
                {
                    "name": "activityId",
                    "required": "yes",
                    "type": "Number (uint64_t)"
                },
                {
                    "name": "activityName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "restart",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "required": "no",
                    "type": "Object:Callback"
                },
                {
                    "name": "schedule",
                    "required": "no",
                    "type": "Object:Schedule"
                },
                {
                    "name": "trigger",
                    "required": "no",
                    "type": "Object:Trigger"
                },
                {
                    "name": "metadata",
                    "required": "no",
                    "type": "Object"
                }
            ]
        },
        {
            "uri": "com.webos.service.activitymanager/create",
            "description": "<p><strong>Note: The &#39;creator&#39; in Activity object can be set only&nbsp;by configurator.</strong></p>\n\n<p>Create a new Activity and return its ID.&nbsp;Each of created Activities must have a unique name.</p>\n\n<p>Activities can be scheduled to run at a specific time or when certain conditions are met or events occur.</p>\n\n<p>If the Activity specify start as true, because the Activity moves to unsatisfied state, you do not need to call start method.</p>",
            "acg": "activity.operation",
            "parameters": [
                {
                    "name": "activity",
                    "required": "yes",
                    "type": "Object: Activity"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "detailedEvents",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "start",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "replace",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.activitymanager/getActivityInfo",
            "description": "<p>Gets information&nbsp;of Activities.</p>\n\n<p>If activityId or activityName is given, getActivityInfo only&nbsp;returns information&nbsp;about that&nbsp;activity.</p>\n\n<p>Conversely, if activityId or activityName is not given, getActivityInfo returns all undestroyed activities.</p>",
            "acg": "activity.query",
            "parameters": [
                {
                    "name": "activityId",
                    "required": "no",
                    "type": "Number (uint64_t)"
                },
                {
                    "name": "activityName",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribers",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "details",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "current",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.activitymanager/getManagerInfo",
            "description": "<p>Gets Activity Manager related information such as:</p>\n\n<ul>\n\t<li>Activity Manager state - queued and leaked activities</li>\n\t<li>List of activities for which power is currently locked</li>\n\t<li>Supported requirements</li>\n</ul>",
            "acg": "activity.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.activitymanager/pause",
            "description": "<p>Suspend the work on the specified Activity and place the Activity in <strong>pause</strong> state.</p>\n\n<p><strong>NOTE: </strong>An activity can be paused only if it is in the <strong>unsatisfied </strong>state. Use the&nbsp;<strong>getActivityInfo</strong>&nbsp;method to check the state of an activity.&nbsp;</p>",
            "acg": "activity.operation",
            "parameters": [
                {
                    "name": "activityId",
                    "required": "no",
                    "type": "Number (uint64_t)"
                },
                {
                    "name": "activityName",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.activitymanager/release",
            "description": "<p><span style=\"line-height:1.6em\">Allow a parent to free an Activity and notify other subscribers. The Activity is cancelled unless one of its non-parent subscribers adopts it and becomes the new parent.&nbsp;For a completely safe transfer, a subscribing app or service, prior to the release, should already have called the&nbsp;<strong>adopt</strong> method.</span></p>",
            "acg": "activity.operation",
            "parameters": [
                {
                    "name": "activityId",
                    "required": "yes",
                    "type": "Number (uint64_t)"
                },
                {
                    "name": "activityName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.activitymanager/start",
            "description": "<p>Attempt to start the specified Activity, either moving its state from &#39;created&#39;&nbsp;to &#39;starting&#39;, or from &#39;paused&#39;&nbsp;to &#39;resuming&#39;.</p>",
            "acg": "activity.operation",
            "parameters": [
                {
                    "name": "activityId",
                    "required": "yes",
                    "type": "Number (uint64_t)"
                },
                {
                    "name": "activityName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.activitymanager/stop",
            "description": "<p>Stop&nbsp;the specified Activity and send a &quot;stop&quot; event to subscribers to this Activity.&nbsp;This&nbsp;method succeeds if the Activity exists.</p>\n\n<p>This method is exactly the same as <strong>cancel</strong> method.&nbsp;It is recommended to use <strong>cancel </strong>to avoid confusion.</p>",
            "acg": "activity.operation",
            "parameters": [
                {
                    "name": "activityId",
                    "required": "yes",
                    "type": "Number (uint64_t)"
                },
                {
                    "name": "activityName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.ai.voice/getResponse",
            "description": "<p>Returns speech recognition results. This method is&nbsp;asynchronous.</p>",
            "acg": "ai.voice",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.ai.voice/getState",
            "description": "<p>Gets the current state of the service. It can have the following states:</p>\n\n<ul>\n\t<li><strong>idle</strong>: Before start.</li>\n\t<li><strong>waitActivation</strong>: Wait for keyword activation.</li>\n\t<li><strong>recording</strong>: Uploading&nbsp;audio to the server&nbsp;for speech recognition.</li>\n\t<li><strong>thinking</strong>: Waiting for results from server.</li>\n\t<li><strong>answering</strong>: Answering to the request&nbsp;through the speaker.</li>\n</ul>\n\n<p><img alt=\"\" src=\"http://clm.lge.com/issue/secure/attachment/967573/ai.voice%20getState.png\" /></p>",
            "acg": "ai.voice",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.ai.voice/start",
            "description": "<p>Starts the service based on the mode selected.</p>\n\n<p><strong>Note: </strong>This method is only for allowed clients.</p>",
            "acg": "ai.management",
            "parameters": [
                {
                    "name": "mode",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "keywordDetect",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.ai.voice/stop",
            "description": "<p>Stops&nbsp;the service. Make sure to call this method before starting another engine.</p>\n\n<p><strong>Note: </strong>This method is only for allowed clients.</p>",
            "acg": "ai.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.alarm/clear",
            "description": "<p>Deletes an existing alarm. Apps or daemons can identify their alarm to be deleted by specifying its&nbsp;key.</p>",
            "acg": "alarm.operation",
            "parameters": [
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.alarm/set",
            "description": "<p>Creates a new alarm for an absolute time or a relative time. By using the &quot;<strong>wakeup</strong>&quot; parameter you can define it as a wake-up or a non-wakeup alarm.&nbsp;</p>",
            "acg": "alarm.operation",
            "parameters": [
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "at",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "in",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "uri",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "params",
                    "required": "yes",
                    "type": "Object"
                },
                {
                    "name": "wakeup",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "keep_existing",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/addLaunchPoint",
            "description": "<p>Adds a dynamic launchpoint. According to the information on launchpoint, application is displayed in the Launcher.</p>\n\n<p>If a parameter is not defined, SAM set the LP&#39;s parameter value same as appInfo&#39;s value.</p>",
            "acg": "application.launcher",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "launchPointId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "title",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "icon",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bgImage",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bgColor",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "imageForRecents",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "iconColor",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "largeIcon",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "appDescription",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "params",
                    "required": "no",
                    "type": "Object: params"
                },
                {
                    "name": "bgImages",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "tileSize",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "unmovable",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "userData",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "policyCategory",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "supportI18nTitle",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "favicon",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "relaunch",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/close",
            "description": "<p>Closes an application.</p>\n\n<p><strong>Note A: </strong>At least one parameter is required. (&#39;id&#39;, &#39;launchPointId&#39;, &#39;instanceId&#39;)</p>\n\n<p><strong>Note B: </strong>Don&#39;t use this API in TV and signage. The API is deprecated in the platforms.</p>",
            "acg": "application.launcher",
            "parameters": [
                {
                    "name": "id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "launchPointId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/closeByAppId",
            "description": "<p>Closes an application by appId in the system manager.</p>",
            "acg": "application.launcher",
            "parameters": [
                {
                    "name": "id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/dev/close",
            "description": "<p>Closes application by either of&nbsp; application id, instance id and launchpoint id .&nbsp;</p>\n\n<p><strong>Note:</strong>&nbsp;At least one parameter is required. Available only in developer mode (devmode)</p>",
            "acg": "application.devmode",
            "parameters": [
                {
                    "name": "id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "launchPointId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/dev/closeByAppId",
            "description": "<p>Closes an application by the application id.</p>\n\n<p><strong>Note:&nbsp;</strong>Available only in developer mode (devmode).&nbsp;To enable devmode, call &#39;com.webos.service.devmode&#39; (&#39;setDevMode&#39;) with value &#39;true&#39;.&nbsp;</p>",
            "acg": "application.devmode",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/dev/listApps",
            "description": "<p>Lists all of the registered applications.</p>\n\n<p><strong>Note:&nbsp;</strong></p>\n\n<ul>\n\t<li>Available only in developer mode (devmode).&nbsp;To enable devmode, call &#39;com.webos.service.devmode&#39; (&#39;setDevMode&#39;) with value &#39;true&#39;.&nbsp;</li>\n\t<li>Works for devmode app type.</li>\n</ul>",
            "acg": "application.devmode",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "properties",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/dev/managerInfo",
            "description": "<p>Provides information provided by&nbsp;listLaunchPoints,running, and listApps APIs.&nbsp;Gets all of the launchpoints and lists all of the registered applications.&nbsp;Lists the background/foreground applications and their process IDs that are running on device.</p>",
            "acg": "application.devmode",
            "parameters": []
        },
        {
            "uri": "com.webos.service.applicationmanager/dev/running",
            "description": "<p>Lists the background/foreground applications and their process IDs that are running on the webOS platform.</p>\n\n<p><strong>Note:&nbsp;</strong></p>\n\n<ul>\n\t<li>Available only in developer mode (devmode).&nbsp;To enable devmode, call &#39;com.webos.service.devmode&#39; (&#39;setDevMode&#39;) with value &#39;true&#39;.&nbsp;</li>\n\t<li>Works for devmode app type.</li>\n</ul>",
            "acg": "application.devmode",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/getAppBasePath",
            "description": "<p>Gets the path of the application.</p>\n\n<p><strong>Note: </strong>This API is useful to get base directory path of installed application.</p>",
            "acg": "application.operation",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/getAppInfo",
            "description": "<p>Gets the application information.</p>\n\n<p><strong>Note:</strong> The information is generated from appinfo.json file.</p>",
            "acg": "application.operation",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "properties",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/getAppLifeEvents",
            "description": "<p>Provides the application&#39;s&nbsp;event status in its life cycle.</p>",
            "acg": "application.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/getAppLifeStatus",
            "description": "<p>Provides the application&#39;s life cycle status.</p>\n\n<p><strong>Note:</strong> This API is useful to do something based on application&#39;s life cycle status.</p>",
            "acg": "application.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/getAppStatus",
            "description": "<p>Gets the application status and information.</p>",
            "acg": "application.operation",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "appInfo",
                    "required": "no",
                    "type": "Object: appInfo"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/getForegroundAppInfo",
            "description": "<p>Gets the information on the foreground application.</p>\n\n<p><strong>Note:</strong> The information comes from LSM. Please use extraInfo parameter to get raw responsePayload from LSM.</p>",
            "acg": "application.operation",
            "parameters": [
                {
                    "name": "extraInfo",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/launch",
            "description": "<p>Launches an application corresponding to the given application ID. Opens the service or app.</p>\n\n<p>Example: The user can download a content with a service in the background. Once the content is downloaded, the service must launch the app again.</p>\n\n<p>Parameter can be given&nbsp;in the JSON object during the launch of the application. The method can be called multiple times for the same application with different parameters. Application should handle these overtime requests. Generally, application is re-launched for every request.</p>\n\n<p><strong>Note : </strong>At least one parameter is required. (&#39;id&#39;, &#39;launchPointId&#39;, &#39;instanceId&#39;)</p>",
            "acg": "application.launcher",
            "parameters": [
                {
                    "name": "id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "launchPointId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "params",
                    "required": "no",
                    "type": "Object: params"
                },
                {
                    "name": "keepAlive",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/listApps",
            "description": "<p>Lists all of the registered applications.</p>\n\n<p><strong>Note:</strong> Client can get all installed application information using&nbsp;this API.</p>",
            "acg": "application.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "properties",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/listLaunchPoints",
            "description": "<p>Gets all of the launchpoints.</p>\n\n<p><strong>Note:</strong> LaunchPoint is the virtual instance of an application. The webOS provides <strong>shortcut</strong> based on launchPoint.</p>",
            "acg": "application.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/lockApp",
            "description": "<p>Locks an application.&nbsp;</p>\n\n<p><strong>Note:&nbsp;</strong></p>\n\n<ul>\n\t<li>Once it is locked, the application cannot be launched.</li>\n\t<li>This method is only called internally. Do not use this method in your application.</li>\n</ul>",
            "acg": "application.launcher",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "lock",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/pause",
            "description": "<p>Pauses an application.</p>\n\n<p><strong>Note</strong>: At least one parameter is required. (&#39;id&#39;, &#39;launchPointId&#39;, &#39;instanceId&#39;)</p>",
            "acg": "application.launcher",
            "parameters": [
                {
                    "name": "id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "launchPointId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "params",
                    "required": "no",
                    "type": "Object"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/registerApp",
            "description": "<p>Registers to receive events related to app life cycle.</p>",
            "acg": "application.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/removeLaunchPoint",
            "description": "<p>Removes a dynamic launchpoint.</p>\n\n<p><strong>Note:</strong> It can cause application uninstall.</p>",
            "acg": "application.launcher",
            "parameters": [
                {
                    "name": "launchPointId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/running",
            "description": "<p>Lists the background/foreground applications and their process IDs that are running on webOS platform.</p>\n\n<p><strong>Note:</strong> This API is one of key methods of applicationmanager.</p>",
            "acg": "application.launcher",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.applicationmanager/updateLaunchPoint",
            "description": "<p>Updates a dynamic launchpoint.</p>\n\n<p><strong>Note:</strong> If a user changes the HDMI application icon to another icon like a game icon using Input Manager on a TV, the HDMI application icon is dynamically&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;changed to the new icon on the launcher.</p>",
            "acg": "application.launcher",
            "parameters": [
                {
                    "name": "launchPointId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "title",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "icon",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bgImage",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bgColor",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "imageForRecents",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "iconColor",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "largeIcon",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "appDescription",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "params",
                    "required": "no",
                    "type": "Object: params"
                },
                {
                    "name": "bgImages",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "tileSize",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "unmovable",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "userData",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "icons",
                    "required": "no",
                    "type": "Object array"
                },
                {
                    "name": "favicon",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "policyCategory",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "relaunch",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/UMI/connect",
            "description": "<p>Establishes connection for the audio resource.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "outputMode",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "audioType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sink",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "source",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sourcePort",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/UMI/disconnect",
            "description": "<p>Disconnects the connection.&nbsp;</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "sink",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "source",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sourcePort",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "audioType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "context",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/UMI/getStatus",
            "description": "<p>Shows&nbsp;the&nbsp;connection status of audio resources.&nbsp;</p>",
            "acg": "audio.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.audio/UMI/mute",
            "description": "<p>Mutes or unmutes&nbsp;the input volume of the requested connection.</p>\n\n<p><strong>Note: </strong>This method is added for future-use. It does not have any impact on the audio setting.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "sink",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "source",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sourcePort",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "mute",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/checkAudioEffectStatus",
            "description": "<p>Check the status of an audio effect.</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "effectName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/controlPlayback",
            "description": "<p>Controls playback operations&nbsp;like&nbsp;stop, pause/resume for audio samples that are played using the playSound method.&nbsp;</p>",
            "acg": "audio.management",
            "parameters": [
                {
                    "name": "playbackId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "requestType",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/getAudioEffectList",
            "description": "<p>Lists all the supported audio effects.</p>",
            "acg": "audio.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.audio/getAudioEffectsStatus",
            "description": "<p>Gets the status of all the audio effects.</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/getInputVolume",
            "description": "<p>Gets the input volume for audio streams.</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "streamType",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/getPlaybackStatus",
            "description": "<p>Checks the status of playback&nbsp;which is played using playSound method.&nbsp;</p>",
            "acg": "audio.previlagequery",
            "parameters": [
                {
                    "name": "playbackId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/getSoundInput",
            "description": "<p>Gets the current active sound input device.</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/getSoundOutput",
            "description": "<p>Gets the current active sound output device.</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/getSourceInputVolume",
            "description": "<p>Gets input volume of the source.</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "sourceType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/getSourceStatus",
            "description": "<p>Gets the status of the&nbsp;source.</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "sourceType",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/getStreamStatus",
            "description": "<p>Gets the status and information of the active stream.</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "streamType",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/listSupportedDevices",
            "description": "<p>Gets the list of supported audio&nbsp;input and output devices and their connection status.</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "query",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/master/getMicVolume",
            "description": "<p>Gets volume of currently active microphone input.</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number (int8_t)"
                },
                {
                    "name": "soundInput",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/master/getVolume",
            "description": "<p>Gives the current&nbsp;master volume of the audio output device.&nbsp;</p>",
            "acg": "audio.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "soundOutput",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/master/muteMic",
            "description": "<p>Mutes/unmutes the currently active microphone input device.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number (int8_t)"
                },
                {
                    "name": "mute",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "soundInput",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/master/muteVolume",
            "description": "<p>Mutes or unmutes the master volume of the audio output device.&nbsp;</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "mute",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "sessionId",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "soundOutput",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/master/setMicVolume",
            "description": "<p>Sets the volume of the currently active microphone input device.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number (int8_t)"
                },
                {
                    "name": "volume",
                    "required": "yes",
                    "type": "Number (int8_t)"
                },
                {
                    "name": "soundInput",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/master/setVolume",
            "description": "<p>Sets the master volume of the audio output device.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "sessionId",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "soundOutput",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "volume",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/master/volumeDown",
            "description": "<p>Reduces&nbsp;the master volume of the device.&nbsp;</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "soundOutput",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sessionId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/master/volumeUp",
            "description": "<p>Increases the master volume of the device.&nbsp;</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "sessionId",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "soundOutput",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/media/setVolume",
            "description": "<p>Sets the volume level of the current or the specified scenario.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "volume",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "sessionId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/muteSink",
            "description": "<p>Mutes the sink volume.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "streamType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mute",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/muteSource",
            "description": "<p>Mutes the source volume.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "sourceType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mute",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/playSound",
            "description": "<p>Plays <strong>PCM</strong> audio files through PulseAudio&nbsp;sound server.</p>",
            "acg": "audio.management",
            "parameters": [
                {
                    "name": "fileName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sink",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "format",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "sampleRate",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "channels",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/registerTrack",
            "description": "<p>Registers a playback by an application/service and returns a track ID.</p>\n\n<p>The track ID must be used to control the volume of that&nbsp;particular playback by using <strong>setTrackVolume()</strong>.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "streamType",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/setAudioEffect",
            "description": "<p>Sets the status of an audio effect.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "effectName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "enabled",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/setAudioEqualizerBandLevel",
            "description": "<p>Sets the equalizer band level.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "band",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "level",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/setAudioEqualizerPreset",
            "description": "<p>Sets the equalizer preset value.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "preset",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/setInputVolume",
            "description": "<p>Sets the input volume for audio streams.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "streamType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "volume",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "ramp",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/setSoundInput",
            "description": "<p>Sets the sound input device for recording.</p>",
            "acg": "audio.management",
            "parameters": [
                {
                    "name": "soundInput",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/setSoundOutput",
            "description": "<p>Sets the sound output device.</p>",
            "acg": "audio.management",
            "parameters": [
                {
                    "name": "soundOutput",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/setSourceInputVolume",
            "description": "<p>Sets input volume of the source.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "sourceType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "volume",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "ramp",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/setTrackVolume",
            "description": "<p>Sets the volume for a specific playback that is identified by the track ID (obtained by using <strong>registerTrack()</strong>).</p>\n\n<p>The effective playback volume is calculated as a percentage of the stream volume of the corresponding track.</p>\n\n<p>Example 1:&nbsp;</p>\n\n<ul>\n\t<li>Stream volume: 100</li>\n\t<li>Track (playback) volume set using <strong>setTrackVolume()</strong>: 100</li>\n\t<li>Effective volume of the track: 100 * 100/100 = 100</li>\n</ul>\n\n<p>Example 2:&nbsp;</p>\n\n<ul>\n\t<li>Stream volume: 80</li>\n\t<li>Track (playback) volume set using <strong>setTrackVolume()</strong>: 100</li>\n\t<li>Effective volume of the track: 80 * 100/100 = 80</li>\n</ul>\n\n<p>Example 3:</p>\n\n<ul>\n\t<li>Stream Volume:&nbsp;40</li>\n\t<li>Track (playback) volume set using <strong>setTrackVolume()</strong>:&nbsp;50</li>\n\t<li>Effective volume of the playback: 40 * 50/100 = 20</li>\n</ul>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "trackId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "volume",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/soundSettings/setSoundOut",
            "description": "<p>Sets the audio output device.&nbsp;</p>",
            "acg": "audio.management",
            "parameters": [
                {
                    "name": "soundOut",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/systemsounds/playFeedback",
            "description": "<p>Plays the various system alert sounds based on the name passed to it.</p>",
            "acg": "audio.management",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sink",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "play",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "override",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/udev/event",
            "description": "<p>Gives the<strong> audiod</strong> information regarding the USB Mic/Headset Connected/Disconnected events based on the udev rules.</p>\n\n<p>It also provides the sound card number and device number information.</p>",
            "acg": "audio.management",
            "parameters": [
                {
                    "name": "event",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "soundcard_no",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "device_no",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audio/unregisterTrack",
            "description": "<p>Unregisters a playback by an application/service.</p>",
            "acg": "audio.operation",
            "parameters": [
                {
                    "name": "trackId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiofocusmanager/getStatus",
            "description": "<p>Queries&nbsp;the current status of the audiofocusmanager.</p>",
            "acg": "audiofocus.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "displayId",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiofocusmanager/releaseFocus",
            "description": "<p>Releases the audio resource.</p>",
            "acg": "audiofocus.operation",
            "parameters": [
                {
                    "name": "displayId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "streamType",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiofocusmanager/requestFocus",
            "description": "<p>Requests audio focus&nbsp;to access the&nbsp;audio resource</p>\n\n<p>On subscription, applications get the following suggestions:</p>\n\n<ul>\n\t<li>gain the resources (start audio playback)</li>\n\t<li>lost the resources permanently (stop audio playback)</li>\n\t<li>lost the resources temporarily (pause audio playback)</li>\n</ul>",
            "acg": "audiofocus.operation",
            "parameters": [
                {
                    "name": "requestType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "displayId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "streamType",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiooutput/audio/connect",
            "description": "<p>Connects the audio source to the audio sink.</p>",
            "acg": "audiooutput.management",
            "parameters": [
                {
                    "name": "source",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sink",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiooutput/audio/disconnect",
            "description": "<p>Disconnects from the audio sink.</p>\n\n<p><strong>Note: </strong>No changes if there is no connection.</p>",
            "acg": "audiooutput.management",
            "parameters": [
                {
                    "name": "source",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sink",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiooutput/audio/getStatus",
            "description": "<p>Lists the information of all the connected audio source and sinks.</p>",
            "acg": "audiooutput.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.audiooutput/audio/mute",
            "description": "<p>Mutes or unmutes the connected audio source.</p>",
            "acg": "audiooutput.management",
            "parameters": [
                {
                    "name": "source",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sink",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mute",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiooutput/audio/setSoundOut",
            "description": "<p>Sets the audio output device to which the audio must be routed.</p>",
            "acg": "audiooutput.management",
            "parameters": [
                {
                    "name": "soundOut",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiooutput/audio/volume/down",
            "description": "<p>Linearly decreases, the master volume of the audio output device.</p>",
            "acg": "audiooutput.management",
            "parameters": [
                {
                    "name": "soundOutput",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiooutput/audio/volume/getStatus",
            "description": "<p>Lists the information of all available audio output devices.</p>",
            "acg": "audiooutput.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.audiooutput/audio/volume/muteSoundOut",
            "description": "<p>Mutes the audio output device.</p>",
            "acg": "audiooutput.management",
            "parameters": [
                {
                    "name": "soundOutput",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mute",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiooutput/audio/volume/set",
            "description": "<p>Sets the volume of the audio output device, to a&nbsp;specific numerical value.</p>",
            "acg": "audiooutput.management",
            "parameters": [
                {
                    "name": "soundOutput",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "volume",
                    "required": "yes",
                    "type": "Number (int8_t)"
                }
            ]
        },
        {
            "uri": "com.webos.service.audiooutput/audio/volume/up",
            "description": "<p>Linearly increases, the master volume of the audio output device.</p>",
            "acg": "audiooutput.management",
            "parameters": [
                {
                    "name": "soundOutput",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/a2dp/connect",
            "description": "<p>Connects to the A2DP profile on the specified remote device.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/a2dp/disableDelayReporting",
            "description": "<p>Disables the AVDTP delay reporting.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/a2dp/disconnect",
            "description": "<p>Drops the connection to the given remote device on the A2DP profile.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/a2dp/enableDelayReporting",
            "description": "<p>Enables the AVDTP delay reporting.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/a2dp/getDelayReportingTime",
            "description": "<p>Gets the AVDTP delay from a remote A2DP device, whenever the AVDTP delay is changed.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/a2dp/getStatus",
            "description": "<p>Returns the status of the A2DP connection to a remote device.</p>\n\n<p><strong>Note:</strong> If the&nbsp;<strong>address</strong>&nbsp;input parameter is not specified, the method will return the information of the device whose&nbsp;connection or playing status has been changed.&nbsp;</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/awaitPairingRequests",
            "description": "<p>Awaits incoming pairing requests on the default Bluetooth adapter (only) by setting its state to be pairable. The caller must subscribe to this method. It expects the caller will stay subscribed to this method across multiple pairing requests for as long as the webOS device wishes to accept pairing requests.</p>\n\n<p>Only one pairing request, either incoming or outgoing, can be active for an adapter at a given time.</p>\n\n<ul>\n\t<li>An outgoing pairing request is active&nbsp;until the service ends the subscription to <strong>adapter/pair</strong>&nbsp;by sending a subscription response containing&nbsp;<strong>request:endPairing</strong>.</li>\n\t<li>An incoming pairing request is active once a subscription response to this method contains&nbsp;<strong>request:displayPinCode</strong>,&nbsp;<strong>request:displayPasskey</strong>,&nbsp;<strong>request:confirmPasskey</strong>,&nbsp;<strong>request:enterPinCode</strong>, or&nbsp;<strong>request:enterPinCode</strong>.&nbsp;</li>\n\t<li>An incoming pairing request&nbsp;becomes inactive\n\t<ul>\n\t\t<li>When a subscription response to this method contains&nbsp;<strong>request:endPairing.</strong></li>\n\t\t<li>When&nbsp;<strong>the pairing succeeds (</strong>with the corresponding device having <strong>paired</strong> field as true).&nbsp;In this case, there is no <strong>request:endPairing</strong> response. So that the user or client needs to monitor the <strong>paired&nbsp;</strong>field of the remote device with <strong>device/getStatus</strong>.&nbsp;</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>If the client calls<strong>&nbsp;LSCallCancel()</strong>, any active incoming pairing request is canceled the same way as if the&nbsp;<strong>adapter/cancelPairing&nbsp;</strong>method had been called.</li>\n\t<li>A remote device can only be paired to a single adapter.</li>\n\t<li>If it is ever possible to allow incoming pairing on adapters other than the default, an optional&nbsp;<strong>adapterAddress</strong>&nbsp;parameter will be added to the parameter list.</li>\n</ul>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/cancelDiscovery",
            "description": "<p>Cancels discovering the remote Bluetooth devices.</p>\n\n<p><strong>Note:</strong> Discovery of a specific adapter can&nbsp;be canceled based on the adapter address passed.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/cancelPairing",
            "description": "<p>Cancels the pairing request with a remote device, either incoming or outgoing. Sends a success&nbsp;response immediately.</p>\n\n<p>Once the SIL (Stack Interface Layer)&nbsp;calls back,</p>\n\n<ul>\n\t<li>If the cancel succeeds, it causes a&nbsp;<strong>request:endPairing</strong>&nbsp;subscription response to <strong>adapter/pair</strong>&nbsp;or <strong>adapter/awaitPairingRequests</strong>&nbsp;with a &quot;Pairing canceled by user&quot; error.</li>\n\t<li>If the cancel fails, it causes a&nbsp;<strong>request:continuePairing</strong>&nbsp;subscription response.</li>\n</ul>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/getStatus",
            "description": "<p>Returns the status information about the Bluetooth&nbsp;adapters available in the system.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/pair",
            "description": "<p>Pairs a specific remote Bluetooth device with a specific Bluetooth adapter. The caller must subscribe to this method.</p>\n\n<p>Only one pairing request, either incoming or outgoing, can be active for an adapter at a given time.</p>\n\n<ul>\n\t<li>An outgoing pairing request is active&nbsp;until the service ends the subscription to this method by sending a subscription response containing&nbsp;<strong>request:endPairing</strong>.</li>\n\t<li>An incoming pairing request is active once a subscription response to&nbsp;<strong>adapter/awaitPairingRequests&nbsp;</strong>contains&nbsp;<strong>request:displayPinCode</strong>,&nbsp;<strong>request:displayPasskey</strong>,&nbsp;<strong>request:confirmPasskey</strong>,&nbsp;<strong>request:enterPinCode</strong>, or&nbsp;<strong>request:enterPinCode</strong>.</li>\n\t<li>An incoming pairing becomes inactive when a subscription response contains&nbsp;<strong>request:endPairing</strong>.&nbsp;</li>\n</ul>\n\n<p>If the client calls<strong>&nbsp;LSCallCancel()</strong>, the pairing is canceled the same way as if&nbsp;<strong>adapter/cancelPairing</strong>&nbsp;had been called.</p>\n\n<p><strong>Note:</strong> A remote device can only be paired to a single adapter.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/queryAvailable",
            "description": "<p>Returns the information on the Bluetooth adapters currently available in the system. The caller subscribes to this method to get informed of added/removed adapters (e.g., Bluetooth dongles) dynamically.</p>\n\n<p><strong>Note:</strong> The information returned for an adapter doesn&#39;t change while it is available.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/setState",
            "description": "<p>Sets the state of the specified Bluetooth adapter.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "name",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "powered",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "discoveryTimeout",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "discoverable",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "discoverableTimeout",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "pairable",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "pairableTimeout",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/startDiscovery",
            "description": "<p>Starts discovering the remote Bluetooth devices.&nbsp;</p>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li>Discovery&nbsp;continues until&nbsp;<strong>adapter/cancelDiscovery</strong>&nbsp;is called or for&nbsp;<strong>bluetooth2AdapterStatus.</strong><strong>discoveryTimeout</strong>&nbsp;seconds (if non-zero).</li>\n\t<li>The Discovery of a specific Adapter can be invoked by passing the adapter address.</li>\n\t<li>To get the list of&nbsp;devices found, subscribe to&nbsp;<strong>device/getStatus</strong>.</li>\n</ul>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/supplyPasskey",
            "description": "<p>Supplies&nbsp;the user-entered passkey.</p>\n\n<p><strong>Note:</strong> The passkey is entered when <strong>adapter/pair</strong> sends a subscription response containing <strong>request:enterPasskey</strong>.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "passkey",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/supplyPasskeyConfirmation",
            "description": "<p>Supplies&nbsp;the user&#39;s confirmation for&nbsp;the passkey.</p>\n\n<p><strong>Note: </strong>The user confirms the passkey when <strong>adapter/pair </strong>sends a subscription response containing <strong>request:confirmPasskey</strong>.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "accept",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/supplyPinCode",
            "description": "<p>Supplies&nbsp;the user-entered PIN code.</p>\n\n<p><strong>Note:</strong> The PIN code is entered when <strong>adapter/pair</strong> sends a subscription response containing <strong>request:enterPinCode</strong>.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "pin",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/adapter/unpair",
            "description": "<p>Disconnects from the paired remote device.</p>\n\n<p><strong>Note:</strong> All pairing information about the remote device will be removed and any open connections will be closed. However, the remote device is still discoverable.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/awaitMediaMetaDataRequest",
            "description": "<p>Awaits incoming media metadata requests from remote devices. This method is available only for TG (Target).</p>\n\n<p>The method just listens the requests from CT (Controller) and lets the caller of the method in TG know the requests.</p>\n\n<p>We assume that the caller already knows the media or playback status information or can get it from the other services such as media or music service.<br />\nThe caller in TG is expected to send proper information by using the <strong>avrcp/supplyMediaMetaData</strong>&nbsp;method to CT after receiving the request returned from the <strong>avrcp/awaitMediaMetaDataRequest</strong>&nbsp;method.</p>\n\n<p>In AVRCP, metadata attributes for the currently playing media element can be retrieved by the CT by using the GetElementAttributes command. This allows the CT to request a specific set, or all attributes from the TG. These attributes include such as title and artist. The CT&nbsp;also might be interested to know the current status of a media track or when media track is changed, so that new media information can be displayed on the controller&rsquo;s display.</p>\n\n<p>The CT could do one of:</p>\n\n<p>i) Querying for play status or<br />\nii) Registering with the TG to receive play status notifications.</p>\n\n<p>The TG&nbsp;then sends a notification PDU when a status is changed if the CT had registered for that change.</p>\n\n<p><strong>Note:</strong> Currently, this method is focusing on only TG operations which are triggered by CT requests or queries. The CT operations and TG notification by registration of CT will be added later in the same category.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/awaitMediaPlayStatusRequest",
            "description": "<p>Awaits the incoming media play status&nbsp;requests from remote devices. This method is available only for the&nbsp; TG (Target).</p>\n\n<p>The <strong>avrcp/awaitMediaPlayStatusRequest</strong>&nbsp;method used for the TG just listens to the requests from CT (Controller) and lets the caller of the method&nbsp;in TG know the requests.</p>\n\n<p>We assume that the caller already knows the media or playback status information or can get it from the other services such as media or music service.<br />\nThe caller in TG is expected to send the proper information by using <strong>avrcp/supplyMediaPlayStatus</strong>&nbsp;method to CT after receiving the request returned from the <strong>avrcp/awaitMediaPlayStatusRequest</strong>&nbsp;method.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/browse/addToNowPlaying",
            "description": "<p>Adds the browsed item to the current playing list.</p>\n\n<p><strong>Note</strong>:</p>\n\n<ul>\n\t<li>When user selects a playable item (playable is set to true for the item in the getFolderItems response) among the items listed, the application can call this API with the path received in the <strong>bluetooth2FolderItem</strong>&nbsp;object of the <strong>getFolderItems</strong> response to add the item to the now playing list.</li>\n\t<li>The application can call <strong>addToNowPlaying</strong> with the path to the folder, if the folder is playable.</li>\n</ul>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "itemPath",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/browse/changePath",
            "description": "<p>Navigates the virtual filesystem presented by the remote media player. This API can be called to change to a specific folder for browsing. &quot;type&quot; field of bluetooth2FolderItem received as response to getFolderITems indicates if the item is audio/video or folder. If the item is &quot;folder&quot; then the API can be called with corresponding path to browse the folder.</p>\n\n<p>Browsing folder can be changed to a folder that is one level up or down to the current folder in hierarchy.</p>\n\n<p><strong>Example:</strong>&nbsp;Folder cannot be changed directly from media/album/album1/ to /media/artist/artist1.</p>\n\n<p>We need to move first from /media/album/album1 ==&gt; to /media/album/ ==&gt; then to /media/ ==&gt; then to /media/artist/ ==&gt; and then to /media/artist/artist1.<br />\nNote that for going back to a parent folder also the API needs to be called with the parent folder path.</p>\n\n<p>When the API succeeds, the current browsing folder changes, hence the application will receive the subscription response to the <strong>getCurrentFolder </strong>API.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "itemPath",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/browse/getCurrentFolder",
            "description": "<p>Gets the current folder in the media player&#39;s virtual filesystem presented by AVRCP TG which can be browsed for the media content.</p>\n\n<p><strong>Example:</strong> As the user navigates to a sub folder or a parent folder, browsing folder changes. The information (i.e. the new current folder) is provided as subscription response of this API.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/browse/getFolderItems",
            "description": "<p><span style=\"background-color:rgb(255, 255, 255); color:rgb(51, 51, 51)\">Gets the items in the current folder of the media player&#39;s virtual filesystem presented by AVRCP TG. It takes startIndex and endIndex as argument and gets the items within this range.</span></p>\n\n<p><span style=\"background-color:rgb(255, 255, 255); color:rgb(51, 51, 51)\">It is recommended to fetch a part of the list at a time and update it as user scrolls the display to avoid any delay in fetching the items from AVRCP_TG and displaying the items. This can be done by specifying the range using startIndex and endIndex. endIndex should be less than total number of items received using getNumberOfItems API. Application should not call getFolderItems API if the folder is empty.</span></p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "startIndex",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "endIndex",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/browse/getNumberOfItems",
            "description": "<p style=\"text-align:start\">Retrieves the total number of items in the current folder of the media player&#39;s virtual file system presented by the AVRCP TG.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/browse/playItem",
            "description": "<p>Plays the browsed item.</p>\n\n<p><strong>Note</strong>:</p>\n\n<ul>\n\t<li>When user selects a playable item (playable is set to true for the item in the getFolderItems response) among the items listed</li>\n\t<li>The application can call the API with the path received in the <strong>bluetooth2AvrcpFolderItem</strong>&nbsp;object of <strong>getFolderItems</strong> response to play the selected item.</li>\n</ul>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "itemPath",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/browse/search",
            "description": "<p>Searches an item in the current browsing folder (and its sub folders) using a search string.</p>\n\n<p><strong>Note</strong>:</p>\n\n<ul>\n\t<li>The API succeeds only if the player is searchable.</li>\n\t<li>The &quot;searchable&quot; field of <strong>bluetooth2AvrcpPlayerInfo</strong> object for the addressed player received in the <strong>getPlayerInfo</strong> response indicates if the player supports search feature.</li>\n</ul>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "searchString",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/connect",
            "description": "<p>Opens an AVRCP connection to a remote Bluetooth device.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/disconnect",
            "description": "<p>Drops the connection to the given remote device on the AVRCP profile.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/getMediaMetaData",
            "description": "<p>Gets media metadata of the target from remote devices connected via AVRCP 1.3 profile.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/getMediaPlayStatus",
            "description": "<p>Gets the media metadata of the target from remote devices connected via AVRCP 1.3 profile.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/getPlayerApplicationSettings",
            "description": "<p>Gets the player application settings value.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/getPlayerInfo",
            "description": "<p>Returns the information of the media players available that is received from AVRCP TG (AVRCP Target). Subscription response will be received by the application whenever a new media player is added or a media player is removed from the media player list received from AVRCP TG.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/getRemoteVolume",
            "description": "<p>Gets the volume of the remote device.</p>\n\n<p><strong>Note:</strong> The method supports &#39;Volume Changed Notification&#39; only.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "address",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/getStatus",
            "description": "<p>Returns the status of an AVRCP connection to a remote Bluetooth device.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/internal/disable",
            "description": "<p>Disables the profile and role of AVRCP.</p>",
            "acg": "bluetooth.devutility",
            "parameters": [
                {
                    "name": "role",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/internal/enable",
            "description": "<p>Enables the profile and the role of AVRCP.</p>",
            "acg": "bluetooth.devutility",
            "parameters": [
                {
                    "name": "role",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/internal/getRemoteFeatures",
            "description": "<p>Gets the remote AVRCP&#39;s features.</p>",
            "acg": "bluetooth.devutility",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/internal/getSupportedNotificationEvents",
            "description": "<p>Gets the remote AVRCP&#39;s supported notification events.</p>",
            "acg": "bluetooth.devutility",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/notifyMediaPlayStatus",
            "description": "<p>Enables the <strong>AVRCP target</strong> to inform the <strong>AVRCP controller</strong> about the change in media play status or position without controller requesting for the same.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "playbackStatus",
                    "required": "yes",
                    "type": "Object: bluetooth2PlayStatus"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/receivePassThroughCommand",
            "description": "<p>Receives PATH THROUGH command from CT to TG.</p>\n\n<p><strong>Note:</strong> The PASS THROUGH command is used to transfer user operation information from a CT (Controller) to Panel sub-unit on TG (Target).</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/sendPassThroughCommand",
            "description": "<p>Sends PASS THROUGH command from CT (Controller) to TG (Target).</p>\n\n<p><strong>Note: </strong>The PASS THROUGH command is used to transfer user operation information from the CT to the panel sub-unit on the TG.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "keyCode",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "keyStatus",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/setAbsoluteVolume",
            "description": "<p>Sets the absolute volume on the target device.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "volume",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/setPlayerApplicationSettings",
            "description": "<p>Sets the player application settings value.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "equalizer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "repeat",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "shuffle",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "scan",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/supplyMediaMetaData",
            "description": "<p>Supplies&nbsp;media metadata of the target to remote devices connected via AVRCP 1.3 profile.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "requestId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "metaData",
                    "required": "yes",
                    "type": "Object: bluetooth2MediaMetaData"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/avrcp/supplyMediaPlayStatus",
            "description": "<p>Supplies media play status of the target to remote devices connected via AVRCP 1.3 profile.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "requestId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "playbackStatus",
                    "required": "yes",
                    "type": "Object: bluetooth2PlayStatus"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/device/getDiscoveredDevice",
            "description": "<p>Gets the newly discovered Bluetooth device information known to the system.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/device/getPairedDevices",
            "description": "<p>Gets a list of paired Bluetooth devices info,&nbsp;known to the system.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/device/getStatus",
            "description": "<p>Gets the current status of remote Bluetooth devices known to the system.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/device/setState",
            "description": "<p>Sets the local values for the state of a remote device.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "trusted",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "blocked",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/addService",
            "description": "<p>Adds a new service definition to the local database.</p>\n\n<p><strong>Note:</strong> The new service will be directly exposed to clients which are discovering available services.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "service",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "includes",
                    "required": "yes",
                    "type": "String array"
                },
                {
                    "name": "characteristics",
                    "required": "yes",
                    "type": "Object array: bluetooth2GattCharacteristicInfo"
                },
                {
                    "name": "serverId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/closeServer",
            "description": "<p>Closes the BluetoothGattServer.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "serverId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/connect",
            "description": "<p>Connects to the GATT profile on the specified remote device.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "autoConnect",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/disconnect",
            "description": "<p>Drops the connection to the given remote device on GATT profile.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "clientId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/discoverServices",
            "description": "<p>Discovers available services for the given remote device.</p>\n\n<p><strong>Pre-requisite:</strong></p>\n\n<ul>\n\t<li>The given remote device should be connected through <strong>gatt/connect</strong> method. Otherwise, the method will fail.</li>\n</ul>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>When a discovery process is already running, any further call to this method will succeed but will not restart the discovery.</li>\n\t<li>Current discovery state is notified through <strong>gatt/getStatus</strong> method.</li>\n\t<li>Discovered services are notified through <strong>gatt/getServices</strong> method.&nbsp;</li>\n</ul>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/getServices",
            "description": "<p>Gets available services for either the given local Bluetooth adapter or remote device.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul style=\"margin-left:0px; margin-right:0px\">\n\t<li>Depending on the passed parameter, a list of services is returned:\n\t<ul>\n\t\t<li>If <strong>adapterAddress</strong> is passed, a list of services for the given adapter will be returned.</li>\n\t\t<li>If <strong>address</strong> is passed, a list of services for the given remote device will be returned.</li>\n\t\t<li>If both <strong>address</strong> and <strong>adapterAddress</strong>&nbsp;are passed, the method will return an error.</li>\n\t\t<li>If none of both is passed, the method will return an error.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/getStatus",
            "description": "<p>Returns the status of GATT connection to the given remote device.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/monitorCharacteristic",
            "description": "<p>Monitors specific characteristic value changes.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>If the characteristic is not marked as being notifiable, the method will&nbsp;fail.</li>\n\t<li>If the address is not set, monitors specific characteristics of the local service for value&nbsp;changes.</li>\n\t<li>If the address is set, monitors specific characteristics of the given remote device for characteristic value&nbsp;changes.</li>\n</ul>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "service",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "characteristic",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "InstanceId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "serverId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "clientId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/monitorCharacteristics",
            "description": "<p>Monitors specific characteristic value changes.</p>\n\n<ul>\n\t<li>If the characteristic is not marked as being notifiable, the method will&nbsp;fail.</li>\n\t<li>If the address is not set, monitors specific characteristics of the local service for value&nbsp;changes.</li>\n\t<li>If the address is set, monitors specific characteristics of the given remote device for characteristic value&nbsp;changes.</li>\n</ul>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "service",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "characteristics",
                    "required": "yes",
                    "type": "String array"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "serverId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "clientId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/openServer",
            "description": "<p>Opens the BluetoothGattServer managing services.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/readCharacteristicValue",
            "description": "<p>Reads the value of a specific characteristic.&nbsp;</p>\n\n<p><strong>Note:&nbsp;</strong></p>\n\n<ul>\n\t<li>When called from client side, the method actively reads and retrieves the latest value from the remote device rather than returning the value from the local cache.</li>\n\t<li>When called from server side, the method just returns stored value from the local database.</li>\n</ul>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "service",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "characteristic",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "serverId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "clientId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/readCharacteristicValues",
            "description": "<p>Reads the value of a specific characteristic.&nbsp;</p>\n\n<ul>\n\t<li>When called from client side, the method actively reads and retrieves the latest value from the remote device rather than returning the value from the local cache.</li>\n\t<li>When called from server side, the method just returns stored value from the local database.</li>\n</ul>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "service",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "characteristics",
                    "required": "yes",
                    "type": "String array"
                },
                {
                    "name": "serverId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "clientId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/readDescriptorValue",
            "description": "<p>Reads the value of descriptor of a service characteristic either in the local adapter or the remote device.&nbsp;</p>\n\n<ul>\n\t<li>When called from client side, the method actively reads and retrieves the latest value from the remote device rather than returning the value from the local cache.</li>\n\t<li>When called from server side, the method just returns stored value from the local database.</li>\n</ul>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "service",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "characteristic",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "descriptor",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "serverId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "clientId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/readDescriptorValues",
            "description": "<p>Read the value of descriptor(s) of a service characteristic either in the local adapter or the remote device.&nbsp;</p>\n\n<ul>\n\t<li>When called from client side, the method actively reads and retrieves the latest value from the remote device rather than returning the value from the local cache.</li>\n\t<li>When called from server side, the method just returns stored value from the local database.</li>\n</ul>\n\n<p>&nbsp;</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "service",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "characteristic",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "descriptors",
                    "required": "yes",
                    "type": "String array"
                },
                {
                    "name": "serverId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "clientId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/removeService",
            "description": "<p>Remove a service definition from the local database. All characteristics which belong to the service will be also removed.</p>\n\n<p>If the given service is included by another service, the method will fail.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "service",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "serverId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/writeCharacteristicValue",
            "description": "<p>Writes the value for&nbsp;a local or remote&nbsp;characteristic.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "service",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "characteristic",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "value",
                    "required": "yes",
                    "type": "Object: bluetooth2GattValueInfo"
                },
                {
                    "name": "serverId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "clientId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "writeType",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/gatt/writeDescriptorValue",
            "description": "<p>Writes the value of a specific descriptor of a service characteristic either in the local adapter or the remote device.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "service",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "characteristic",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "descriptor",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "value",
                    "required": "yes",
                    "type": "Object: bluetooth2GattValueInfo"
                },
                {
                    "name": "serverId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "clientId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/hfp/connect",
            "description": "<p>Opens a HFP connection to a remote device.&nbsp;</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/hfp/disconnect",
            "description": "<p>Drops the connection to the given remote device on the HFP profile.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/hfp/getStatus",
            "description": "<p>Returns the status of a HFP connection to a remote device.</p>\n\n<p>If <strong>address</strong>&nbsp;input parameter is not specified, the method will return the information of the device whose&nbsp;connection status has been changed.&nbsp;</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/le/startAdvertising",
            "description": "<p>Starts broadcasting the Bluetooth&nbsp;Low Energy advertisement.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "settings",
                    "required": "no",
                    "type": "Object: bluetooth2AdvertiseSettings"
                },
                {
                    "name": "advertiseData",
                    "required": "no",
                    "type": "Object: bluetooth2AdvertiseData"
                },
                {
                    "name": "scanResponse",
                    "required": "no",
                    "type": "Object: bluetooth2AdvertiseData"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/le/startScan",
            "description": "<p>Starts scanning only ble devices.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "name",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "serviceUuid",
                    "required": "no",
                    "type": "Object: bluetooth2LeServiceUuidObject"
                },
                {
                    "name": "serviceData",
                    "required": "no",
                    "type": "Object: bluetooth2LeServiceDataObject"
                },
                {
                    "name": "manufacturerData",
                    "required": "no",
                    "type": "Object: bluetooth2LeManufacturerData"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/connect",
            "description": "<p>Connects to<strong> </strong>the<strong> MAS Instance</strong> of the specified remote device.</p>\n\n<p><strong>Note:</strong>&nbsp;The method is available only for <strong>MCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "instanceName",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/disconnect",
            "description": "<p>Disconnects from the <strong>MAS</strong> Instance on the specified remote device.</p>\n\n<p><strong>Note:</strong>&nbsp;The method is available only for <strong>MCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sessionId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/getFolderList",
            "description": "<p>Lists the available folders of the connected MAS instance of the MSE device.</p>\n\n<p><strong>Note:</strong>&nbsp;This method is available only for&nbsp;MCE.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sessionId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "startOffset",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "maxListCount",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/getMASInstances",
            "description": "<p>Retrieves the MAS instance details of a MSE device. MAP MSE devices may present one or several MAS Instances to the MCE, each providing the overall MAP MSE server functionality.</p>\n\n<p><strong>Note:</strong>&nbsp;The method is available only for <strong>MCE</strong>.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/getMessage",
            "description": "<p>Downloads the specific message based on the message handle.</p>\n\n<p><strong>Note:</strong> This method is available only for MCE.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "destinationFile",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "attachment",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "sessionId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/getMessageFilters",
            "description": "<p>Returns all the available fields that can be used in the fields filter of the <strong>getMessageList</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sessionId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/getMessageList",
            "description": "<p>Gets the message list of the specific folder of the connected MAS instance of the MSE device.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sessionId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "folder",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "filters",
                    "required": "no",
                    "type": "Object: bluetooth2MessageFilters"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/getMessageNotification",
            "description": "<p>Receives the message notification from the MSE device.</p>\n\n<p><strong>Note</strong>: This method is available only for MCE.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sessionId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/getStatus",
            "description": "<p>Returns the status of the MAS connection with a remote device.</p>\n\n<p><strong>Note:</strong>&nbsp;The method is available only for <strong>MCE</strong>.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "instanceName",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/pushMessage",
            "description": "<p>Sends the message.</p>\n\n<p>Example: Sending an SMS.</p>\n\n<p><strong>Note</strong>: The API is designed based on MAP 1.0 specification.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sessionId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sourceFile",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "folder",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "transparent",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "retry",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "charset",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/setFolder",
            "description": "<p>Returns to the child folder of the current directory of the connected MAS instance of the MSE device.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sessionId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "folder",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/map/setMessageStatus",
            "description": "<p>Modifies the status of a message on the MSE.</p>\n\n<p><strong>Note</strong>: This method is available only for MCE</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sessionId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "statusIndicator",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "statusValue",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/createAppKey",
            "description": "<p>Requests to generate a new application key.</p>\n\n<p>This call affects the local key database only. To update the remote config server, use <strong>mesh/model/config/set</strong>.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "netKeyIndex",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "appKeyIndex",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/createNetwork",
            "description": "<p>This is the first API that must be called by the application to create a network and to become a provisioner. This is called once for every network and the token returned should be stored securely by the application.</p>\n\n<p>This API should not be called if the local node is not acting as the provisioner.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/getMeshInfo",
            "description": "<p>Gets mesh network-related information.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/keyRefresh",
            "description": "<p>Refreshes the mesh network key and associated app keys.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "blacklistedNodes",
                    "required": "no",
                    "type": "Number array"
                },
                {
                    "name": "waitTimeout",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "refreshAppKeys",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "appKeyIndexes",
                    "required": "no",
                    "type": "Number array"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/listProvisionedNodes",
            "description": "<p>Gets a list of provisioned nodes.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/model/config/get",
            "description": "<p>Gets various configuration parameters provided by configuration model.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "destAddress",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "config",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "netKeyIndex",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/model/config/getCompositionData",
            "description": "<p>Gets composition data of a mesh node. The composition data contains information about a node, the elements it includes, and the supported models.</p>\n\n<p><strong>Note: </strong>The naming convention for this method is taken from the specification.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "destAddress",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/model/config/set",
            "description": "<p>Sets various configuration parameters provided by the configuration model.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "destAddress",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "config",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "netKeyIndex",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "appKeyIndex",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "modelId",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "ttl",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "gattProxyState",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "relayStatus",
                    "required": "no",
                    "type": "Object: BleMeshConfigRelayStatus"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/model/onOff/set",
            "description": "<p>Sets the on/off state of the remote node using a generic on-off model.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "destAddress",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "appKeyIndex",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "state",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/model/receive",
            "description": "<p>Receives messages addressed to the application.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "appKeyIndex",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/model/send",
            "description": "<p>Sends a message originated by a local model.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "srcAddress",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "destAddress",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "appKeyIndex",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "command",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "payload",
                    "required": "yes",
                    "type": "Object: BleMeshPayload - for &quot;passthrough&quot; command"
                },
                {
                    "name": "payload",
                    "required": "yes",
                    "type": "Object: BleMeshPayload - for &quot;onOff&quot; command"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/provision",
            "description": "<p>Initiates provisioning of a device.</p>\n\n<p>Once a mesh device is discovered using <strong>mesh/scanUnprovisionedDevices </strong>API, the discovered device can be provisioned using this method. After the provisioning, the device becomes a node in the mesh network.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "required": "no",
                    "type": "Number (uint16_t)"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "uuid",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/removeNode",
            "description": "<p>Removes the node from the network.</p>\n\n<p>Multiple nodes can be removed by calling this API multiple times.&nbsp;After the required nodes are removed from the mesh network, key refresh procedure for the corresponding app keys and net key must be initiated by the application using <strong>mesh/keyRefresh </strong>API to avoid compromising&nbsp;network security.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "primaryElementAddress",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/scanUnprovisionedDevices",
            "description": "<p>Scans for mesh devices to provision when the local node is provisioner.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "scanTimeout",
                    "required": "no",
                    "type": "Number (uint16_t)"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/supplyProvisioningNumeric",
            "description": "<p>Provides decimal number for authentication during provisioning; when &quot;request&quot; = &quot;promptNumeric&quot; in the subscription response of mesh/provision API.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "number",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/supplyProvisioningOob",
            "description": "<p>Supplies&nbsp;the static OOB data required during provision; when &quot;request&quot; = &quot;promptStatic&quot; in the subscription response of mesh/provision API.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "oobData",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/mesh/unprovisionedScanCancel",
            "description": "<p>Cancels scanning for unprovisioned BLE mesh devices.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bearer",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/opp/acceptTransferRequest",
            "description": "<p>Accept a Bluetooth object push request. This method is available only for a push server.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "requestId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapaterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/opp/awaitTransferRequest",
            "description": "<p>Await incoming transfer requests from push clients. This method is available only for a push server.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/opp/cancelTransfer",
            "description": "<p>Cancel an ongoing file transfer. This method is available only for a push server. In a client side, <strong>LSCallCancel()</strong> is used to cancel the transfer.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "requestId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/opp/connect",
            "description": "<p>Open (or initialize) an OPP connection to a remote Bluetooth device.</p>\n\n<p>In some cases of such as using BSA stack, only initialization of OPP capability is done by this method and the actual Bluetooth connection is created through the&nbsp;<strong>opp/pushFile</strong> method.</p>\n\n<p>If the client calls <strong>LSCallCancel()</strong>, the connection is closed and OPP setup is deinitialized (the <strong>opp/disconnect</strong> method also can be used for the disconnection).&nbsp;This method is available only for a push client.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/opp/disconnect",
            "description": "<p>Close (or deinitialize)&nbsp;the connection to the given remote device on OPP profile.</p>\n\n<p>In some cases of such as using BSA stack, this method performs only deinitialization of the OPP-related setup and the actual Bluetooth connection is dropped after finishing file transfer. This method is available only for a push client.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/opp/getStatus",
            "description": "<p>Return the status of an OPP connection to a remote Bluetooth device. This method is available for both of client and server.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/opp/monitorTransfer",
            "description": "<p>Return the status of ongoing file transfer requests. This method is only available for server.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/opp/pushFile",
            "description": "<p>Push a file to a remote Bluetooth device.&nbsp;<span style=\"line-height:1.6em\">This method is available only for push client. If the client calls </span><strong style=\"line-height:1.6em\">LSCallCancel()</strong><span style=\"line-height:1.6em\">, the file transfer is cancelled.</span></p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "sourceFile",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/opp/rejectTransferRequest",
            "description": "<p>Reject a Bluetooth object push request. This method is available only for a push server.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "requestId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/connect",
            "description": "<p>Connects to the&nbsp;<strong>PBAP</strong> profile on the specified remote device.</p>\n\n<p><strong>Note:</strong> This method is available only for <strong>PCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/disconnect",
            "description": "<p>Disconnects from the&nbsp;<strong>PBAP</strong> profile on the specified remote device.</p>\n\n<p><strong>Note:</strong> This method is available only for <strong>PCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/getPhoneBookProperties",
            "description": "<p>Gets the supported <strong>PBAP</strong> profile&nbsp;properties from <strong>PSE</strong> device.</p>\n\n<p><strong>Note:</strong> This method is available only for&nbsp;<strong>PCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/getSize",
            "description": "<p>Gets the total number of vcf entries from the selected phonebook path.</p>\n\n<p><strong>Note:</strong> This method is available only for&nbsp;<strong>PCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/getStatus",
            "description": "<p>Returns the status of a PBAP connection to a remote Bluetooth device.</p>\n\n<p><strong>Note: </strong>The method is available for both client and server.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/getvCardFilters",
            "description": "<p>Displays all the available vcard filters supported by Bluetooth stack.</p>\n\n<p><strong>Note:</strong> The&nbsp;method is available only for&nbsp;<strong>PCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/pullPhoneBook",
            "description": "<p>Retrieves all (given maxcount) the&nbsp;phonebook entries from a given startoffset and stores it in a local file.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "destinationFile",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "startOffset",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "maxListCount",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "vCardVersion",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "filterFields",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/pullvCard",
            "description": "<p>Given a vcard handle, retrieves the vcard in the current phonebook object and store it in a local file.</p>\n\n<p><strong>Note:</strong> This method is available only for&nbsp;<strong>PCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "destinationFile",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "vCardHandle",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "vCardVersion",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "filterFields",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/searchPhoneBook",
            "description": "<p>Searches for entries matching the given condition and returns an object of vcard-listing data&nbsp;where every entry consists of a pair of strings containing the vcard handle and the contact name.</p>\n\n<p><strong>Note:</strong> This method is available only for&nbsp;<strong>PCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "order",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "filter",
                    "required": "yes",
                    "type": "Object: bluetooth2PbapSearchFilter"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/setPhoneBook",
            "description": "<p>Sets the phonebook object for other operations.</p>\n\n<p><strong>Note:</strong> This method is available only for&nbsp;<strong>PCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "repository",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "object",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/pbap/vCardListing",
            "description": "<p>Displays the total number of vcf file entries from the selected phonebook path.</p>\n\n<p><strong>Note:</strong> This method is available only for&nbsp;<strong>PCE</strong>.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/spp/connect",
            "description": "<p>Open a SPP connection to a remote Bluetooth device.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "uuid",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/spp/createChannel",
            "description": "<p>Register a service record in the device service record database with the specified UUID and name. The channel can be removed through <strong>LSCallCancel()</strong>.</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "uuid",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/spp/disconnect",
            "description": "<p><span style=\"line-height:1.6em\">Drop the connection to the given remote device on SPP profile.</span></p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "channelId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/spp/getStatus",
            "description": "<p>Return the status of a SPP connection to a remote device.</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/spp/readData",
            "description": "<p>Receive data from the connected remote device.&nbsp;</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "channelId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "timeout",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bluetooth2/spp/writeData",
            "description": "<p>Transfer data to the connected remote device.&nbsp;</p>",
            "acg": "bluetooth.operation",
            "parameters": [
                {
                    "name": "channelId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "data",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bugreport/createBug",
            "description": "<p>Creates a bug ticket on Jira with the given data.</p>\n\n<p><strong>Note: </strong>This method&nbsp;is intended to be called by the bugreport app. If you want to use this in other modules, contact the API owner.</p>",
            "acg": "diagnostics.telemetry",
            "parameters": [
                {
                    "name": "summary",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "description",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "priority",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "reproducibility",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "screenshots",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.bugreport/getConfig",
            "description": "<p>Gets Jira configuration and files to be attached to the Jira ticket.</p>\n\n<p><strong>Note:&nbsp;</strong>This method&nbsp;is intended to be called by the bugreport app. If you want to use this in other modules, contact the API owner.</p>",
            "acg": "diagnostics.telemetry",
            "parameters": []
        },
        {
            "uri": "com.webos.service.bugreport/setConfig",
            "description": "<p>Sets the Jira configurations.</p>\n\n<p>Currently, the only configurations supported are:</p>\n\n<ul>\n\t<li>username</li>\n\t<li>password</li>\n</ul>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>These values are persisted across reboots until another value is set.</li>\n\t<li>This method&nbsp;is intended to be called by the bugreport app. If you want to use this in other modules, contact the API owner.</li>\n</ul>",
            "acg": "diagnostics.telemetry",
            "parameters": [
                {
                    "name": "account",
                    "required": "no",
                    "type": "Object: account"
                }
            ]
        },
        {
            "uri": "com.webos.service.bus/addManifestsDir",
            "description": "<p>Adds a directory containing manifests (security configuration files).</p>\n\n<p><strong>Note: </strong>Only services present in the &quot;hub.configuration&quot; security group &nbsp;are allowed to call this method.</p>",
            "acg": "servicebus.configuration",
            "parameters": [
                {
                    "name": "prefix",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "dirpath",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bus/addOneManifest",
            "description": "<p>Adds manifest file data to hub security configuration.</p>\n\n<p>Only services present in the &quot;hub.configuration&quot; security group &nbsp;are allowed to call this method.</p>",
            "acg": "servicebus.configuration",
            "parameters": [
                {
                    "name": "path",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "prefix",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bus/getServiceAPIVersions",
            "description": "<p>Gets service API version from the ls-hub. API version will be returned as a value of &quot;versions&quot; object. Value may have any type. It depends from the JSON object, which is set as a version for a particular service name in a role file. If service doesn&#39;t have service info, &quot;returnValue&quot; will be set to false and &quot;unknown&quot; list will contain the name.</p>",
            "acg": "servicebus.communication",
            "parameters": [
                {
                    "name": "services",
                    "required": "yes",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.bus/isCallAllowed",
            "description": "<p>Checks that call is allowed from specified requester to specified URI.</p>",
            "acg": "servicebus.communication",
            "parameters": [
                {
                    "name": "uri",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "requester",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bus/queryServicePermissions",
            "description": "<p>Queries a service to:</p>\n\n<ul>\n\t<li>Obtain the set of rules that are relevant to&nbsp;the service.</li>\n\t<li>List the API that are required (client permissions)</li>\n\t<li>List the API that are provided&nbsp;(API permissions).&nbsp;</li>\n</ul>\n\n<p>The A<span style=\"line-height:1.6\">PI permissions are compiled from the .api.json files and the c</span><span style=\"line-height:1.6\">lient permissions are compiled from the&nbsp;</span><span style=\"line-height:1.6\">.perm.json files</span><span style=\"line-height:1.6\">&nbsp;and from service registration in run&nbsp;</span><span style=\"line-height:1.6\">time.</span></p>\n\n<p><strong>Note: </strong>This method must be used for debugging a service. Do not use it in your runtime&nbsp;application.</p>",
            "acg": "servicebus.communication",
            "parameters": [
                {
                    "name": "service",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bus/removeManifestsDir",
            "description": "<p>Removes manifests directory&nbsp;which were added by the addManifestsDir method.</p>\n\n<p><strong>Note: </strong>Only services present in the &quot;hub.configuration&quot; security group &nbsp;are allowed to call this method.</p>",
            "acg": "servicebus.configuration",
            "parameters": [
                {
                    "name": "prefix",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "dirpath",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bus/removeOneManifest",
            "description": "<p>Removes manifest file data from hub security configuration.</p>\n\n<p>Only services present in the &quot;hub.configuration&quot; security group &nbsp;are allowed to call this method.</p>",
            "acg": "servicebus.configuration",
            "parameters": [
                {
                    "name": "path",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "prefix",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.bus/signal/registerServerStatus",
            "description": "<p>Registers a client to receive the&nbsp;signal sent by the bus, when a service is registered/unregistered on the bus.&nbsp;</p>",
            "acg": "servicebus.communication",
            "parameters": [
                {
                    "name": "serviceName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/capture",
            "description": "<p>Starts capturing images using the camera. The captured images are stored as separate files at the specified location.</p>\n\n<p>The default file name is of the format <em>PictureDDMMYYYY-HHMMSS</em>, where <em>DDMMYYYY-HHMMSS</em> is current date and time.</p>\n\n<p>Example: Picture11022019-204128.jpeg</p>\n\n<p><strong>Note:&nbsp;</strong>This method should be called after startPreview().</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "nimage",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "path",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/close",
            "description": "<p>Closes the connection between the camera and the webOS device.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "pid",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/getCameraList",
            "description": "<p>Gets the list of cameras connected to the webOS device.&nbsp;Returns IDs for each of the cameras connected to the device.</p>",
            "acg": "camera.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/getEventNotification",
            "description": "<p>Gets a notification&nbsp;when there is a change in any of the camera properties&nbsp;and formats or&nbsp;when there is an error event on your device.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/getFd",
            "description": "<p>Provides the FD (File Descriptor) for the POSIX shared memory.</p>\n    \n    <p><strong>Note: </strong>It returns the FD by attaching it using LS2 attach fd interface to the client.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/getFormat",
            "description": "<p>Gets the current resolution, FPS, and format settings of the connected camera device.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/getInfo",
            "description": "<p>Gets&nbsp;information about a camera that is connected to the webOS device.</p>",
            "acg": "camera.query",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/getProperties",
            "description": "<p>Gets the current settings of the connected camera device.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "params",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/getSolutions",
            "description": "<p>Gets the current status of the supported camera solutions.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "id",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/open",
            "description": "<p>Establishes a connection between a camera and the webOS device. Returns the device handle for this connection instance.&nbsp;</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mode",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "pid",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "sig",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "appId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/setFormat",
            "description": "<p>Sets the size and format of the preview stream. This includes the height and width of the frame and the format in which data is to be written to the shared buffer.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "params",
                    "required": "yes",
                    "type": "Object: camera_format"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/setProperties",
            "description": "<p>Sets the properties of the connected camera device.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "params",
                    "required": "yes",
                    "type": "Object: camera_properties"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/setSolutions",
            "description": "<p>Enables and disables camera solutions.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "solutions",
                    "required": "yes",
                    "type": "Object array: solutions"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/startCamera",
            "description": "<p>Starts camera and turns on&nbsp;streaming of captured image frames&nbsp;into the shared memory (SystemV or POSIX). The method returns a&nbsp;key or an FD for accessing the shared memory, which is required for applications to access data from the shared memory.</p>\n    \n    <p><strong>Notes:</strong></p>\n    \n    <ul>\n        <li>Use this method&nbsp;if the application needs&nbsp;only to access image frame data kept in the shared memory.</li>\n        <li>In order to set the image&nbsp;resolution and format of the image frame, use&nbsp;the&nbsp;<strong>setFormat()&nbsp;</strong>method.</li>\n    </ul>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "params",
                    "required": "yes",
                    "type": "Object: camera_memory_source"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/startCapture",
            "description": "<p>Starts capturing images using the camera.&nbsp;The captured images are stored as separate files at the location given by the &quot;path&quot; parameter.</p>\n\n<p>The default file name is of the format <em>PictureDDMMYYYY-HHMMSS, </em>where&nbsp;<em>DDMMYYYY-HHMMSS</em><em><strong> </strong></em>is current date and time.</p>\n\n<p>Example: Picture11022019-204128.jpeg</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "params",
                    "required": "yes",
                    "type": "Object:camera_capture_format"
                },
                {
                    "name": "path",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/startPreview",
            "description": "<p>Turns on camera streaming of captured image frames into the shared memory (SystemV or POSIX) and shows preview&nbsp;on the&nbsp;specified surface.&nbsp; The method returns a&nbsp;key or an fd&nbsp;for accessing the shared memory for applications to utilize.</p>\n    \n    <p><strong>Notes:</strong></p>\n    \n    <ul>\n        <li>Use this API if the application needs&nbsp;to render image frames on&nbsp;the specified surface.</li>\n        <li>While the camera is previewing, the application can access the shared memory for&nbsp;purposes except for preview.</li>\n        <li>In order to set the image resolution&nbsp;and format of the image frame, use&nbsp;the&nbsp;<strong>setFormat()&nbsp;</strong>method.</li>\n    </ul>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "params",
                    "required": "yes",
                    "type": "Object: camera_memory_source"
                },
                {
                    "name": "windowId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/stopCamera",
            "description": "<p>Stops camera and&nbsp;turns&nbsp;off streaming into the shared memory.</p>\n    \n    <p><strong>Note:&nbsp;</strong>Applications that called startCamera() should call&nbsp;this method to stop streaming.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/stopCapture",
            "description": "<p>Stops camera from capturing images in the continuous mode. Continuous mode&nbsp;captures frames in succession till the stopCapture() method is called.</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.camera2/stopPreview",
            "description": "<p>Turns off&nbsp;camera streaming and finishes showing the preview on the surface.</p>\n\n<p><strong>Note:&nbsp;</strong>The applications should call&nbsp;this method to stop streaming and preview when the applications&nbsp;called startPreview().</p>",
            "acg": "camera.operation",
            "parameters": [
                {
                    "name": "handle",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.cec/getConfig",
            "description": "<p>Gets the value of the specified input configuration.</p>",
            "acg": "cec.query",
            "parameters": [
                {
                    "name": "adapter",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.cec/listAdapters",
            "description": "<p>Searches CEC adapters from system and list all the identified local CEC adapters.</p>",
            "acg": "cec.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.cec/scan",
            "description": "<p>Scans the CEC bus and provides information of the connected HDMI CEC devices.</p>",
            "acg": "cec.query",
            "parameters": [
                {
                    "name": "adapter",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.cec/sendCommand",
            "description": "<p>Sends the input command to destination HDMI CEC devices connected on CEC bus.</p>",
            "acg": "cec.operation",
            "parameters": [
                {
                    "name": "adapter",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "destAddress",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "command",
                    "required": "yes",
                    "type": "Object: command"
                }
            ]
        },
        {
            "uri": "com.webos.service.cec/setConfig",
            "description": "<p>Sets the input configuration.</p>",
            "acg": "cec.operation",
            "parameters": [
                {
                    "name": "adapter",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "value",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.config/getConfigs",
            "description": "<p>It returns the requested&nbsp;<strong>configs</strong><strong>&nbsp;</strong>which is<strong>&nbsp;</strong>the pairs of key-value&nbsp;as a JSON object&nbsp;and also supports a subscription.</p>\n\n<p>configd provides asterisk but configNames should starts feature&nbsp;file name. For example, to get all configs for com.webos.surfacemanager, configNames should be&nbsp;&quot;com.webos.surfacemanager.*&quot;. Note that&nbsp;&quot;com.webos.*&quot; or &quot;com.webos.surfacemanager*&quot; is not supported.&nbsp;&nbsp;</p>\n\n<p>If subscribe is true and multiple configs are requested,&nbsp;configd only returns changed config. ( from the second return)<br />\n(But missingConfigs would be returned everytime&nbsp;even missingConfigs is not changed)</p>\n\n<p>If a config is limited for defined services, only permitted services can get Configs, if the requester doesn&#39;t &nbsp;have rights, the configd would be in missingConfigs</p>",
            "acg": "systemconfig.query",
            "parameters": [
                {
                    "name": "configNames",
                    "required": "yes",
                    "type": "String array"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.config/reconfigure",
            "description": "<p>Configd parses all configuration files again and regenerates the values of <strong>configs</strong>.</p>",
            "acg": "systemconfig.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.config/setConfigs",
            "description": "<p>Overrides current settings of the <strong>configs</strong>.</p>\n\n<p>The&nbsp;overridden values will be kept until rebooting or returning back in any future queries for the config. It is useful for changing configuration in factory test process.</p>\n\n<p>User can set multiple&nbsp;configurations at once.</p>",
            "acg": "systemconfig.management",
            "parameters": [
                {
                    "name": "configs",
                    "required": "yes",
                    "type": "Object: configs"
                }
            ]
        },
        {
            "uri": "com.webos.service.configurator/rescan",
            "description": "<p>Force rescan of resource file for application. Useful when application&#39;s resource file has been modified and it wants to update the resources.</p>\n\n<p>For example, updated Kind or Kind permissions</p>",
            "acg": "configurator.management",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "location",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.configurator/run",
            "description": "<p>This method will scan all folders and process all configuration files.</p>",
            "acg": "configurator.management",
            "parameters": [
                {
                    "name": "types",
                    "required": "yes",
                    "type": "array"
                }
            ]
        },
        {
            "uri": "com.webos.service.configurator/scan",
            "description": "<p>Within the API call, application can notify <strong>Configurator</strong> about new resource files and ask Configurator to process those resource files.<br />\nExample of use case: application installed and runs at first. Application at first startup can ask configurator to register kind for itself.</p>\n\n<p>For Path of resource files, see<strong> Runtime Configurator Directory</strong> in <strong>Overview</strong> section of this doc</p>",
            "acg": "configurator.management",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "location",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.configurator/unconfigure",
            "description": "<p>Rollback all actions that were made by the&nbsp;<u>scan</u>/<u>rescan</u> API calls. In other words, release used resources.</p>",
            "acg": "configurator.management",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "location",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/findProxyForURL",
            "description": "<p>Provides the proxy server that was used to reach the target URL.</p>",
            "acg": "networkconnection.query",
            "parameters": [
                {
                    "name": "url",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "host",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/getStatus",
            "description": "<p style=\"text-align:left\">Provides&nbsp;the current status of Wi-Fi and wired network connections on the system.</p>",
            "acg": "networkconnection.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/getinfo",
            "description": "<p style=\"text-align:left\">Gets the&nbsp;MAC addresses for the Wi-Fi and wired interfaces.</p>\n\n<p style=\"text-align:left\">When subscribed, <strong>getInfo</strong> periodically checks for any changes in interface MAC addresses and notifies&nbsp;subscribers when changes are detected.&nbsp;The check interval is 1 second.</p>",
            "acg": "networkconnection.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/getstatus",
            "description": "<p style=\"text-align:left\">This method is deprecated in favor of the&nbsp;<strong>getStatus()&nbsp;</strong>method. It is added only for&nbsp;backward compatibility. &nbsp;</p>\n\n<p style=\"text-align:left\"><strong>Note: </strong>Besides the method name, all other aspects of the method are identical to&nbsp;getStatus() method. Refer to getStatus for more information.</p>",
            "acg": "networkconnection.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.connectionmanager/monitorActivity",
            "description": "<p>Monitors the data activity on the wired, Wi-Fi and WAN interfaces for bytes received or transmitted, errors, packets and dropped packets. A data counter will be started as soon as there is even a single subscriber and the counter will be stopped if the subscriber count drops to 0.</p>",
            "acg": "networkconnection.management",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/setDefaultInterface",
            "description": "<p>Allows to set the default interface.</p>\n\n<p>This API allows to change the current default interface with another interface which is in connected state, for the same technology.</p>\n\n<p>For example, ethernet has multiple interfaces like eth0, eth1, eth2. If currently eth0 is the default interface and eth1, eth2 have&nbsp;&#39;state&#39; field as &#39;connected&#39; in getStatus() method, then either eth1 and eth2 can be set as default interfaces.</p>\n\n<p><strong>Note</strong>: Should be used only to change the current state&nbsp;of the interface. It does not retain/persist the interface state&nbsp;due to other events or action.</p>",
            "acg": "networkconnection.management",
            "parameters": [
                {
                    "name": "ifName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/setProxy",
            "description": "<p>Specifies the&nbsp;proxy&nbsp;server&nbsp;for the network.</p>",
            "acg": "networkconnection.management",
            "parameters": [
                {
                    "name": "method",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "url",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "servers",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "excludes",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "ssid",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/setTechnologyState",
            "description": "<p>Enables or disables the available connection interfaces which can be:</p>\n\n<ul>\n\t<li>Wired (ethernet)</li>\n\t<li>Wi-Fi</li>\n</ul>\n\n<p><strong>Note</strong>:</p>\n\n<ul>\n\t<li>If a technology is not available on the device, an error will be returned.</li>\n\t<li>The current status of the connection interfaces are reported through the <strong>getStatus</strong> method.&nbsp;Only one&nbsp;of the listed properties is&nbsp;allowed to be specified.</li>\n</ul>",
            "acg": "networkconnection.management",
            "parameters": [
                {
                    "name": "enabled",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "disabled",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/setdns",
            "description": "<p>Changes the DNS servers for the network. If a SSID value is not provided in the request then the modifications are applied to the wired connection. If interface option is not provided operation will be performed on default interface</p>",
            "acg": "networkconnection.management",
            "parameters": [
                {
                    "name": "dns",
                    "required": "yes",
                    "type": "String array"
                },
                {
                    "name": "ssid",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "interfaceName",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/setipv4",
            "description": "<p>Modifies the parameters of an IPv4 connection (wired or Wi-Fi).&nbsp;If a SSID value is not provided in the request, the modifications are applied to the wired connection only. If interface option is not provided operation will be performed on default interface.</p>\n\n<p><strong>Note:</strong>&nbsp;At least one of the following parameters must be provided: <strong>SSID</strong>, <strong>address</strong>, <strong>netmask</strong>&nbsp;or <strong>gateway</strong>.</p>",
            "acg": "networkconnection.management",
            "parameters": [
                {
                    "name": "method",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "netmask",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "gateway",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "ssid",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "interfaceName",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/setipv6",
            "description": "<p>Modifies the parameters of an IPv6 connection (wired or Wi-Fi).&nbsp;If a SSID value is not provided in the request then the modifications are applied to the wired connection only. If interface option is not provided operation will be performed on default interface.</p>\n\n<p><strong>Note</strong>: At least one of the following parameters must be provided: <strong>method</strong>, <strong>address</strong>, <strong>prefixLength </strong>or <strong>gateway.</strong></p>",
            "acg": "networkconnection.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "gateway",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "method",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "prefixLength",
                    "required": "no",
                    "type": "Number (int32_t)"
                },
                {
                    "name": "ssid",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "interfaceName",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.connectionmanager/setstate",
            "description": "<p style=\"text-align:left\">Enables or disables the state of either or both the Wi-Fi and wired connections on the system.</p>\n\n<p style=\"text-align:left\"><strong>Note</strong>: While all parameters are optional, at least one parameter is <strong>required</strong>, or the method will return error.</p>",
            "acg": "networkconnection.management",
            "parameters": [
                {
                    "name": "wifi",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "wired",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "offlineMode",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.contextintentmgr/getDataFromWorkflow",
            "description": "<p>Publishes data from the workflow to the app.</p>\n\n<p>The data can be consumed by an app which has subscribed to it.</p>",
            "acg": "contextintent.operation",
            "parameters": [
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.contextintentmgr/injectDataToWorkflow",
            "description": "<p>Injects data from the app to the workflow.&nbsp;</p>",
            "acg": "contextintent.operation",
            "parameters": [
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "data",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/batch",
            "description": "<p>The <strong>batch</strong> method enables apps to execute multiple database operations in one service request. It allows only the following database operations:</p>\n\n<ul>\n\t<li>put</li>\n\t<li>get</li>\n\t<li>del</li>\n\t<li>find (without a watch)</li>\n\t<li>merge&nbsp;</li>\n</ul>\n\n<p>Atomicity is NOT guaranteed across batched operations.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "operations",
                    "required": "yes",
                    "type": "Object array: BatchOperation"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/compact",
            "description": "<p style=\"text-align:left\">The <strong>compact </strong>method invokes the&nbsp;low level garbage collector. When DB8 executes a&nbsp;<strong>del</strong> operation without&nbsp;<strong>Purge:True</strong> param, it only marks the object as to be deleted. The object will be removed by DB8, when the garbage collector is called. To call the garbage collector manually, the client can call the <strong>compact</strong> method.</p>\n\n<p style=\"text-align:left\">This command is implemented only for the <strong>LevelDB</strong> and <strong>Sandwich</strong> engine.</p>",
            "acg": "database.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.db/del",
            "description": "<p style=\"text-align:left\">The <strong>del </strong>method deletes JSON data objects from the database.<br />\n<br />\nApps can specify the objects to be deleted by providing:</p>\n\n<ul>\n\t<li style=\"text-align:left\">a set of IDs to be deleted</li>\n\t<li style=\"text-align:left\">a DB8 query</li>\n</ul>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "ids",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "query",
                    "required": "no",
                    "type": "Object: Query"
                },
                {
                    "name": "purge",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/delKind",
            "description": "<p>The <strong>delKind </strong>method deletes a Kind from the database. Deleting a Kind deletes ALL data objects of that Kind.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/dump",
            "description": "<p style=\"text-align:left\">Backs up a database. The file created by the <strong>dump</strong> method<strong>&nbsp;</strong>typically contains JSON statements to recreate all of the Kinds and data of the database from which they have been dumped.</p>",
            "acg": "database.management",
            "parameters": [
                {
                    "name": "path",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "incDel",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/find",
            "description": "<p>The <strong>find</strong> method returns a set of objects that match the query specified in the&nbsp;<strong>query</strong>&nbsp;parameter.</p>\n\n<p>The app can specify the number of results to return. However, if the app does not want to specify a limit, it can set the&nbsp;<strong>count</strong>&nbsp;parameter to <strong>true</strong>. This will cause the&nbsp;<strong>find</strong>&nbsp;method to return the total number of results.</p>\n\n<p>The app can also request to be notified if any of the returned results from the query change in the future. In order to receive change notifications, set the&nbsp;<strong>watch</strong>&nbsp;parameter to <strong>true</strong>.</p>\n\n<p>The <strong>find</strong>&nbsp;method supports distinct groups enabling the app to remove duplicate objects.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "query",
                    "required": "yes",
                    "type": "Object: Query"
                },
                {
                    "name": "count",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "watch",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/get",
            "description": "<p style=\"text-align:left\">The&nbsp;<strong>get</strong>&nbsp;method retrieves&nbsp;JSON data objects by ids. This is the fastest way to retrieve data.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "ids",
                    "required": "yes",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/getProfile",
            "description": "<p>Get profiling data for applications. Profile data includes the queries made and related information such as&nbsp;request time and response time.</p>",
            "acg": "database.profiling",
            "parameters": [
                {
                    "name": "application",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "query",
                    "required": "no",
                    "type": "Object: Query"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/internal/postBackup",
            "description": "<p>An internal DB8 method that is called when a backup operation has been completed.</p>",
            "acg": "database.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.db/internal/postRestore",
            "description": "<p>An internal DB8 method that is called when the database finishes a restore process.</p>",
            "acg": "database.management",
            "parameters": [
                {
                    "name": "tempDir",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "files",
                    "required": "yes",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/internal/preBackup",
            "description": "<p>Invoked when an internal webOS service wants to restore a database from a backup file.&nbsp;</p>",
            "acg": "database.management",
            "parameters": [
                {
                    "name": "tempDir",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "maxTempBytes",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "incrementalKey",
                    "required": "no",
                    "type": "Object"
                },
                {
                    "name": "deletedRev",
                    "required": "no",
                    "type": "Number (int32_t)"
                },
                {
                    "name": "rev",
                    "required": "no",
                    "type": "Number (int32_t)"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/internal/preRestore",
            "description": "<p style=\"text-align:left\">Used by the webOS service to correctly respond to a database restore command.&nbsp;This method must be called before restoring a database.</p>",
            "acg": "database.management",
            "parameters": [
                {
                    "name": "version",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/internal/releaseAdminProfile",
            "description": "<p>For applications whose profiling is controlled by admin-privileged applications, this method relinquishes the profiling control from admin-privilged applications. The 3rd-party application can then control its own its own profiling.</p>\n\n<p><strong>Background:</strong> Once an admin-privileged application has enabled/disabled profiling for a 3rd-party application, then only admin-privileged applications can control the profiling for that application.</p>",
            "acg": "database.management",
            "parameters": [
                {
                    "name": "application",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/internal/scheduledPurge",
            "description": "<p>An internal&nbsp;DB8 private method, used by <strong>activityManager</strong>. <strong>Activity manager</strong> periodically calls the <strong>DB8</strong> garbage collector to remove data that has been marked for deletion.</p>",
            "acg": "database.management",
            "parameters": [
                {
                    "name": "$activity",
                    "required": "yes",
                    "type": "Object:activity"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/internal/scheduledSpaceCheck",
            "description": "<p>An internal DB8 callback method, that is called by the <strong>Activity Manager</strong> for checking available disk space.</p>",
            "acg": "database.management",
            "parameters": [
                {
                    "name": "$activity",
                    "required": "yes",
                    "type": "Object"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/internal/spaceCheck",
            "description": "<p>An internal DB8 private method, used by webOS private services. Services can subscribe for the <strong>spaceCheck </strong>method and get notifications when DB8 reaches soft and hard disk space limits.</p>",
            "acg": "database.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.db/listActiveMedia",
            "description": "<p><span style=\"background-color:rgb(255, 255, 255); color:rgb(102, 102, 102)\">Returns a list of active attached media, and shards.</span></p>",
            "acg": "database.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.db/load",
            "description": "<p>Restores a database from a dumped JSON file.</p>",
            "acg": "database.management",
            "parameters": [
                {
                    "name": "path",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/merge",
            "description": "<p>The <strong>merge</strong>&nbsp;method updates the properties of existing objects.</p>\n\n<p>The objects can be specified in one of the following ways:</p>\n\n<ul>\n\t<li>A query</li>\n\t<li>An array of IDs</li>\n</ul>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "objects",
                    "required": "no",
                    "type": "Object array"
                },
                {
                    "name": "query",
                    "required": "no",
                    "type": "Object: Query"
                },
                {
                    "name": "props",
                    "required": "no",
                    "type": "Object"
                },
                {
                    "name": "ignoreMissing",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/mergePut",
            "description": "<p>The <strong>mergePut</strong> method updates the properties of existing objects. If an object doesn&#39;t exist, a new one&nbsp;will be created in the database.</p>\n\n<p>The object&nbsp;to be updated can be specified in one of the following ways:</p>\n\n<ul>\n\t<li>A query</li>\n\t<li>An array of IDs</li>\n</ul>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "objects",
                    "required": "no",
                    "type": "Object array"
                },
                {
                    "name": "query",
                    "required": "no",
                    "type": "Object: Query"
                },
                {
                    "name": "props",
                    "required": "no",
                    "type": "Object"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/profile",
            "description": "<p>Enables or disables DB8 profiling for an application. When enabled, profiling data is stored for the&nbsp;application.</p>\n\n<p>You can enable DB8 profiling using one of the following approaches:</p>\n\n<p>- Self enabling: In this approach, the 3rd-party application enables profiling on itself (see example 1).</p>\n\n<p>- Enable profiling using admin-privileged applications: In the approach, an admin-privileged application controls DB8 profiling for 3rd-party applications. Use this approach when you want the admin to control the profiling of 3rd-party applications. You can choose to enable profiling for a single application or for all 3rd-party applications. See example 2 and 3.</p>",
            "acg": "database.profiling",
            "parameters": [
                {
                    "name": "enable",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "application",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/purge",
            "description": "<p>The <strong>purge </strong>method invokes the garbage collector. The purge method will:</p>\n\n<ul>\n\t<li>Remove all objects that were marked for deletion</li>\n\t<li>Perform a space check, and remove all temporary data</li>\n</ul>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "window",
                    "required": "no",
                    "type": "Number (int32_t)"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/purgeStatus",
            "description": "<p>The <strong>purgeStatus </strong>method returns the status of the last run <strong>purge </strong>command. If the last run <strong>purge </strong>command was successful, the objects were permanently deleted, and the <strong>purgeStatus </strong>method will return the updated database revision number.</p>",
            "acg": "database.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.db/put",
            "description": "<p>The <strong>put </strong>method stores JSON data objects of a particular Kind into the database. The <strong>put </strong>method will:</p>\n\n<ul>\n\t<li>Assign an <strong>id</strong> field to each object, if it was not set.</li>\n\t<li>Return the <strong>id</strong>&nbsp;and&nbsp;<strong>rev</strong>&nbsp;for each stored object.</li>\n</ul>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "objects",
                    "required": "yes",
                    "type": "Object array"
                },
                {
                    "name": "shardId",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/putKind",
            "description": "<p>The <strong>putKind </strong>method registers a kind with the database.</p>\n\n<p>Kinds define the owner, and the indexes for a JSON data object. Indexes can be composed of single or multiple properties. When you create your index, be aware that queries can only return results that are indexed, and are contiguously ordered.</p>\n\n<p>If your app or service wants to be notified only when a subset of an object&#39;s properties are updated, then you can use revision sets.</p>\n\n<p>If your app or service creates objects that other apps or services need to access, then see the <strong>putPermissions</strong><a href=\"#com.webos.service.dbv1.5-putPermissions\"><strong> </strong></a>method for more information.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "owner",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "schema",
                    "required": "no",
                    "type": "Object"
                },
                {
                    "name": "sync",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "extends",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "indexes",
                    "required": "no",
                    "type": "Object: IndexClause"
                },
                {
                    "name": "revsets",
                    "required": "no",
                    "type": "Object array: RevSetClause"
                },
                {
                    "name": "private",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "assignId",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/putPermissions",
            "description": "<p style=\"text-align:left\">The <strong>putPermissions </strong>method enables other apps or services to access an app&#39;s stored DB8 data. The app can give permissions to access data objects of a specific Kind.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "object",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "caller",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "operations",
                    "required": "yes",
                    "type": "Object: operation"
                },
                {
                    "name": "create",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "read",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "update",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "delete",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/putQuotas",
            "description": "<p>The <strong>putQuotas</strong> method provides the ability to update a quota&#39;s current service limits at runtime. This service is used by private webOS services to increase/decrease quotas for critical webOS services.</p>",
            "acg": "database.management",
            "parameters": [
                {
                    "name": "quotas",
                    "required": "yes",
                    "type": "Object array: putQuotas"
                },
                {
                    "name": "owner",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "size",
                    "required": "no",
                    "type": "Number (int32_t)"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/quotaStats",
            "description": "<p>The <strong>quotaStats </strong>method returns information about a service&#39;s used limits.</p>",
            "acg": "database.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.db/removeAppData",
            "description": "<p>The <strong>removeAppData</strong> method removes all data&nbsp;associated with the given owner. In other words, the method removes all <strong>Kinds&nbsp;</strong>that have specified&nbsp;<strong>owner</strong>.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "owners",
                    "required": "yes",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/reserveIds",
            "description": "<p>When a client service creates objects that have references between each other, the service can ask the database through the <strong>reserveIds</strong> method to regenerate ids of objects.&nbsp;The client service can use such ids as objects, and DB8 will use those ids when objects are inserted into the database.</p>\n\n<p>By default, DB8 configured to reserve maximum [0:1000] ids, but this limit can vary depending on the platform.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "count",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/search",
            "description": "<p style=\"text-align:left\">Unlike the <strong>find </strong>method, the <strong>search</strong>&nbsp;method supports the <strong>&quot;?&quot; </strong>(question mark) operator. The&nbsp;<strong>?&nbsp;</strong>operator&nbsp;can be used for full-text searching.&nbsp;However, the <strong>search </strong>method is significantly slower, and should only be used for full-text type-down search. The <strong>search</strong>&nbsp;method should not be used for&nbsp;retrieving results that are going to be scrolled in a list.</p>\n\n<p style=\"text-align:left\">The&nbsp;search&nbsp;method supports:</p>\n\n<ul>\n\t<li style=\"text-align:left\">Ordering by any property.</li>\n\t<li style=\"text-align:left\"><em>Distinct method</em> to remove duplicate objects.</li>\n\t<li style=\"text-align:left\"><strong>%% </strong>operator in filter to search in a sub-string.</li>\n\t<li style=\"text-align:left\">Canceling the search mid-way (using the &#39;cancelable&#39; parameter).&nbsp;</li>\n</ul>\n\n<p style=\"text-align:left\">The <strong>search</strong> method has some limitations:</p>\n\n<ul>\n\t<li style=\"text-align:left\">There must be an index for the field you are searching on.</li>\n\t<li style=\"text-align:left\">The search operation looks for words beginning with the search string.</li>\n</ul>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "query",
                    "required": "yes",
                    "type": "Object: Query"
                },
                {
                    "name": "watch",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/setShardMode",
            "description": "<p>Marks an external media as <strong>transient</strong>&nbsp;for the specified DB8 shard Id. This means&nbsp;that all data, relative to the shard, are not required by any application and will be removed by garbage collector.&nbsp;In other words, marking shard as <strong>transient</strong>&nbsp;will wipe all data from the shard on the nearest garbage collector call.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "shardId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "transient",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/shardInfo",
            "description": "<p>Retrieves the state of a shard, like shard activity, associated media devices, mount point.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "shardId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/stats",
            "description": "<p>The stats method returns detailed information about the storage space used by every service.</p>",
            "acg": "database.profiling",
            "parameters": [
                {
                    "name": "kind",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "verify",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.db/watch",
            "description": "<p style=\"text-align:left\">The <strong>watch </strong>method watches for&nbsp;updates to the database that would change the results of a query.</p>",
            "acg": "database.operation",
            "parameters": [
                {
                    "name": "query",
                    "required": "yes",
                    "type": "Object: Query"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.devmode/getDevMode",
            "description": "<p>Return the current status of developer mode.</p>",
            "acg": "devmode.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.devmode/getPassphrase",
            "description": "<p>Returns the current passphrase associated with the SSH key, which is used to connect to the device. This method is only callable by the developer mode app.</p>",
            "acg": "devmode.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.devmode/setDevMode",
            "description": "<p>Enable or disable developer mode. The device will reboot if the mode is changed.</p>",
            "acg": "devmode.management",
            "parameters": [
                {
                    "name": "enabled",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/allow1x",
            "description": "Enable or disable 1x mode for downloads/uploads.",
            "acg": "download.management",
            "parameters": [
                {
                    "name": "value",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/cancelAllDownloads",
            "description": "Cancel all downloads that are in progress.",
            "acg": "download.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.downloadmanager/cancelDownload",
            "description": "<p>Cancel a download that is in progress.</p>",
            "acg": "download.management",
            "parameters": [
                {
                    "name": "ticket",
                    "required": "yes",
                    "type": "Number (int64_t)"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/cancelUpload",
            "description": "<p>Cancel an upload that is in progress. See the <strong>cancelDownload</strong> method for detailed documentation.</p>",
            "acg": "download.management",
            "parameters": [
                {
                    "name": "ticket",
                    "required": "yes",
                    "type": "Number (int64_t)"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/clearHistory",
            "description": "<p>Clear the download history for a specific application or for all downloads or uploads.</p>",
            "acg": "download.operation",
            "parameters": [
                {
                    "name": "owner",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/deleteDownloadedFile",
            "description": "<p>Delete a downloaded file based on the ticket number. The ticket number is a unique ID returned from the <strong>download</strong> method.</p>",
            "acg": "download.management",
            "parameters": [
                {
                    "name": "ticket",
                    "required": "yes",
                    "type": "Number (int64_t)"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/download",
            "description": "Start a download.",
            "acg": "download.management",
            "parameters": [
                {
                    "name": "appendTargetFile",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "authToken",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "autoResume",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "canHandlePause",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "cookieHeader",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "cookieToken",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "deviceId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "e_rangeHigh",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "e_rangeLow",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "interface",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "keepFilenameOnRedirect",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "mime",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "target",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "targetDir",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "targetFilename",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/downloadStatusQuery",
            "description": "Get the status of a download for a specific ticket number. The method will return the status of current downloads, or any downloads in the history.",
            "acg": "download.management",
            "parameters": [
                {
                    "name": "ticket",
                    "required": "yes",
                    "type": "Number (int64_t)"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/getAllHistory",
            "description": "<p>Get the download or upload history for a specific application.</p>",
            "acg": "download.operation",
            "parameters": [
                {
                    "name": "owner",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/is1xMode",
            "description": "<p>Determine if the network connection is in 1x mode.</p>",
            "acg": "download.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.downloadmanager/listPending",
            "description": "<p>Return the list of all downloads that are currently in progress.</p>",
            "acg": "download.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.downloadmanager/pauseDownload",
            "description": "<p>Pause a download.</p>\n\n<p>Note that only downloads started with&nbsp;canHandlePause:true&nbsp;can be paused; otherwise, calling&nbsp;pauseDownload&nbsp;on a downloading file will act like a &quot;cancel&quot;.</p>",
            "acg": "download.management",
            "parameters": [
                {
                    "name": "ticket",
                    "required": "yes",
                    "type": "Number (int8_t)"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/resumeDownload",
            "description": "Resume a download.",
            "acg": "download.management",
            "parameters": [
                {
                    "name": "ticket",
                    "required": "yes",
                    "type": "Number (int8_t)"
                },
                {
                    "name": "authToken",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "deviceId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.downloadmanager/upload",
            "description": "<p>Upload a file to the target URI.</p>\n\n<p>If <strong>subscribe</strong>&nbsp;is set to <strong>false</strong>, the onSuccess handler is called only once after the initial request.&nbsp;<span style=\"line-height:1.6em\">To be notified when the upload is complete, set </span><strong style=\"line-height:1.6em\">subscribe</strong><span style=\"line-height:1.6em\"> to </span><strong style=\"line-height:1.6em\">true</strong><span style=\"line-height:1.6em\"> and onSuccess will be called periodically with progress updates. The upload is complete when the handler receives a response with </span><strong style=\"line-height:1.6em\">completed:true</strong><span style=\"line-height:1.6em\">.</span></p>",
            "acg": "download.management",
            "parameters": [
                {
                    "name": "url",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "fileName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "fileLabel",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "contentType",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "postParameters",
                    "required": "no",
                    "type": "Object: postParameters"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/ChangeType",
            "description": "<p>Allows apps to modify the parameters of a cache type other than its&nbsp;name. You must specify the name of the cache type, and those cache type parameters that have to be modified. The cache type values are all as defined in&nbsp;<strong>DefineType</strong>.</p>",
            "acg": "filecache.management",
            "parameters": [
                {
                    "name": "typeName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "loWatermark",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "hiWatermark",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "cost",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "lifetime",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/CopyCacheObject",
            "description": "<p>Enables copying of an object from the file cache to a non-cached location.&nbsp;On successful completion, <strong>newPathName</strong> will be returned as it may be different than expected due to filename collisions. If there is a name collision, the name will be made unique by adding a number to the file basename (i.e. foo.bar may become foo-(1).bar).</p>",
            "acg": "filecache.management",
            "parameters": [
                {
                    "name": "pathName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "destination",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "fileName",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/DefineType",
            "description": "<p>Defines a new cache type.&nbsp;This is intended for use by the backup service.</p>\n\n<p>Optionally you may specify the default values for the size, cost, and lifetime. These defaults will be applied to all objects inserted into this cache type that do not specify their own values for these arguments. The size is in bytes, the cost is an integer between 0 and 100, and the lifetime is in seconds. &nbsp;</p>\n\n<p>The&nbsp;<strong>errorCode</strong>&nbsp;and&nbsp;<strong>errorText&nbsp;</strong>are only be returned if the <strong>returnValue</strong> is false.</p>\n\n<p>Note: You can not define type with the same <strong>typeName</strong>. Use&nbsp;<strong>changeType</strong> to change an existing type.</p>",
            "acg": "filecache.management",
            "parameters": [
                {
                    "name": "typeName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "loWatermark",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "hiWatermark",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "cost",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "lifetime",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "dirType",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/DeleteType",
            "description": "<p style=\"text-align:left\">Allows you to delete a previously defined cache type and frees up its space. All objects in the cache must be expired in order to delete a cache type. The app can call the <strong>ExpireCacheObject&nbsp;</strong>to force the&nbsp;objects to expire in the cache type.&nbsp;</p>",
            "acg": "filecache.management",
            "parameters": [
                {
                    "name": "typeName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/DescribeType",
            "description": "<p style=\"text-align:left\">Returns&nbsp;cache type details.&nbsp;The <strong>DescribeType </strong>will return the currently assigned values for all cache type parameters.&nbsp;</p>\n\n<p style=\"text-align:left\">Note: Filesize&nbsp;as&nbsp;it&nbsp;resides&nbsp;on&nbsp;disk&nbsp;after&nbsp;accounting&nbsp;for&nbsp;the&nbsp;filesystem&nbsp;blocksize of 4096 &nbsp;loWatermark/hiWatermark&nbsp;will be padded with filesystem&nbsp;block size of&nbsp;4096.</p>",
            "acg": "filecache.operation",
            "parameters": [
                {
                    "name": "typeName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/ExpireCacheObject",
            "description": "<p style=\"text-align:left\">Objects will normally be automatically expired form the cache as space is needed. If you want to force an item to be removed or if you want to remove items prior to calling <strong>DeleteType</strong>, you can expire an object manually.</p>\n\n<p style=\"text-align:left\">The&nbsp;<strong>ExpireCacheObject </strong>method will not actually remove a subscribed object from the cache, but will mark the object for removal. The object is physically removed, when it has no active subscriptions.</p>\n\n<p style=\"text-align:left\"><strong>NOTE</strong>: By default, objects in a cache type will be automatically expired from the cache as space is needed.</p>",
            "acg": "filecache.operation",
            "parameters": [
                {
                    "name": "pathName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/GetCacheObjectFilename",
            "description": "<p style=\"text-align:left\">Allows you to query the original filename of a particular object in a cache type. &nbsp;In order to get the cache object file name the app must specify the path name of the object. &nbsp;</p>",
            "acg": "filecache.operation",
            "parameters": [
                {
                    "name": "pathName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/GetCacheObjectSize",
            "description": "<p>Allows you to query a particular object size in a cache type. In order to get the cache object size, the app must specify the pathname of the object.&nbsp;</p>",
            "acg": "filecache.operation",
            "parameters": [
                {
                    "name": "pathName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/GetCacheStatus",
            "description": "<p>Give status of the cache as a whole. The <strong>GetCacheStatus</strong> will return:</p>\n\n<ul>\n\t<li>the number of cache types defined</li>\n\t<li>the total space used by the objects in all cache types</li>\n\t<li>the number of objects in all cache types</li>\n\t<li>the available space in the cache</li>\n</ul>",
            "acg": "filecache.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.filecache/GetCacheTypeStatus",
            "description": "<p>Allows you to query the status of a particular cache type to obtain:</p>\n\n<ul>\n\t<li>the total space used by the objects in the specified cache type</li>\n\t<li>the number of objects in the specified cache type</li>\n</ul>",
            "acg": "filecache.operation",
            "parameters": [
                {
                    "name": "typeName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/GetCacheTypes",
            "description": "<p>Returns an array of all defined cache types.</p>",
            "acg": "filecache.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.filecache/GetVersion",
            "description": "<p style=\"text-align:left\">Returns the version of the File Cache API.</p>",
            "acg": "filecache.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.filecache/InsertCacheObject",
            "description": "<p>Inserts a new object of the specified type into the cache.</p>\n\n<p>The&nbsp;<strong>fileName&nbsp;</strong>parameter is required. It is stored with the object to ensure that the correct extension is provided, so that other module can choose a strategy to process this file (for example, choose the file viewer matching the extension).</p>\n\n<p>Other&nbsp;parameters are optional. If not provided, the cache type default values defined are be used.</p>\n\n<p>Returned is the path to the object in the cache. The&nbsp;<strong>subscribe</strong>&nbsp;setting should be set to true so that after the object is inserted you can write the file.</p>",
            "acg": "filecache.operation",
            "parameters": [
                {
                    "name": "typeName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "fileName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "size",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "cost",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "lifetime",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/ResizeCacheObject",
            "description": "<p style=\"text-align:left\">By calling the <strong>ResizeCacheObject&nbsp;</strong>you can specify the size of the cached object after it is inserted into the cache. Call this method if the final size of the object, which is being inserted into the cache, is not known by the moment, when you call the&nbsp;<strong>InsertCacheObject</strong>&nbsp;method. In this case:</p>\n\n<ol>\n\t<li>Call the&nbsp;<strong>InsertCacheObject</strong>&nbsp;method specifying the best approximate object size you can guess.</li>\n\t<li>Then call the&nbsp;<strong>ResizeCacheObject</strong>&nbsp;method on a subscribed object, if the the object size grows out of the previously specified size.</li>\n</ol>\n\n<p>If the object is larger than the specified size when the write operation is complete, the object will be automatically removed from the cache. If the object is smaller than the specified size, the recorded object size will be adjusted to the correct size.</p>\n\n<p><strong>Remark: </strong>it is not a good practice to just specify a larger than expected size though as this could cause other objects to be expired from the cache to make room for the specified size.</p>",
            "acg": "filecache.operation",
            "parameters": [
                {
                    "name": "pathName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "newSize",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/SubscribeCacheObject",
            "description": "<p style=\"text-align:left\">Enables you to subscribe an object in the cache and hold a subscription to the object for the duration of your usage. An object cannot be expired from the cache while at least one subscription is active.</p>",
            "acg": "filecache.operation",
            "parameters": [
                {
                    "name": "pathName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.filecache/TouchCacheObject",
            "description": "<p>Allows you to mark an object as recently used. This decreases the chances&nbsp;of&nbsp;the object from getting expired from the cache when the space is being reclaimed.</p>",
            "acg": "filecache.operation",
            "parameters": [
                {
                    "name": "pathName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.hfp/hf/answerCall",
            "description": "<p>Answers the incoming call from the given AG.&nbsp;</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.hfp/hf/call",
            "description": "<p>Dials the previous&nbsp;phone number (stored after the previous call)&nbsp;using the memory dialing.</p>\n\n<p><strong>Memory dialing</strong>:&nbsp;A telephone feature that allows placing a call by accessing a previously stored number.</p>\n\n<p><strong>Note</strong>:&nbsp;</p>\n\n<ul>\n\t<li>If the<strong> number</strong> and<strong> </strong>the<strong> memoryDialing</strong>&nbsp;parameter are passed simultaneously, an error will be returned.</li>\n\t<li>If none of the<strong> number</strong>&nbsp;and<strong> </strong>the<strong> memoryDialing</strong>&nbsp;parameter is passed, <strong>AG</strong> may place a call to the latest outgoing number (depends on <strong>AG</strong>).</li>\n</ul>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "number",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "memoryDialing",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.hfp/hf/getStatus",
            "description": "<p>Returns the current status of the connected <strong>AG</strong> devices.&nbsp;</p>",
            "acg": "bluetooth.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.hfp/hf/holdActiveCalls",
            "description": "<p>Places all the active calls (if any exist) on hold and answers another (held or waiting) call.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "index",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.hfp/hf/mergeCall",
            "description": "<p>Adds a held call to the conversation ( merging calls into a conference call ).</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.hfp/hf/releaseActiveCalls",
            "description": "<p>Releases all the active and&nbsp;answers the waiting call&nbsp;of the given AG.&nbsp;</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.hfp/hf/releaseHeldCalls",
            "description": "<p>Releases all the held calls of the given AG.&nbsp;</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.hfp/hf/setVolume",
            "description": "<p>Sets the <strong>SCO</strong> volume level.</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "volume",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.hfp/hf/terminateCall",
            "description": "<p>Terminates the active call with the given AG.&nbsp;</p>",
            "acg": "bluetooth.management",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "adapterAddress",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "index",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.ime/deleteCharacters",
            "description": "<p>Deletes characters from the current insertion point.</p>",
            "acg": "ime.operation",
            "parameters": [
                {
                    "name": "count",
                    "required": "yes",
                    "type": "number"
                }
            ]
        },
        {
            "uri": "com.webos.service.ime/insertText",
            "description": "<p>Inserts text at the current insertion point, or replaces all text in the field.</p>",
            "acg": "ime.operation",
            "parameters": [
                {
                    "name": "text",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "replace",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.ime/registerRemoteKeyboard",
            "description": "<p>Allows subscribing to information about the current text field. When a text field is selected or updated, an update will be sent out to any subscribers with information about the text field.</p>",
            "acg": "ime.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.ime/sendEnterKey",
            "description": "<p>Sends the enter key in the current field.</p>",
            "acg": "ime.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.intent/query",
            "description": "<p>Clients can get handlers&nbsp;by calling the API.</p>",
            "acg": "intent.operation",
            "parameters": [
                {
                    "name": "intent",
                    "required": "no",
                    "type": "Object: intent"
                }
            ]
        },
        {
            "uri": "com.webos.service.intent/sendResult",
            "description": "<p>Enables the handlers to reply with the results.</p>\n\n<p><strong>Note: </strong>Also refer &#39;subscribeResult&#39; API.</p>",
            "acg": "intent.operation",
            "parameters": [
                {
                    "name": "intentId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "result",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "intent",
                    "required": "no",
                    "type": "Object: intent"
                }
            ]
        },
        {
            "uri": "com.webos.service.intent/start",
            "description": "<p>Starts the handlers based on the intent information provided in the request payload.</p>\n\n<p>Please refer &#39;<strong>subscribeResult</strong>&#39; API for subscription payload.</p>",
            "acg": "intent.operation",
            "parameters": [
                {
                    "name": "intent",
                    "required": "no",
                    "type": "Object: intent"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.intent/subscribeResult",
            "description": "<p>All running intents have their own &#39;intentId&#39;. Of course, handlers can reply results thought &#39;intentId&#39;.</p>\n\n<p>Other component including requester can subscribe the results with this API.</p>",
            "acg": "intent.operation",
            "parameters": [
                {
                    "name": "intentId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/getAllLocationHandlers",
            "description": "<p>Gets a list of the available location handlers, along with each handler&#39;s attributes including name and state.</p>",
            "acg": "location.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/getGeoCodeLocation",
            "description": "<p><span style=\"color:#222222\">Transforms a given street address or other description of a location into a coordinate</span><span style=\"color:#222222\"> (latitude, longitude)</span><span style=\"color:#222222\">.</span></p>\n\n<p><strong><span style=\"color:rgb(93, 92, 92)\">Important points:</span></strong></p>\n\n<ul>\n\t<li>Supports Google Geocoding API.</li>\n\t<li>Prerequisite:\n\t<ul>\n\t\t<li>Set up the Geocoding API key as described in&nbsp;<u>Overview&nbsp;of the API &gt; &quot;Google Geocoding API Key&quot;</u>.&nbsp;</li>\n\t\t<li>Enable network location provider state by:<br />\n\t\t# luna-send -f -n 1 luna://com.webos.service.location/<strong>setState </strong>&#39;{&quot;Handler&quot;:&quot;network&quot;,&quot;state&quot;:true}&#39;</li>\n\t</ul>\n\t</li>\n\t<li>For more details, see<a href=\"https://developers.google.com/maps/documentation/geocoding/?hl=en\"> Google official documents</a>.</li>\n</ul>",
            "acg": "location.query",
            "parameters": [
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "components",
                    "required": "yes",
                    "type": "Object array: components"
                },
                {
                    "name": "bounds",
                    "required": "no",
                    "type": "Object array: bounds"
                },
                {
                    "name": "language",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "region",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/getGpsSatelliteData",
            "description": "<p>Gets the satellite information.</p>\n\n<p><strong>Prerequisite</strong>: The GPS feature of the device has to be powered <strong>ON</strong>.</p>",
            "acg": "location.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/getGpsStatus",
            "description": "<p>Gets the current status of the GPS engine. Used for notifying device users that the GPS engine has started or stopped.</p>\n\n<ul>\n\t<li>GPS engine is started when a method that needs the engine to work is called.</li>\n\t<li>GPS engine is turned off when all the received requests have been handled or canceled, thus when there is nothing left for it to do. System-wise, when all luna-commands related to the engine starting are canceled, the GPS engine is powered <strong>OFF</strong>.</li>\n</ul>\n\n<p><strong>Prerequisite:&nbsp;</strong>For<strong> <strong>getGpsStatus</strong> </strong>method to work, the GPS feature of the device has to be powered <strong>ON</strong>.</p>",
            "acg": "location.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/getLocationHandlerDetails",
            "description": "<p>Gets the details of the given location handler (Location service provider).</p>",
            "acg": "location.query",
            "parameters": [
                {
                    "name": "Handler",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/getLocationUpdates",
            "description": "<p>Requests a single location fix based on the given criteria. If the subscription value is set to true, it requests for continuous location fixes.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Timeout period for <strong>getLocationUpdates</strong>&nbsp;is 12 minutes. This method will enable&nbsp;location handlers according to the criteria passed in the request.</li>\n\t<li><strong>setState</strong> method&nbsp;should be used to enable a handler.</li>\n</ul>",
            "acg": "location.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "minimumInterval",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "minimumDistance",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "Handler",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "responseTimeout",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/getNmeaData",
            "description": "<p>Gets a NMEA&nbsp;sentence from a GPS receiver.</p>",
            "acg": "location.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/getReverseLocation",
            "description": "<p>Transforms a given coordinate (latitude, longitude) into a (partial) address.</p>\n\n<p><strong>Note:&nbsp;</strong>The amount of detail in a reverse geocoded location description may vary. For example, one location might contain the full street address of the closest building, while another location might contain only a city name and postal code.</p>\n\n<p><strong><span style=\"color:rgb(93, 92, 92)\">Important points:</span></strong></p>\n\n<ul>\n\t<li>Supports Google Reverse Geocoding API.</li>\n\t<li>Prerequisite:\n\t<ul>\n\t\t<li>Set up the Geocoding API key as described in&nbsp;<u>Overview&nbsp;of the API &gt; &quot;Google Geocoding API Key&quot;</u>.&nbsp;</li>\n\t\t<li>Enable network location provider state by:<br />\n\t\t# luna-send -f -n 1 luna://com.webos.service.location/<strong>setState&nbsp;</strong>&#39;{&quot;Handler&quot;:&quot;network&quot;,&quot;state&quot;:true}&#39;</li>\n\t</ul>\n\t</li>\n\t<li>For more details, see<a href=\"https://developers.google.com/maps/documentation/geocoding/?hl=en\"> Google official documents</a>.</li>\n</ul>",
            "acg": "location.query",
            "parameters": [
                {
                    "name": "latitude",
                    "required": "yes",
                    "type": "Number (double)"
                },
                {
                    "name": "longitude",
                    "required": "yes",
                    "type": "Number (double)"
                },
                {
                    "name": "language",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "result_type",
                    "required": "no",
                    "type": "array"
                },
                {
                    "name": "location_type",
                    "required": "no",
                    "type": "array"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/getState",
            "description": "<p>Gets the current state of the given handler. Application settings can use this to update location settings.</p>",
            "acg": "location.query",
            "parameters": [
                {
                    "name": "Handler",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/mock/disable",
            "description": "<p>Disables the mock location of the given provider.</p>",
            "acg": "location.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/mock/enable",
            "description": "<p>Enables a mock location of the given provider.</p>",
            "acg": "location.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/mock/setLocation",
            "description": "<p>Sets a mock location for the given provider.</p>",
            "acg": "location.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "location",
                    "required": "yes",
                    "type": "Object: location"
                }
            ]
        },
        {
            "uri": "com.webos.service.location/setState",
            "description": "<p>Enables or disables a location service provider in the setting menu.</p>",
            "acg": "location.operation",
            "parameters": [
                {
                    "name": "Handler",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "state",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/activateMediaSession",
            "description": "<p>Activates the media session.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>application</strong>.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Only an&nbsp;active media session can&nbsp;receive the AVRCP key events and forward them to the application.</li>\n\t<li>To activate a media session, the client must&nbsp;subscribe to the mediaId using&nbsp;registerMediaSession() API.</li>\n</ul>",
            "acg": "mediacontroller.query",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/deactivateMediaSession",
            "description": "<p>Deactivates the media session.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>application</strong>.</p>\n\n<p><strong>Note:</strong>&nbsp;After the&nbsp;media session is deactivated, the corresponding media client cannot receive <strong>AVRCP</strong> key events.</p>",
            "acg": "mediacontroller.query",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/getActiveMediaSessions",
            "description": "<p>Gets the&nbsp;list of all the active media sessions.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>service</strong>.</p>",
            "acg": "mediacontroller.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.mediacontroller/getMediaCoverArtPath",
            "description": "<p>Downloads requested cover art URI and provides downloaded path.</p>",
            "parameters": [
                {
                    "name": "displayId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "src",
                    "required": "yes",
                    "type": "String array"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/getMediaMetaData",
            "description": "<p>Requests metadata of the media session related to the&nbsp;given mediaId.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>service</strong>.</p>",
            "acg": "mediacontroller.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/getMediaPlayStatus",
            "description": "<p>Gets the current&nbsp;playback status of the given mediaId, status such as stopped, paused, playing, buffering.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>service</strong>.</p>",
            "acg": "mediacontroller.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/getMediaSessionId",
            "description": "<p>Provides the&nbsp;list of mediaId&nbsp;of all the media sessions&nbsp;for a given app.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>service</strong>.</p>",
            "acg": "mediacontroller.operation",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/getMediaSessionInfo",
            "description": "<p>Gets the details of a&nbsp;media session like app id, metadata, volume info.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>service</strong>.</p>",
            "acg": "mediacontroller.operation",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/injectMediaKeyEvent",
            "description": "<p>Sets the keyEvent of the given displayId.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>service</strong>.</p>",
            "acg": "mediacontroller.management",
            "parameters": [
                {
                    "name": "displayId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "keyEvent",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/receiveMediaPlaybackInfo",
            "description": "<p>Subscribes to receive the play status, mute status, play position, mediaMetaData information.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>service</strong>.</p>",
            "acg": "mediacontroller.management",
            "parameters": [
                {
                    "name": "displayId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "eventType",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/registerMediaSession",
            "description": "<p>Registers media sessions, subscribes to receive <strong>AVRCP</strong> key events.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>application</strong>.</p>",
            "acg": "mediacontroller.query",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/setMediaCoverArt",
            "description": "<p>Sets the cover art data&nbsp;for media session.&nbsp;</p>",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "coverArt",
                    "required": "yes",
                    "type": "Object array:coverArtInfo"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/setMediaMetaData",
            "description": "<p>Sets the metadata information for the session.</p>\n\n<p><strong>Example:</strong>&nbsp;title, artist.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>application</strong>.</p>",
            "acg": "mediacontroller.query",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mediaMetaData",
                    "required": "yes",
                    "type": "Object: mediaMetaData"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/setMediaMuteStatus",
            "description": "<p>Sets the status of the media session.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>application</strong>.</p>",
            "acg": "mediacontroller.query",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "muteStatus",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/setMediaPlayPosition",
            "description": "<p>Sets the play position for the media session.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>application</strong>.</p>",
            "acg": "mediacontroller.query",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "playPosition",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/setMediaPlayStatus",
            "description": "<p>Sets the playStatus for the session.</p>\n\n<p>Example: play, pause, stopped and so on.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>application</strong>.</p>",
            "acg": "mediacontroller.query",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "playStatus",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/setSupportedActions",
            "description": "<p>Sets the list of supported media actions.</p>",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "supportedActions",
                    "required": "yes",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediacontroller/unregisterMediaSession",
            "description": "<p>Unsubscribes and unregisters the media session.</p>\n\n<p><strong>Recommended usage</strong>: The API is recommended to be used by the <strong>application</strong>.</p>",
            "acg": "mediacontroller.query",
            "parameters": [
                {
                    "name": "mediaId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/getAudioList",
            "description": "<p>Gets the available audio file list included in attached devices.</p>\n\n<p><strong>Note</strong>:&nbsp;If the <strong>uri</strong>&nbsp;is specified, the audio file list for specified uri is provided. Else the audio file list for all attached devices is provided.</p>",
            "acg": "mediaindexer.operation",
            "parameters": [
                {
                    "name": "uri",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "count",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/getAudioMetadata",
            "description": "<p>Gets the detailed meta data information of the specified uri for the given audio file.</p>",
            "acg": "mediaindexer.operation",
            "parameters": [
                {
                    "name": "uri",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/getDeviceList",
            "description": "<p>Gets the list of all the attached&nbsp;storage devices.</p>\n\n<p><strong>Note</strong>: The list can contain devices that are currently attached or the devices attached in the past.</p>",
            "acg": "mediaindexer.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/getImageList",
            "description": "<p>Gets all the available image file list included in the attached devices.</p>\n\n<p><strong>Note</strong>:&nbsp;If the <strong>uri</strong>&nbsp;is specified, the image&nbsp;file list for specified uri is provided. Else the image&nbsp;file list for all attached devices is provided.</p>",
            "acg": "mediaindexer.operation",
            "parameters": [
                {
                    "name": "uri",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "count",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/getImageMetadata",
            "description": "<p>Gets the detailed meta data information of specified uri of the image file.</p>",
            "acg": "mediaindexer.operation",
            "parameters": [
                {
                    "name": "uri",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/getMediaDbPermission",
            "description": "<p>Enables the downloadable services or apps (built-in or downloadable) to acquire, access permission of the DB managed by the media indexer service.</p>",
            "acg": "mediaindexer.operation",
            "parameters": [
                {
                    "name": "serviceName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/getPlugin",
            "description": "<p>Requests to retrieve the plugin from the plugin factory and to then activate the plugin.</p>",
            "acg": "mediaindexer.devutility",
            "parameters": [
                {
                    "name": "uri",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/getPluginList",
            "description": "<p>Gets a list of available plugins.</p>",
            "acg": "mediaindexer.devutility",
            "parameters": []
        },
        {
            "uri": "com.webos.service.mediaindexer/getVideoList",
            "description": "<p>Gets the available video files list included in the attached devices.</p>\n\n<p><strong>Note</strong>:&nbsp;If the <strong>uri</strong>&nbsp;is specified, the video&nbsp;file list for specified uri is provided. Else the video file list for all attached devices is provided.</p>",
            "acg": "mediaindexer.operation",
            "parameters": [
                {
                    "name": "uri",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "count",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/getVideoMetadata",
            "description": "<p>Gets the detailed meta data information for the specified uri of the video file.</p>",
            "acg": "mediaindexer.operation",
            "parameters": [
                {
                    "name": "uri",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/putPlugin",
            "description": "<p>Requests to add the plugin to the plugin factory.</p>",
            "acg": "mediaindexer.devutility",
            "parameters": [
                {
                    "name": "uri",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/requestDelete",
            "description": "<p>Requests deletion of media item from media DB connector.</p>",
            "acg": "mediaindexer.operation",
            "parameters": [
                {
                    "name": "uri",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/requestMediaScan",
            "description": "<p>Scans device for media item.</p>",
            "acg": "mediaindexer.operation",
            "parameters": [
                {
                    "name": "path",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/runDetect",
            "description": "<p>Requests to check plugins that are available in the known devices databases and then enables the device detection to notify the observer.</p>",
            "acg": "mediaindexer.devutility",
            "parameters": [
                {
                    "name": "uri",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediaindexer/stopDetect",
            "description": "<p>Requests not to detect the plugin in database for the known device and&nbsp;do not enable the device detection to notify the observer.</p>",
            "acg": "mediaindexer.devutility",
            "parameters": [
                {
                    "name": "uri",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/close",
            "description": "<p>Closes the recorder&nbsp;and releases all resources.</p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "recorderId",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/open",
            "description": "<p>Opens a new recorder.&nbsp;</p>\n\n<p>Returns a unique ID to the client that is used for subsequent operations to control the recorder.</p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "video",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "audio",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/pause",
            "description": "<p>Pauses recording.</p>\n\n<p><strong>Note:&nbsp;</strong>Call this API after&nbsp;<strong>start()&nbsp;</strong>but before&nbsp;<strong>stop()</strong> or <strong>resume()</strong>.</p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "recorderId",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/resume",
            "description": "<p>Resumes recording.</p>\n\n<p><strong>Note:&nbsp;</strong>Call this API after&nbsp;<strong>pause()&nbsp;</strong>but before&nbsp;<strong>stop().</strong></p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "recorderId",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/setAudioFormat",
            "description": "<p>Sets the audio format.</p>\n\n<p><strong>Note:&nbsp;</strong>Call this API after&nbsp;<strong>open()&nbsp;</strong>but before&nbsp;<strong>start()</strong>.</p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "recorderId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "codec",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bitRate",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "sampleRate",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "channelCount",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/setOutputFile",
            "description": "<p>Sets the path to store the streaming data.&nbsp;</p>\n\n<p>The default file name is of the format &quot;RecordDDMMYYYY-HHMMSS&quot;, where DDMMYYYY-HHMMSS is current date and time.</p>\n\n<ul>\n\t<li>Call this after open() but before start().</li>\n</ul>\n\n<p><strong>Note: </strong>If not explicitly set by calling this method, the default path is <strong>/media/internal/</strong>.</p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "recorderId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "path",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/setOutputFormat",
            "description": "<p>Sets the specified&nbsp;format to store the streaming data.</p>\n\n<p><strong>Note: </strong>Call this API after <strong>open() </strong>but before <strong>start()</strong>.</p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "recorderId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "format",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/setVideoFormat",
            "description": "<p>Sets the video format.</p>\n\n<p><strong>Note: </strong>Call this API after <strong>open() </strong>but before <strong>start()</strong>.</p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "recorderId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "codec",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "bitRate",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/start",
            "description": "<p>Starts recording.</p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "recorderId",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/stop",
            "description": "<p>Stops recording and saves the output to file.</p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "recorderId",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.mediarecorder/takeSnapshot",
            "description": "<p>Takes one video snapshot during recording and save the image to a file.</p>\n\n<p>The default file name is of the format &quot;CaptureDDMMYYYY-HHMMSS&quot;, where DDMMYYYY-HHMMSS is current date and time.</p>",
            "acg": "mediarecorder.operation",
            "parameters": [
                {
                    "name": "recorderId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "path",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "format",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.memorymanager/getMemoryStatus",
            "description": "<p>Provides the current status of the memory.</p>",
            "acg": "memorymanager.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.memorymanager/requireMemory",
            "description": "<p>Requests for the memory that is required to launch an application.</p>\n\n<p><strong>Note:</strong><span style=\"color:#FF0000\"><strong> </strong></span>This method is called by the SAM module when it is about to launch an application.</p>",
            "acg": "memorymanager.management",
            "parameters": [
                {
                    "name": "requiredMemory",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.nettools/arping",
            "description": "<p>Performs an ARP request to resolve IP address to mac address which can then be used to detect IP address conflicts.</p>\n\n<p>The implementation uses a call to the system arping utility: &quot;arping -c 1 -f -I ifName ipaddress&quot;.</p>\n\n<p>arping is part of the iputils package available from&nbsp;http://www.skbuff.net/iputils/.</p>",
            "acg": "nettools.operation",
            "parameters": [
                {
                    "name": "ifName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "ipAddress",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.nettools/checkhttp",
            "description": "<p>Creates a TCP socket and checks if it can successfully connect to the hostURL using the standard http port (port 80).</p>",
            "acg": "nettools.operation",
            "parameters": [
                {
                    "name": "hostUrl",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.nettools/createVlan",
            "description": "<p>Creates a VLAN for the provided index and interface.</p>",
            "acg": "nettools.management",
            "parameters": [
                {
                    "name": "index",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "interface",
                    "required": "yes",
                    "type": "Object: interface"
                },
                {
                    "name": "method",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "netmask",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "gateway",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.nettools/deleteVlan",
            "description": "<p>Provided VLAN index will be deleted for the provided interface, if present.</p>",
            "acg": "nettools.management",
            "parameters": [
                {
                    "name": "index",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "interface",
                    "required": "yes",
                    "type": "Object: interface"
                }
            ]
        },
        {
            "uri": "com.webos.service.nettools/gethostname",
            "description": "<p>Gets the hostname for the system.</p>\n\n<p>The implementation uses a call to gethostname() in glibc.</p>",
            "acg": "nettools.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.nettools/ping",
            "description": "<p>&quot;Ping&quot; an IPv4&nbsp;network address or hostname to determine if it is reachable. The maximum wait time is 5 seconds.</p>\n\n<p>The implementation uses a call to the system ping command: &quot;ping -c 1 -w 5 hostname ifName&quot;.</p>\n\n<p><strong>Note:</strong>&nbsp;To ping an IPv6&nbsp;address, use the&nbsp;<strong>ping6()&nbsp;</strong>method.</p>",
            "acg": "nettools.operation",
            "parameters": [
                {
                    "name": "hostname",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "ifName",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.nettools/ping6",
            "description": "<p>Pings&nbsp;an IPv6 network address or host name to determine if it is reachable. The maximum amount of time the ping waits for a reply is 5 seconds.&nbsp;&nbsp;</p>\n\n<p>Internally, the implementation uses a call to the system ping command: &quot;ping6 -c 1 -w 5 hostname ifName&quot;.</p>\n\n<p><strong>Note:</strong> To ping an IPv4 address, use the <strong>ping() </strong>method.</p>",
            "acg": "nettools.operation",
            "parameters": [
                {
                    "name": "hostname",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "ifName",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.nettools/resolvehostname",
            "description": "<p>Performs a DNS request to resolve hostname to list all IP addresses that it maps to. This will return IPv4 or IPv6 addresses depending upon what the network interface supports.</p>\n\n<p>The implementation uses a call to the POSIX.1-2001 getaddrinfo() function, please refer to RFC 2553 (https://www.ietf.org/rfc/rfc2553.txt).</p>",
            "acg": "nettools.operation",
            "parameters": [
                {
                    "name": "hostname",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.nettools/sethostname",
            "description": "<p>Sets a new hostname for the system.</p>\n\n<p>The implementation uses a call to sethostname() in glibc.</p>",
            "acg": "nettools.management",
            "parameters": [
                {
                    "name": "hostname",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/eject",
            "description": "<p>Unmounts all drives of the storage device for safe removal.</p>\n\n<p><strong>Prerequisite:</strong>&nbsp;The storage device must be connected.</p>",
            "acg": "physicaldevice.management",
            "parameters": [
                {
                    "name": "deviceNum&nbsp;",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/format",
            "description": "<p>Formats the connected drive.</p>",
            "acg": "physicaldevice.management",
            "parameters": [
                {
                    "name": "driveName&nbsp;",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "fsType&nbsp;",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "volumeLabel",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/fsck",
            "description": "<p>Checks the file system by performing fsck (File System Check) of the corresponding connected drive.</p>\n\n<p><strong>Note</strong>: On connecting a USB device with a large number of files, the PDM service prompts for &ldquo;Check &amp; Repair&rdquo; and &ldquo;Open Now&rdquo;. The fsck() API will do the file system checking when &ldquo;Check &amp; Repair&rdquo; is selected.</p>",
            "acg": "physicaldevice.management",
            "parameters": [
                {
                    "name": "driveName&nbsp;",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/getAttachedDeviceStatus",
            "description": "<p>Gets the status&nbsp;information of connected device(s).</p>",
            "acg": "physicaldevice.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/getAttachedNonStorageDeviceList",
            "description": "<p>Gets the status&nbsp;information of connected non-storage device(s).</p>",
            "acg": "physicaldevice.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "groupSubDevices",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/getAttachedStorageDeviceList",
            "description": "<p>Gets status&nbsp;information of connected storage device(s).</p>",
            "acg": "physicaldevice.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/getExample",
            "description": "<p>Provides debug logs with&nbsp;detailed information of all connected storage and non-storage device list.</p>",
            "acg": "physicaldevice.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.pdm/getSpaceInfo",
            "description": "<p>Gets the space information of the connected drive.</p>\n\n<p><strong>Note</strong>: The drive must be mounted.</p>",
            "acg": "physicaldevice.query",
            "parameters": [
                {
                    "name": "driveName&nbsp;",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "directCheck",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/isWritableDrive",
            "description": "<p>Checks the file system attribute of the drive and returns whether it is writable.&nbsp;</p>",
            "acg": "physicaldevice.query",
            "parameters": [
                {
                    "name": "driveName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/mountandFullFsck",
            "description": "<p>Mounts the device without performing Fsck.</p>\n\n<p>Alternatively,&nbsp;it can be configured to perform Fsck and then&nbsp;mount&nbsp;&nbsp;the device.</p>",
            "acg": "physicaldevice.management",
            "parameters": [
                {
                    "name": "mountName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "needFsck",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/setVolumeLabel",
            "description": "<p>Sets the volume label of the drive. It is supported only when file system type is FAT.</p>",
            "acg": "physicaldevice.management",
            "parameters": [
                {
                    "name": "driveName&nbsp;",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "volumeLabel",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.pdm/umountAllDrive",
            "description": "<p>Unmounts all drives.&nbsp;</p>",
            "acg": "physicaldevice.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.peripheralmanager/gpio/close",
            "description": "<p>Closes the opened GPIO pin, so that the pin is available for other applications to use.</p>",
            "acg": "peripheralmanager.gpio.operation",
            "parameters": [
                {
                    "name": "pin",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/gpio/getDirection",
            "description": "<p>Returns the direction of the required GPIO pin.</p>",
            "acg": "peripheralmanager.query",
            "parameters": [
                {
                    "name": "pin",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/gpio/getPollingFd",
            "description": "<p>Returns the file descriptor for the GPIO pin specified in the input.</p>",
            "acg": "peripheralmanager.gpio.operation",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/gpio/getValue",
            "description": "<p>Reads the value of the opened input pin</p>",
            "acg": "peripheralmanager.gpio.operation",
            "parameters": [
                {
                    "name": "pin",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/gpio/list",
            "description": "<p>Provides the list of available GPIO pins in the target hardware.</p>",
            "acg": "peripheralmanager.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/gpio/open",
            "description": "<p>Opens the GPIO pin, if not already opened by other applications.</p>",
            "acg": "peripheralmanager.gpio.operation",
            "parameters": [
                {
                    "name": "pin",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/gpio/setDirection",
            "description": "<p>Sets the direction of the GPIO pin to input or output</p>",
            "acg": "peripheralmanager.gpio.operation",
            "parameters": [
                {
                    "name": "pin",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "direction",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/gpio/setValue",
            "description": "<p>Sets the value of the opened output pin to &quot;low&quot; or &quot;high&quot;</p>",
            "acg": "peripheralmanager.gpio.operation",
            "parameters": [
                {
                    "name": "pin",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "value",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/close",
            "description": "<p>Closes the opened I2C device connected to the bus.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/getPollingFd",
            "description": "<p>Returns the file descriptor for the I2c if specified in the input.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/list",
            "description": "<p>Provides the list of available I2C buses.</p>",
            "acg": "peripheralmanager.query",
            "parameters": [
                {
                    "name": "verbose",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/open",
            "description": "<p>Opens the device connected to I2C bus.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/read",
            "description": "<p>Reads data from the I2C device.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/readRegBuffer",
            "description": "<p>Reads a value&nbsp;from the register buffer.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "reg",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/readRegByte",
            "description": "<p>Reads a byte from a given register of the I2C device.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "reg",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/readRegWord",
            "description": "<p>Reads a word from the register of the i2c device.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "reg",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/write",
            "description": "<p>Writes the data to the opened I2C device.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "required": "yes",
                    "type": "Object array"
                },
                {
                    "name": "size",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/writeRegBuffer",
            "description": "<p>Writes data to the register buffer of the connected I2C device.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "reg",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "required": "yes",
                    "type": "Object array"
                },
                {
                    "name": "size",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/writeRegByte",
            "description": "<p>Writes a byte from a given register.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "reg",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/i2c/writeRegWord",
            "description": "<p>Writes a word to the register of the I2C device.</p>",
            "acg": "peripheralmanager.i2c.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "reg",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/close",
            "description": "<p>Closes the opened SPI bus, for other applications to use.</p>",
            "acg": "peripheralmanager.spi.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/list",
            "description": "<p>Provides the list of available SPI buses in the target hardware.</p>",
            "acg": "peripheralmanager.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/open",
            "description": "<p>Opens the SPI bus, if not already opened by other applications.</p>",
            "acg": "peripheralmanager.spi.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/setBitJustification",
            "description": "<p>Sets bit justification of the data transferred in the SPI bus i.e MSB-first or LSB-first</p>",
            "acg": "peripheralmanager.spi.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "lsb_first",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/setBitsPerWord",
            "description": "<p>Configures the number of bits in each SPI transfer word.</p>",
            "acg": "peripheralmanager.spi.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "nbits",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/setDelay",
            "description": "<p>Sets the delay after a transfer before the chip select status is changed and the next transfer is triggered.</p>",
            "acg": "peripheralmanager.spi.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "delay_usecs",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/setFrequency",
            "description": "<p>Sets the rate of data transfer (Hz)</p>",
            "acg": "peripheralmanager.spi.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "frequency",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/setMode",
            "description": "<p>Sets modes that correspond to the possible clocking configurations.</p>",
            "acg": "peripheralmanager.spi.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mode",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/transfer",
            "description": "<p>Opens a connection for receiving/transmitting data to/from a particular slave device.</p>",
            "acg": "peripheralmanager.spi.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "data",
                    "required": "no",
                    "type": "Object array"
                },
                {
                    "name": "size",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/writeBuffer",
            "description": "<p>Writes a chunk of data to SPI device.</p>",
            "acg": "peripheralmanager.spi.operation",
            "parameters": [
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "data",
                    "required": "yes",
                    "type": "Object array"
                },
                {
                    "name": "size",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/spi/writeByte",
            "description": "<p>Writes a byte of data to the SPI device connected to the bus.</p>",
            "acg": "peripheralmanager.spi.operation",
            "parameters": [
                {
                    "name": "data",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "name",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/uart/close",
            "description": "<p>Closes the opened UART device so that the interface is available for other apps to use.</p>",
            "acg": "peripheralmanager.uart.operation",
            "parameters": [
                {
                    "name": "interfaceId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/uart/getBaudrate",
            "description": "<p>Reads the baud rate of the opened UART device.</p>",
            "acg": "peripheralmanager.query",
            "parameters": [
                {
                    "name": "interfaceId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/uart/getPollingFd",
            "description": "<p>Returns the file descriptor for the UART interface specified in the input.</p>",
            "acg": "peripheralmanager.uart.operation",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/uart/list",
            "description": "<p>Provides the list of available UART interfaces in the target hardware.</p>",
            "acg": "peripheralmanager.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/uart/open",
            "description": "<p>Opens the UART interface, if not already opened by other applications.</p>",
            "acg": "peripheralmanager.uart.operation",
            "parameters": [
                {
                    "name": "interfaceId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "config",
                    "required": "no",
                    "type": "Object: config"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/uart/read",
            "description": "<p>Reads the data from the opened UART device.</p>",
            "acg": "peripheralmanager.uart.operation",
            "parameters": [
                {
                    "name": "interfaceId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "dataType",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "size",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/uart/setBaudrate",
            "description": "<p>Sets the baud rate of the opened UART device to the required value.</p>",
            "acg": "peripheralmanager.uart.operation",
            "parameters": [
                {
                    "name": "interfaceId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "baudrate",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.peripheralmanager/uart/write",
            "description": "<p>Writes the data to the opened UART device.</p>",
            "acg": "peripheralmanager.uart.operation",
            "parameters": [
                {
                    "name": "interfaceId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "data",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "dataType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "size",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/acquireWakeLock",
            "description": "<p>Allows the device to remain&nbsp;powered on for a specific time period, after which the lock is released.</p>\n\n<p><strong>Note: </strong>No other state change operation can be executed during this time period.</p>",
            "acg": "power.operation",
            "parameters": [
                {
                    "name": "clientId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/getPowerOnReason",
            "description": "<p>Gets the last reason set for powering-on the device.</p>",
            "acg": "power.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/getState",
            "description": "<p>Obtains the currently set state.</p>",
            "acg": "power.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/notifyAlarmExpiry",
            "description": "<p>Notifies about the alarm expiry.</p>",
            "parameters": [
                {
                    "name": "clientId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/reboot",
            "description": "<p>Reboots the device with in timeout after acknowledged from registered client.&nbsp;LunaInterfacePMSRoot:TimeOut is configured in&nbsp;/var/PMS/pms.conf file as 15mins by default. Timeout is in HH:MM:SS format</p>\n\n<p><strong>Note</strong>: Client will be prompted for acknowledgement if registered for state change notifications.</p>",
            "acg": "power.management",
            "parameters": [
                {
                    "name": "reason",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/registerStateTransition",
            "description": "<p>Clients can register to get notified when the state changes from a specified state. For example, if registered to get notifications on state &ldquo;ACTIVE&rdquo;, you will get notified when state changes from &ldquo;ACTIVE&rdquo; to any other state.</p>\n\n<p>Some transitions require acceptance (acknowledgement) from all clients who register to this state. For this check the&nbsp;<strong>respondStateTransitionAck()</strong> method.</p>\n\n<p><strong>Note:</strong><span style=\"color:#FF0000\"><strong> </strong></span>It is a subscription method. Subscription is notified when specified state change happens. setState method can be used for state change forcefully.</p>",
            "acg": "power.operation",
            "parameters": [
                {
                    "name": "state",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/releaseWakeLock",
            "description": "<p>Instantly releases the wake lock for the client.</p>",
            "acg": "power.operation",
            "parameters": [
                {
                    "name": "clientId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/respondStateTransitionAck",
            "description": "<p>For clients that have registered for state change notifications, some state transitions require acceptance (acknowledgement) of all clients who register for this state :</p>\n\n<ul style=\"list-style-type:circle\">\n\t<li>If all subscribers approve (ACK), the state change occurs.</li>\n\t<li>If even one subscriber rejects (NACK), the state does not change.</li>\n\t<li>Clients who have not subscribed to that state are not required to vote.</li>\n\t<li>No user input is considered as acceptance of the state change.</li>\n</ul>",
            "acg": "power.operation",
            "parameters": [
                {
                    "name": "state",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "ack",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "token",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/setPowerOnReason",
            "description": "<p>Specify the reason that caused the device to be powered on.</p>",
            "acg": "power.management",
            "parameters": [
                {
                    "name": "reason",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/setState",
            "description": "<p>Sets the state of the device.</p>\n\n<p>This method forcefully sets the state and ignores the sequential flow of power states. This means that the&nbsp;client is not prompted for acknowledgement, even&nbsp;if you have registered for state change notifications (using <strong>registerStateTransition()</strong> method).</p>\n\n<p><strong>Note: </strong>This method can also reboot or shutdown the device. However, it is advisable to use the specific methods provided for these purposes.</p>",
            "acg": "power.management",
            "parameters": [
                {
                    "name": "state",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.power2/shutdown",
            "description": "<p>Shuts down the device.</p>\n\n<p><strong>Note</strong>: Client will be prompted for acknowledgement if registered for state change notifications.</p>\n\n<p>This shutdown API will work differently for ose. If it is in ActiveState, it may go garage state base if it met preconditions i.e wifi on and SSID. (garageSSID can be configured in /var/PMS/pms.conf). Shuts down the device with in timeout after acknowledged from connection manager service(Precondition not met).&nbsp;LunaInterfacePMSRoot:TimeOut is configured in&nbsp;/var/PMS/pms.conf file as 15mins by default. Timeout is in HH:MM:SS format</p>",
            "acg": "power.management",
            "parameters": [
                {
                    "name": "reason",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.preferences/appProperties/getAllAppProperties",
            "description": "<p>The <strong>getAllAppProperties</strong> gets all properties set to an application as an object array.</p>\n\n<p><strong>Note:</strong>&nbsp;If the <strong>getAllAppProperties</strong> method succeeds, there will be no <strong>returnValue</strong> and the returned object will only be an array of JSON objects containing key/value pairs.</p>",
            "acg": "preferences.applicationpropertyquery",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.preferences/appProperties/getAllAppPropertiesObj",
            "description": "<p>The <strong>getAllAppPropertiesObj </strong>method gets&nbsp;all properties set to an application as an object.</p>",
            "acg": "preferences.applicationpropertyquery",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.preferences/appProperties/getAppKeys",
            "description": "<p>The <strong>getAppKeys </strong>method returns all property keys for an application as a string array.</p>\n\n<p><strong>Note:</strong> If the <strong>getAppKeys </strong>method succeeds, there will be no <strong>returnValue</strong> and the returned object will only be an array of strings.</p>",
            "acg": "preferences.applicationpropertyquery",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.preferences/appProperties/getAppKeysObj",
            "description": "<p>The&nbsp;<strong>getAppKeys&nbsp;</strong>method returns all property&nbsp;keys for an application as a JSON object.</p>",
            "acg": "preferences.applicationpropertyquery",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.preferences/appProperties/getAppProperty",
            "description": "<p>The&nbsp;<strong>getAppProperty&nbsp;</strong>method returns&nbsp;an application property for a specific key.</p>",
            "acg": "preferences.applicationpropertyquery",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.preferences/appProperties/removeAppProperty",
            "description": "<p>The&nbsp;<strong>getAppProperty&nbsp;</strong>method&nbsp;removes an application property.</p>",
            "acg": "preferences.operation",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.preferences/appProperties/setAppProperty",
            "description": "<p>Add or change an application property.</p>",
            "acg": "preferences.operation",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "value",
                    "required": "yes",
                    "type": "object"
                }
            ]
        },
        {
            "uri": "com.webos.service.preferences/backup/postRestore",
            "description": "<p><strong>postRestore</strong>&nbsp;method restores the application/services preferences from <strong>lunaprefs_backup.db</strong>&nbsp;provided in the parameter.</p>",
            "acg": "preferences.management",
            "parameters": [
                {
                    "name": "tempDir",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "files",
                    "required": "yes",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.preferences/backup/preBackup",
            "description": "<p><strong>preBackup</strong>&nbsp;method takes backup of application/services preferences stored in &quot;/var/preferences&quot; path.</p>",
            "acg": "preferences.management",
            "parameters": [
                {
                    "name": "tempDir",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sdkagent/collector/getConfig",
            "description": "<p>Gets&nbsp;configurations of the Telegraf service.</p>",
            "acg": "sdkagent.collector",
            "parameters": []
        },
        {
            "uri": "com.webos.service.sdkagent/collector/getData",
            "description": "<p>Gets data from the Telegraf service.</p>",
            "acg": "sdkagent.collector",
            "parameters": [
                {
                    "name": "inputs",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.sdkagent/collector/getStatus",
            "description": "<p>Gets status of the Telegraf service.</p>",
            "acg": "sdkagent.collector",
            "parameters": []
        },
        {
            "uri": "com.webos.service.sdkagent/collector/restart",
            "description": "<p>Restarts the Telegraf service.</p>",
            "acg": "sdkagent.collector",
            "parameters": []
        },
        {
            "uri": "com.webos.service.sdkagent/collector/setConfig",
            "description": "<p>Sets configurations of the Telegraf service.</p>",
            "acg": "sdkagent.collector",
            "parameters": [
                {
                    "name": "agent",
                    "required": "no",
                    "type": "Object: agent"
                },
                {
                    "name": "outputs.influxdb",
                    "required": "no",
                    "type": "Object: outputs.influxdb"
                },
                {
                    "name": "webOS.webProcessSize",
                    "required": "no",
                    "type": "Object: webOS.webProcessSize"
                },
                {
                    "name": "webOS.processMonitoring",
                    "required": "no",
                    "type": "Object: webOS.processMonitoring"
                }
            ]
        },
        {
            "uri": "com.webos.service.sdkagent/collector/start",
            "description": "<p>Starts the Telegraf service.</p>",
            "acg": "sdkagent.collector",
            "parameters": []
        },
        {
            "uri": "com.webos.service.sdkagent/collector/startOnBoot",
            "description": "<p>Automatically starts the Telegraf service on device boot-up and starts monitoring.</p>",
            "acg": "sdkagent.collector",
            "parameters": [
                {
                    "name": "enable",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.sdkagent/collector/stop",
            "description": "<p>Stops the Telegraf service.</p>",
            "acg": "sdkagent.collector",
            "parameters": []
        },
        {
            "uri": "com.webos.service.settings/batch",
            "description": "<p>Runs more than one Settings Service&nbsp;method at once.</p>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>Subscription&nbsp;is supported only when all the methods in <strong>operations</strong>&nbsp;input parameter support subscription.</li>\n\t</ul>\n\t</li>\n\t<li>Exception\n\t<ul>\n\t\t<li>Atomicity is not supported.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.management",
            "parameters": [
                {
                    "name": "operations",
                    "required": "yes",
                    "type": "Object array: batchOperation"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/deleteSystemSettings",
            "description": "<p>Deletes settings item(s). Factory default value is also deleted.</p>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>In case there is a subscriber for the deleted item, error text will be sent.</li>\n\t</ul>\n\t</li>\n\t<li>Exception\n\t<ul>\n\t\t<li>Errors occur when using undefined dimension.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.management",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "dimension",
                    "required": "no",
                    "type": "Object: dimension"
                },
                {
                    "name": "keys",
                    "required": "yes",
                    "type": "String array"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/getCurrentSettings",
            "description": "<p>Looks up the settings item, and returns the settings for the current foreground app only unlike the <strong>setSystemSettings</strong> method.</p>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>Even though the foreground app is converted, the subscription message for the changed app settings will not be sent.</li>\n\t</ul>\n\t</li>\n\t<li>Exception\n\t<ul>\n\t\t<li>Errors occur when using undefined dimensions.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.query",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "dimension",
                    "required": "no",
                    "type": "Object: dimension"
                },
                {
                    "name": "keys",
                    "required": "yes",
                    "type": "array"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/getSystemSettingDesc",
            "description": "<p>Retrieves detailed information on the settings.</p>\n\n<p><strong>Exception:</strong></p>\n\n<ul>\n\t<li>The request for nonexistent keys is processed as an error.</li>\n</ul>",
            "acg": "settings.query",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "keys",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "key",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "current_app",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/getSystemSettingFactoryValue",
            "description": "<p>Retrieves the factory default value of the setting item. Method of use is the same as <strong>getSystemSettings</strong>.</p>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>Dimension is applied in the same way as getSystemSettings.</li>\n\t\t<li>Subscription is not supported.</li>\n\t</ul>\n\t</li>\n\t<li>Exception\n\t<ul>\n\t\t<li>If undefined dimension is used, errors will occur.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.query",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "dimension",
                    "required": "no",
                    "type": "Object: dimension"
                },
                {
                    "name": "keys",
                    "required": "no",
                    "type": "String array"
                },
                {
                    "name": "key",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/getSystemSettingValues",
            "description": "<p>Retrives possible items to be set</p>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>The return type varies depending on the keys.</li>\n\t\t<li>Use&nbsp;<strong>getSystemSettingDesc</strong> method for the retrieval of additional info other than configurable valid conditions</li>\n\t</ul>\n\t</li>\n\t<li>Exception\n\t<ul>\n\t\t<li>Errors will occur when retrieving the undefined keys.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.query",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/getSystemSettings",
            "description": "<p>Retrieves values from system settings with keys or category&nbsp;which are specified in array as parameter. Following keys are available in public bus.</p>\n\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"0\" style=\"height:178px; width:642px\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th scope=\"col\">Category</th>\n\t\t\t<th scope=\"col\">Key</th>\n\t\t\t<th scope=\"col\">Remarks</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>N/A</td>\n\t\t\t<td>localeInfo</td>\n\t\t\t<td>\n\t\t\t<p>Locale info such as Menu, Audio</p>\n\n\t\t\t<p>&nbsp;</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>N/A</td>\n\t\t\t<td>eulaStatus</td>\n\t\t\t<td>\n\t\t\t<p>End-User License Agreement</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>caption</td>\n\t\t\t<td>captionEnable</td>\n\t\t\t<td>\n\t\t\t<p>Caption settings</p>\n\n\t\t\t<p>&nbsp;</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>option</td>\n\t\t\t<td>country</td>\n\t\t\t<td>\n\t\t\t<p>Country settings (ISO 3166-1 alpha-3)</p>\n\n\t\t\t<p>&nbsp;</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>option</td>\n\t\t\t<td>smartServiceCountryCode2</td>\n\t\t\t<td>\n\t\t\t<p>Service country settings&nbsp; (ISO 3166-1 alpha-2)</p>\n\n\t\t\t<p>&nbsp;</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>option</td>\n\t\t\t<td>smartServiceCountryCode3</td>\n\t\t\t<td>\n\t\t\t<p>Service country settings (ISO 3166-1 alpha-3)</p>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>There is additional feature named &#39;Dimension&#39;. We can store different settings values with a KEY using different dimension. Imagine array. Using dimension, we can keep different settings values simultaneously, and categorize settings into some groups. Dimension is index by other keys settingsservice has. For example, Brightness key has 3 dimensions, input, 3dmode, and pictureMode. You can store different brightness value according to 3 different settings, input, 3dmode, and pictureMode.</li>\n\t</ul>\n\t</li>\n\t<li>Exception\n\t<ul>\n\t\t<li>If <strong>getSystemSettings</strong> is called with undefined category and key, it will return error.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.query",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "dimension",
                    "required": "no",
                    "type": "Object: dimension"
                },
                {
                    "name": "keys",
                    "required": "no",
                    "type": "array"
                },
                {
                    "name": "key",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "current_app",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/internal/getCurrentSubscriptions",
            "description": "<p>Returns the information of the services which currently subscribe&nbsp;to the Settings Service.&nbsp;</p>",
            "acg": "settings.devutility",
            "parameters": []
        },
        {
            "uri": "com.webos.service.settings/internal/instrument",
            "description": "<p>Generates log for debug and changes current app.</p>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>Generates logs for every luna call</li>\n\t\t<li>Changes current&nbsp;app id</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.devutility",
            "parameters": [
                {
                    "name": "control",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "params",
                    "required": "no",
                    "type": "Object"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/resetSystemSettingDesc",
            "description": "<p>Initializes the settings item information to the factory default value.</p>\n\n<ul>\n\t<li>Exception\n\t<ul>\n\t\t<li>Error&nbsp;occurs when requesting to delete nonexistent keys.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.management",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "keys",
                    "required": "yes",
                    "type": "array"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/resetSystemSettings",
            "description": "<p>&nbsp;Initializes the setting items to the factory default values.</p>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>For the given category, when changing setting items, other items can be initialized according to the dimension.</li>\n\t\t<li>For the key with &#39;E&#39; dbtype, the values of ExceptionApp list will be equally changed.</li>\n\t</ul>\n\t</li>\n\t<li>Exception\n\t<ul>\n\t\t<li>Error&nbsp;occurs&nbsp;when using undefined dimension.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.management",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "dimension",
                    "required": "no",
                    "type": "Object: dimension"
                },
                {
                    "name": "keys",
                    "required": "yes",
                    "type": "array"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "resetAll",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/setSystemSettingDesc",
            "description": "<p>Changes detailed information of the settings.</p>\n\n<ul>\n\t<li>Exception\n\t<ul>\n\t\t<li>Category, key, dimension, dbtype, volatile attributes cannot be changed during runtime.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.management",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "ui",
                    "required": "no",
                    "type": "Object: ui"
                },
                {
                    "name": "vtype",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "values",
                    "required": "no",
                    "type": "Object: values"
                },
                {
                    "name": "volatile",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "valueCheck",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "notifySelf",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "ext",
                    "required": "no",
                    "type": "Object: ext"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/setSystemSettingFactoryDesc",
            "description": "<p>Sets the default value when reset by <strong>resetSystemSettingDesc</strong>.</p>\n\n<p>It is the same type as&nbsp;<strong>setSystemSettingDesc</strong>&nbsp;method, and it can change the factory default values of the settings info.</p>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>Settings item info is in JSON&nbsp;type, and includes the following.</li>\n\t</ul>\n\t</li>\n\t<li>Exception\n\t<ul>\n\t\t<li>Category, key, dimension, dbtype, volatile attributes cannot be changed during runtime.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.management",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "ui",
                    "required": "no",
                    "type": "Object array: ui"
                },
                {
                    "name": "vtype",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "values",
                    "required": "no",
                    "type": "Object: values"
                },
                {
                    "name": "volatile",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "valueCheck",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "notifySelf",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "ext",
                    "required": "no",
                    "type": "Object: ext"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/setSystemSettingFactoryValue",
            "description": "<p>Changes the factory default of the setting item. The using method is same as <strong>setSystemSettings</strong> method.</p>\n\n<p>It can set the default value when <strong>resetSystemSettings</strong>&nbsp;method&nbsp;is called.</p>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>In case of the following specific categories, when changing settings, it can store different values according to conditions such as dimension.</li>\n\t</ul>\n\t</li>\n\t<li>Exception\n\t<ul>\n\t\t<li>When using undefined dimension, errors will occur.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.management",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "dimension",
                    "required": "no",
                    "type": "Object: dimension"
                },
                {
                    "name": "settings",
                    "required": "yes",
                    "type": "Object: settings"
                },
                {
                    "name": "setAll",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "country",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/setSystemSettingValues",
            "description": "<p>Changes the formats of the configurable values. It can change detailed information using <strong>setSystemSettingDesc</strong> method.</p>\n\n<ul>\n\t<li>Exception\n\t<ul>\n\t\t<li>When undefined keys are requested to change settings, errors will occur.</li>\n\t</ul>\n\t</li>\n</ul>",
            "acg": "settings.management",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "values",
                    "required": "yes",
                    "type": "Object: values"
                },
                {
                    "name": "vtype",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "op",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.settings/setSystemSettings",
            "description": "<p>Changes settings. It is available only for the keys open to public when called through Public Luna bus. The permission setting is as follow.</p>\n\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"0\" style=\"height:60px; width:642px\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th scope=\"col\">Category</th>\n\t\t\t<th scope=\"col\">Key</th>\n\t\t\t<th scope=\"col\">Remarks</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>caption</td>\n\t\t\t<td>captionEnable</td>\n\t\t\t<td>Caption setting</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<ul>\n\t<li>Remarks\n\t<ul>\n\t\t<li>In case of the following specific categories, when changing settings, it can store different values according to the dimension.</li>\n\t\t<li>For the keys with &#39;E&#39; dbtype, the values of ExceptionApp list will be equally changed.</li>\n\t</ul>\n\t</li>\n\t<li>Exception\n\t<ul>\n\t\t<li>When an undefined dimension is used, errors will occur.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>",
            "acg": "settings.management",
            "parameters": [
                {
                    "name": "category",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "dimension",
                    "required": "no",
                    "type": "Object: dimension"
                },
                {
                    "name": "settings",
                    "required": "yes",
                    "type": "Object: settings"
                },
                {
                    "name": "app_id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "notifySelf",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "current_app",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "setAll",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "notify",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "store",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/com/palm/power/TESTSuspend",
            "description": "<p>Schedule the IdleCheck thread to check if the device can suspend.</p>\n\n<p><strong>Note:&nbsp;</strong>Used for developer testing purposes.</p>",
            "acg": "sleep.management,sleep.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.sleep/com/palm/power/activityEnd",
            "description": "<p>Cancel a previous request (identified by &quot;id&quot;) which was registered using activityStart.</p>",
            "acg": "sleep.management,sleep.operation",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/com/palm/power/activityStart",
            "description": "<p>An activity is a specified time duration for which you do not want the system to suspend. This method requests that the system create an activity for &quot;duration&quot; (in milliseconds) with an associated &quot;id&quot; (activity name).</p>",
            "acg": "sleep.management,sleep.operation",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "duration_ms",
                    "required": "yes",
                    "type": "number"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/com/palm/power/clientCancelByName",
            "description": "Unregister the client by its name.",
            "acg": "sleep.management,sleep.operation",
            "parameters": [
                {
                    "name": "clientName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/com/palm/power/forceSuspend",
            "description": "<p>Force the device to go into suspend even with charger connected or any activity is still active.</p>\n\n<p><strong>Note:&nbsp;</strong>Used for developer testing purposes.</p>",
            "acg": "sleep.management,sleep.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.sleep/com/palm/power/identify",
            "description": "Register a new client with the given name",
            "acg": "sleep.management,sleep.operation",
            "parameters": [
                {
                    "name": "clientName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/com/palm/power/prepareSuspendAck",
            "description": "<p>Used by a client to respond (ack or nack) to the &quot;prepareSuspend&quot; signal.&nbsp;Once the client sends ack to the &quot;prepareSuspend&quot; signal, the client does not do any more operations and prepare itself for the system suspend.</p>",
            "acg": "sleep.management,sleep.operation",
            "parameters": [
                {
                    "name": "clientId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "ack",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/com/palm/power/prepareSuspendRegister",
            "description": "Register a client (already registered with \"identify\" call) for \"prepare suspend\" signal. This will add to the counter \"sNumPrepareSuspend\" before every polling to make a decision to proceed with the suspend action or postpone it later.",
            "acg": "sleep.management,sleep.operation",
            "parameters": [
                {
                    "name": "clientId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "register",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/com/palm/power/suspendRequestAck",
            "description": "<p>Add the client&#39;s count in the total number of ACKs received for the &quot;suspend request&quot; signal.</p>",
            "acg": "sleep.management,sleep.operation",
            "parameters": [
                {
                    "name": "clientId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "ack",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/com/palm/power/suspendRequestRegister",
            "description": "Register a client (already registered with \"identify\" call) for \"suspend request\" signal. This will add to the counter \"sNumSuspendRequest\" before every polling to make a decision to proceed with the suspend action or postpone it later.",
            "acg": "sleep.management,sleep.operation",
            "parameters": [
                {
                    "name": "clientId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "register",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/shutdown/TESTresetShutdownState",
            "description": "<p>Called by test code to reset state machine to square 1.</p>\n\n<p><strong>Note:&nbsp;</strong>Used for developer testing purposes.</p>",
            "acg": "sleep.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.sleep/shutdown/initiate",
            "description": "<p>Starts the shutdown process. It sends&nbsp;the <strong>shutdownApplications</strong> and <strong>shutdownServices</strong> signals to all the registered apps/services.</p>\n\n<p>Returns &quot;true&quot; once the shutdown process is complete&nbsp;and the system decides that it can shutdown.</p>\n\n<p><strong>Note</strong>: This call does not do the actual shutdown; instead&nbsp;use the&nbsp;<strong>machineOff&nbsp;</strong>method.&nbsp;</p>",
            "acg": "sleep.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.sleep/shutdown/machineOff",
            "description": "<p>Shuts down the machine forcefully.</p>",
            "acg": "sleep.management",
            "parameters": [
                {
                    "name": "reason",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/shutdown/machineReboot",
            "description": "<p>Reboots the machine forcefully by calling &quot;reboot&quot;.</p>",
            "acg": "sleep.management",
            "parameters": [
                {
                    "name": "reason",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/shutdown/shutdownApplicationsAck",
            "description": "<p>Sets the client&#39;s response as ACK for the &quot;shutdownApplications&quot; signal and trigger the dispatcher for the shutdown state machine, so that if the total client ACK count exceeds total number of clients, it can proceed to the next state.</p>",
            "acg": "sleep.management",
            "parameters": [
                {
                    "name": "clientId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/shutdown/shutdownApplicationsRegister",
            "description": "<p>Registers an application for the &quot;shutdownApplications&quot; signal. Returns the client ID&nbsp;of the client.</p>",
            "acg": "sleep.management",
            "parameters": [
                {
                    "name": "clientName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/shutdown/shutdownServicesAck",
            "description": "<p>Sets the client&#39;s response as ACK for the &quot;shutdownServices&quot; signal and trigger the dispatcher for the shutdown state machine, so that if the total client ACK count exceeds total number of clients, it can proceed to the next state.</p>",
            "acg": "sleep.management",
            "parameters": [
                {
                    "name": "clientId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/shutdown/shutdownServicesRegister",
            "description": "<p>Registers an application for the &quot;shutdownApplications&quot; signal. Returns the client ID&nbsp;of the client added.</p>",
            "acg": "sleep.management",
            "parameters": [
                {
                    "name": "clientName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/time/alarmAdd",
            "description": "Set alarm to fire in a fixed time in the future.",
            "acg": "sleep.operation",
            "parameters": [
                {
                    "name": "serviceName",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "relative_time",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/time/alarmAddCalendar",
            "description": "Set a calendar event.",
            "acg": "sleep.operation",
            "parameters": [
                {
                    "name": "serviceName",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "date",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "time",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/time/alarmQuery",
            "description": "<p>Query for set of alarms identified by 'serviceName' &amp; 'key'.<br></p>",
            "acg": "sleep.operation",
            "parameters": [
                {
                    "name": "serviceName",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/time/internalAlarmFired",
            "description": "<p>Called when an RTC alarm is fired.</p>",
            "acg": "sleep.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.sleep/timeout/clear",
            "description": "<p>Handles a timeout/clear message and deletes a timeout by its key.</p>",
            "acg": "sleep.operation",
            "parameters": [
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.sleep/timeout/set",
            "description": "<p>Handles a timeout/set message and adds a new power timeout. Relative timeouts can be set by passing the &quot;in&quot; parameter. Absolute timeouts can be set by passing the &quot;at&quot; parameter.</p>",
            "acg": "sleep.operation",
            "parameters": [
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "at",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "in",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "uri",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "params",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "wakeup",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "activity_id",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "activity_duration_ms",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "keep_existing",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.storageaccess/device/copy",
            "description": "<p>Copies a file or directory from the source location to the destination.</p>",
            "acg": "storageaccess.operation",
            "parameters": [
                {
                    "name": "srcStorageType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "srcDriveId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "srcPath",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "destStorageType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "destDriveId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "destPath",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "overwrite",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.storageaccess/device/eject",
            "description": "<p>Ejects the storage device. In case of &quot;cloud&quot; storage type, it acts as a logout operation.</p>\n\n<p><strong>Note:</strong> This operation is not applicable for &quot;internal&quot; storage type.</p>",
            "acg": "storageaccess.operation",
            "parameters": [
                {
                    "name": "storageType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "driveId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.storageaccess/device/getProperties",
            "description": "<p>Gets properties of the given storage provider or the specified&nbsp;file or directory.</p>",
            "acg": "storageaccess.operation",
            "parameters": [
                {
                    "name": "storageType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "driveId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "path",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.storageaccess/device/handleExtraCommand",
            "description": "<p>Handles addtional operation related to various providers.</p>",
            "acg": "storageaccess.operation",
            "parameters": [
                {
                    "name": "storageType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "driveId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "operation",
                    "required": "yes",
                    "type": "Object: operation"
                }
            ]
        },
        {
            "uri": "com.webos.service.storageaccess/device/list",
            "description": "<p>Lists contents of the specified directory.</p>",
            "acg": "storageaccess.operation",
            "parameters": [
                {
                    "name": "storageType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "driveId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "path",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "offset",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "limit",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.storageaccess/device/move",
            "description": "<p>Moves a file or directory from the source location to the destination.</p>",
            "acg": "storageaccess.operation",
            "parameters": [
                {
                    "name": "srcStorageType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "srcDriveId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "destStorageType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "destDriveId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "srcPath",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "destPath",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "overwrite",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.storageaccess/device/remove",
            "description": "<p>Deletes the specified file or directory.</p>",
            "acg": "storageaccess.operation",
            "parameters": [
                {
                    "name": "storageType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "driveId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "path",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.storageaccess/device/rename",
            "description": "<p>Renames the specified file or directory.</p>",
            "acg": "storageaccess.operation",
            "parameters": [
                {
                    "name": "storageType",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "driveId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "path",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "newName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.storageaccess/listStorageProviders",
            "description": "<p>Provides a list of storages providers and the corresponding drive information.</p>",
            "acg": "storageaccess.operation",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/backup/postRestore",
            "description": "<p>Restores the platform-specific environment settings from the dump file, previously created by the <strong>preBackup</strong> method call.</p>\n\n<p>Call this method after executing the restore procedure in order to restore platform-specific settings.</p>\n\n<p>The dump files are saved into the directory specified by the&nbsp;<strong>temp_dir</strong>&nbsp;parameter.</p>\n\n<p>This method is internal, only system applications can use it. It is not available to third-party applications.</p>",
            "acg": "systemsettings.management",
            "parameters": [
                {
                    "name": "tempDir",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "files",
                    "required": "yes",
                    "type": "string array"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/backup/preBackup",
            "description": "<p>The <strong>preBackup</strong> method creates dump files containing platform-specific environment settings. Call this method before executing the backup procedure in order to save these settings.</p>\n\n<p>The dump files are saved into the directory specified by the <strong>temp_dir</strong> parameter or <strong>&#39;${localstatedir}/preferences&#39;</strong>.</p>\n\n<p>The list of the platform-specific settings that are saved in the dump file is specified in the <strong>sysservice-backupkeys.json</strong> file. Below is an example of this file:</p>\n\n<p>[<br />\n&nbsp;&nbsp; &nbsp;&quot;useNetworkTime&quot;,<br />\n&nbsp;&nbsp; &nbsp;&quot;useNetworkTimeZone&quot;,<br />\n&nbsp;&nbsp; &nbsp;&quot;timeZone&quot;,<br />\n&nbsp;&nbsp; &nbsp;&quot;timeChangeLaunch&quot;,<br />\n&nbsp;&nbsp; &nbsp;&quot;showcontactmatch&quot;,<br />\n&nbsp; &nbsp; &quot;x_webos_virtualkeyboard_prefs&quot;<br />\n]</p>\n\n<p>If any of the method parameters is not specified or specified incorrectly, the method will use the default values.</p>\n\n<p>This method is internal, only system applications can use it. It is not available to third-party applications.</p>",
            "acg": "systemsettings.management",
            "parameters": [
                {
                    "name": "incrementalKey",
                    "required": "no",
                    "type": "object"
                },
                {
                    "name": "maxTempBytes",
                    "required": "no",
                    "type": "number"
                },
                {
                    "name": "tempDir",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/clock/getTime",
            "description": "<p>The <strong>getTime</strong> method gets the current time for a specific time source.</p>\n\n<p>There are several time data sources on the system: Linux system time, user time, network-broadcast time and more.&nbsp;When calling this method, you can specify the desired time data source in the <strong>source</strong> parameter.&nbsp;The complete list of the data sources is listed in the&nbsp;<strong>source</strong>&nbsp;parameter description below.&nbsp;</p>\n\n<p>Any application can use this method.</p>",
            "acg": "time.query",
            "parameters": [
                {
                    "name": "source",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "manualOverride",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "fallback",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/clock/setTime",
            "description": "<p>The <strong>setTime</strong> method is used to set the time. By calling this method you can update any time data source, including Linux system time, network-broadcasted time, user time and others.</p>\n\n<p>Any application can use this method.</p>\n\n<p>After this method is called, the system services receives a notification about the time update.</p>",
            "acg": "time.management,systemsettings.management",
            "parameters": [
                {
                    "name": "utc",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "source",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "available",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "timestamp",
                    "required": "no",
                    "type": "Object: Timestamp"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/deviceInfo/query",
            "description": "<p>The <strong>query</strong> method to get the device system information such as product Id, system number, hardware information, Wi-FI address, battery status and others. Please refer to the return values table below for a complete list of the system parameters.</p>\n\n<p><strong>Note:</strong> This method must not be used by 3rd-party applications.</p>",
            "acg": "systemsettings.query",
            "parameters": [
                {
                    "name": "parameters",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/getPreferenceValues",
            "description": "<p>Retrieves a list of valid values for the specified key. If the key is of a type that takes one of a discrete set of valid values, it&nbsp;returns that set.&nbsp;Otherwise, it&nbsp;returns nothing for the key.</p>",
            "acg": "systemsettings.query",
            "parameters": [
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/getPreferences",
            "description": "<p>The <strong>getPreferences</strong> method retrieves the values for keys specified in a passed array. If subscribe is set to true, then <strong>getPreferences</strong> sends an update if the key values change. This method queries system preference values and custom user values.</p>",
            "acg": "systemsettings.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "keys",
                    "required": "yes",
                    "type": "string array"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/osInfo/query",
            "description": "<p>The <strong>query</strong> method returns operating system information. This method may be used to display the operating system version, API version, build name and date and so on.</p>\n\n<p>This method is available for both internal and third-party applications.</p>",
            "acg": "systemsettings.query",
            "parameters": [
                {
                    "name": "parameters",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/ringtone/addRingtone",
            "description": "<p>Adds a new ringtone on devices that use ringtones.</p>\n\n<p><strong>Note: </strong>This method is public. It can be used both by the system and third-party applications.</p>",
            "acg": "systemsettings.management",
            "parameters": [
                {
                    "name": "filePath",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/ringtone/deleteRingtone",
            "description": "<p>Deletes a ringtone.&nbsp;</p>\n\n<p><strong>Note: </strong>This method is public. It can be used both by the system and third-party applications.</p>",
            "acg": "systemsettings.management",
            "parameters": [
                {
                    "name": "filePath",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/setPreferences",
            "description": "<p>The <strong>setPreferences</strong> method sets preference keys to specified values. The values are specified by pair:&nbsp;key - value&nbsp;in JSON format. See the example below.</p>\n\n<p><strong>Note: </strong>This method is public. It can be used both by the system and third-party applications.</p>",
            "acg": "systemsettings.management",
            "parameters": [
                {
                    "name": "param208",
                    "required": "no",
                    "type": "Object"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/softwareInfo/query",
            "description": "<p>Returns details of software deployed on the webOS device.</p>\n\n<p><strong>Note: </strong>Currently, returns only the nodejs version.</p>",
            "acg": "software.query",
            "parameters": [
                {
                    "name": "parameters",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/time/convertDate",
            "description": "<p>The <strong>convertDate</strong> method converts the given date from one timezone to another.</p>",
            "acg": "time.management",
            "parameters": [
                {
                    "name": "date",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "source_tz",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "dest_tz",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/time/getBroadcastTime",
            "description": "<p>The <strong>getBroadcastTime</strong> method returns the broadcast time.</p>",
            "acg": "time.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.systemservice/time/getCurrentTimeZoneByLocale",
            "description": "<p>Returns the locale info matching the requested locale settings. In particular, the name of the city is returned on the language for which the code is specified in the <strong>locale </strong>request parameter.</p>",
            "acg": "time.query",
            "parameters": [
                {
                    "name": "locale",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/time/getEffectiveBroadcastTime",
            "description": "<p>Returns the <strong>effective</strong>&nbsp;broadcast time. If no broadcast time info update has been received since boot, the&nbsp;Linux system-wide time is returned.</p>",
            "acg": "time.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/time/getNTPTime",
            "description": "<p>The <strong>getNTPTime</strong> returns the fresh NTP time (the time data transferred by the Network Time Protocol).</p>",
            "acg": "time.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.systemservice/time/getSystemTime",
            "description": "<p>The <strong>time/getSystemTime</strong> method gets the system time and time zone information. Apps can susbcribe to this method and&nbsp;receive notifications when the time zone changes and/or the system time changes by a significant amount (currently 5 min.).</p>\n\n<p>This method does not generate errors, however if the <strong>LSSubscriptionAdd</strong> method, which is used inside the&nbsp;<strong>getSystemTime</strong> method, returns an error, this error is reported.</p>",
            "acg": "time.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/time/getSystemTimezoneFile",
            "description": "<p>Returns the path to Linux time-zone information file for the currently set zone. This file contains the list of rules that define switching to and from daylight saving time. In particular, the time-zone information file defines when the time shift occurs in each particular year.</p>\n\n<p><strong>Note:</strong> A call to this method always succeeds. This method does not return <strong>returnValue.</strong></p>",
            "acg": "time.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.systemservice/time/getSystemUptime",
            "description": "<p>Returns the number of seconds since the last system boot. This method uses the Linux-specific <strong>sysinfo</strong>&nbsp;function.</p>",
            "acg": "time.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.systemservice/time/launchTimeChangeApps",
            "description": "<p>Executes all methods listed in the&nbsp;<strong>timeChangeLaunch</strong> list (value of the <strong>timeChangeLaunch</strong>&nbsp;preference).</p>\n\n<p>The&nbsp;<strong>timeChangeLaunch</strong> list contains all applications that must be executed when the switching to/from the daylight saving time occurs. These applications are executed automatically, you should not call the <strong>launchTimeChangeApps</strong> method. However, if for some reason you need to execute these applications apart from the schedule, you can call the&nbsp;the <strong>launchTimeChangeApps</strong> method.</p>\n\n<p><strong>Note:</strong> This method call always succeeds.</p>",
            "acg": "time.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.systemservice/time/setBroadcastTime",
            "description": "<p>Sets the broadcast time which is in the broadcast signal. The system service will be notified that the broadcast time must be changed.</p>",
            "acg": "time.management",
            "parameters": [
                {
                    "name": "utc",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "local",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "required": "no",
                    "type": "Object: Timestamp"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/time/setSystemNetworkTime",
            "description": "<p>The <strong>setSystemNetworkTime</strong> method is&nbsp;used to send a NITZ messages to Luna System Service. A NITZ message contains the&nbsp;local time and date, time zone and DST offset, as well as network provider identity.&nbsp;NITZ can be used to update the system clock of network devices.</p>\n\n<p>This method is&nbsp;called by the service, which receives the time data from the service provider.</p>",
            "acg": "time.management",
            "parameters": [
                {
                    "name": "sec",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "min",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "hour",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mday",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mon",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "year",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "offset",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mcc",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "mnc",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "tzvalid",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "timevalid",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "dstvalid",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "dst",
                    "required": "yes",
                    "type": "Number (int32_t)"
                },
                {
                    "name": "timestamp",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "tilIgnore",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/time/setSystemTime",
            "description": "<p>The <strong>setSystemTime</strong> method&nbsp;sets the Linux system-wide time effectively overriding any previous synchronization with any time source.</p>\n\n<p>Note: this API might not change system time returned by <strong>getSystemTime</strong>.<strong>&nbsp;</strong>It depends on <strong>manualOverride</strong> and <strong>useNetworkTime </strong>preferences.</p>",
            "acg": "time.management",
            "parameters": [
                {
                    "name": "utc",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "required": "no",
                    "type": "Object: Timestamp"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/time/setTimeChangeLaunch",
            "description": "<p>The <strong>setTimeChangeLaunch</strong>&nbsp;method adds an application to, or removes it from the <strong>timeChangeLaunch</strong> list.</p>\n\n<p>The&nbsp;<strong>timeChangeLaunch list</strong> contains the applications that are automatically executed by the system when the switch to or from the daylight saving time occurs.</p>",
            "acg": "time.management",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "active",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "parameters",
                    "required": "yes",
                    "type": "Object"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/time/setTimeWithNTP",
            "description": "<p>The <strong>setTimeWithNTP</strong>&nbsp;methods synchronizes the system time with the NTP.</p>\n\n<p><strong>Note: </strong>This method call always succeeds.</p>",
            "acg": "time.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.systemservice/timezone/createTimeZoneFromEasData",
            "description": "<p>Create a manual timezone named &quot;<strong>Etc/Manual</strong>&quot;&nbsp;and specify details of this&nbsp;timezone.</p>\n\n<p>After creating the timezone, enable it by using the&nbsp;following command:&nbsp;</p>\n\n<p><em>luna-send -n 1 -f luna://com.webos.service.systemservice/setPreferences &#39;{&quot;timeZone&quot;: {&quot;ZoneID&quot;: &quot;Etc/Manual&quot;}}&#39;</em></p>",
            "acg": "time.management",
            "parameters": [
                {
                    "name": "bias",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "standardDate",
                    "required": "no",
                    "type": "Object: TimeZoneEasRule"
                },
                {
                    "name": "standardBias",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "daylightDate",
                    "required": "no",
                    "type": "Object: TimeZoneEasRule"
                },
                {
                    "name": "daylightBias",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/timezone/getTimeZoneFromEasData",
            "description": "<p>Gets the time-zone that matches the provided EAS data. This method enables you to determine the time zone by the specified time stamp.</p>",
            "acg": "time.query",
            "parameters": [
                {
                    "name": "bias",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "standardDate",
                    "required": "no",
                    "type": "Object: EasLocalTime"
                },
                {
                    "name": "standardBias",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "daylightDate",
                    "required": "no",
                    "type": "Object: EasLocalTime"
                },
                {
                    "name": "daylightBias",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.systemservice/timezone/getTimeZoneRules",
            "description": "<p>The <strong>getTimeZoneRules</strong> method&nbsp;requests rules for specific time-zone for the specified years. By calling this method you can get the rules of when and how the daylight time switching occurs at the specified year.</p>",
            "acg": "time.query",
            "parameters": [
                {
                    "name": "tz",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "years",
                    "required": "no",
                    "type": "Number array"
                }
            ]
        },
        {
            "uri": "com.webos.service.tts/getAvailableLanguages",
            "description": "<p>Gets the list of&nbsp;languages that are supported by the <strong>TTS</strong> provider.&nbsp;</p>",
            "acg": "tts.operation",
            "parameters": [
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.tts/getStatus",
            "description": "<p>Gets the current state of the service.&nbsp;</p>",
            "acg": "tts.operation",
            "parameters": [
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.tts/speak",
            "description": "<p>Reads out an input text in the language chosen by the user.</p>\n\n<p><strong>Note</strong>: It generates a series of audio as output sounds until the complete speech signal for the input text is synthesized.</p>",
            "acg": "tts.operation",
            "parameters": [
                {
                    "name": "text",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "clear",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "language",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "appID",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "feedback",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.tts/stop",
            "description": "<p>Stops the text-to-speech processing immediately and ignores the pending text on the buffer.&nbsp;</p>\n\n<p><strong>Note</strong>:</p>\n\n<ul>\n\t<li>There could be some noise in the output when the service is stopped abruptly. To avoid this, set the <strong>fadeOut</strong>&nbsp;parameter to <strong>true</strong>. This will gradually reduce the&nbsp;output sound to zero&nbsp;without any noise. &nbsp;</li>\n\t<li>If both <strong>appID </strong>and <strong>msgID</strong> are passed in the API call, it considers only the <strong>msgID</strong> and stops the service based on the value provided by the <strong>msgID.</strong></li>\n</ul>",
            "acg": "tts.operation",
            "parameters": [
                {
                    "name": "appID",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "msgID",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "fadeOut",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.unifiedsearch/getCategories",
            "description": "<p>Gets an ordered list of enabled and disabled categories.</p>",
            "acg": "search.operation",
            "parameters": []
        },
        {
            "uri": "com.webos.service.unifiedsearch/search",
            "description": "<p>Searches with keyword and return intents&nbsp;of items.</p>\n\n<p><strong>Note</strong>: Returning intent can be implicit or explicit intent and have display property to show this on screen.</p>",
            "acg": "search.operation",
            "parameters": [
                {
                    "name": "key",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.unifiedsearch/updateCategory",
            "description": "<p>Allows enabling or disabling of a category and change the order of the category.</p>",
            "acg": "search.management",
            "parameters": [
                {
                    "name": "id",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "enabled",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "rank",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.webappmanager/clearBrowsingData",
            "description": "<p>Clears the browsing data of a specific&nbsp;type.</p>",
            "acg": "webapplication.management",
            "parameters": [
                {
                    "name": "types",
                    "required": "no",
                    "type": "String array"
                }
            ]
        },
        {
            "uri": "com.webos.service.webappmanager/closeAllApps",
            "description": "<p>Closes all the currently running applications.</p>",
            "acg": "webapplication.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.webappmanager/getWebProcessSize",
            "description": "<p>Gets the size of the current WebProcess.</p>",
            "acg": "webapplication.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.webappmanager/killApp",
            "description": "<p>Kills all the windows owned by the specified app.</p>\n\n<p><strong>Note</strong>: The method is intended to be used by SAM if necessary.</p>",
            "acg": "webapplication.management",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.webappmanager/launchApp",
            "description": "<p>Launches an application by the app ID.</p>\n\n<p><strong>Note</strong>: This is the major function used by the<strong> SAM</strong> to request for launching an application.</p>",
            "acg": "webapplication.management",
            "parameters": [
                {
                    "name": "appDesc",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "launchingAppId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "launchingProcId",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "instanceId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.webappmanager/listRunningApps",
            "description": "<p>Returns the list of applications that the Web App Manager is running.</p>",
            "acg": "webapplication.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "includeSysApps",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.webappmanager/logControl",
            "description": "<p>Enables or disables displaying the logs with associated keys.</p>",
            "acg": "webapplication.dev",
            "parameters": [
                {
                    "name": "keys",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "value",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.webappmanager/pauseApp",
            "description": "<p>Pauses the web application.</p>\n\n<p><strong>Note</strong>: The method can be used by <strong>SAM </strong>to move a specified web application from foreground to background (currently, SAM uses the keep-alive feature instead of WAM).</p>",
            "acg": "webapplication.management",
            "parameters": [
                {
                    "name": "instanceId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.webappmanager/webProcessCreated",
            "description": "<p>Returns the process ID of the launched application.</p>",
            "acg": "webapplication.query",
            "parameters": [
                {
                    "name": "appId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/cancel",
            "description": "<p>Cancels&nbsp;an ongoing connection attempt. Once the connection is canceled, the state is switched back to idle and the credentials are not saved. If no connection attempt is in progress then calling this method will do nothing.</p>",
            "acg": "wifi.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.wifi/cancelwps",
            "description": "<p>Cancels an ongoing WPS connection attempt.</p>",
            "acg": "wifi.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.wifi/changeNetwork",
            "description": "<p>Allows users to change the properties of already stored Wi-Fi <strong>profiles</strong>. For non-enterprise networks,&nbsp;only the <strong>passphrase</strong> can be changed for now. In the future when the support to enterprise networks will be added,&nbsp;this API will be extended to change the other properties as well.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "profileId",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "passKey",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/connect",
            "description": "<p>Connects to a given SSID, which can be an open network requiring no passphrase (i.e no <strong>security</strong> field in its argument), hidden network(requiring <strong>wasCreatedWithJoinOther</strong> field set to true in its argument), secure networks (authenticating with the specified passphrase), or enterprise networks(currently supported EAP methods are: PEAP, TLS and TTLS).</p>\n\n<p>Upon successful connection, the Wi-Fi <strong>profile </strong>is saved on the system along with its SSID and security details. On the other hand, if the connection is unsuccessful but the parameter <strong>storeProfile</strong> is set to <strong>true </strong>then the&nbsp;Wi-Fi <strong>profile </strong>is still saved on the system along with the&nbsp;<strong>connman</strong> .config file, which enables <strong>connman</strong> to connect to this network once it is available.&nbsp;To connect to an already known network i.e a saved&nbsp;<strong>profile</strong>, the&nbsp;<strong>profileId</strong>&nbsp;parameter should be set.&nbsp;</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "ssid",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "wasCreatedWithJoinOther",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "storeProfile",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "security",
                    "required": "no",
                    "type": "Object: security"
                },
                {
                    "name": "profileId",
                    "required": "no",
                    "type": "number"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/createwpspin",
            "description": "<p>Generates an 8 digit random PIN required for the WPS PIN connection method.&nbsp;</p>",
            "acg": "wifi.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.wifi/deleteprofile",
            "description": "<p>Deletes the profile with the given profile ID.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "profileId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/findnetworks",
            "description": "<p>Lists&nbsp;all the available Wi-Fi access points found in the area (from a previous Wi-Fi scan) and lists their details like SSID Name, available Security Types, Signal Strength and Connection Status. Callers can subscribe to this method to be notified of any changes.</p>\n\n<p>As long as there are subscribers to this method, periodic scans will be triggered.</p>",
            "acg": "wifi.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "interval",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/getCountryCode",
            "description": "<p>Gets the current&nbsp;country code of the Wi-Fi adapter.</p>\n\n<p>Format of the country code follows the alpha-2 code of ISO-3166-1.&nbsp;</p>",
            "parameters": []
        },
        {
            "uri": "com.webos.service.wifi/getNetworks",
            "description": "<p>Returns a list of available, configured but not available (out of range) networks without triggering an active scan. The users can subscribe to this&nbsp;method to be notified when there is a change in the list of networks found.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/getprofile",
            "description": "<p>Lists the profile with the given profile ID on the system.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": [
                {
                    "name": "profileId",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/getprofilelist",
            "description": "<p>Lists all the stored Wi-Fi profiles on the system.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": []
        },
        {
            "uri": "com.webos.service.wifi/getstatus",
            "description": "<p>Returns the following:&nbsp;</p>\n\n<ul>\n\t<li>The current status of Wi-Fi connection on the system.</li>\n\t<li>If the system is connected to an access point, then the details of the access point.</li>\n\t<li>If the service is online, then the IP related information like address, gateway, DNS etc.</li>\n</ul>\n\n<p>Callers can subscribe to this method to be notified of any changes in the Wi-Fi connection status. In case there is no subscription, then it will just return the current status once.</p>",
            "acg": "wifi.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/addservice",
            "description": "<p>Adds a Wi-Fi Direct service.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "description",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "query",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "response",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/cancel",
            "description": "<p>Cancels any ongoing Wi-Fi direct connection attempts. If there is no ongoing connection attempt then this method does nothing.</p>",
            "acg": "wifi.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.wifi/p2p/connect",
            "description": "<p>Connects to a given Wi-Fi direct peer.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "peerAddress",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "wpsInfo",
                    "required": "yes",
                    "type": "Object: wpsInfo"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/creategroup",
            "description": "<p>Creates an autonomous Wi-Fi direct group.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "ssid",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "passPhrase",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/deleteprofile",
            "description": "<p>Deletes a persistent profile for a specific MAC address or all profiles and also disconnect the peer(s) if connected.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "deviceAddress",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/deleteservice",
            "description": "<p>Deletes a Wi-Fi Direct service.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "description",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "query",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/disconnect",
            "description": "<p>Disconnects the given Wi-Fi direct peer.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "peerAddress",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/disconnectgroup",
            "description": "<p>Disconnects a P2P group.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "ssid",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/findservice",
            "description": "<p>Finds all the Wi-Fi Direct services or a specific service based on a service type. Peer-to-peer must be enabled for this method to work. Once this method is executed the response will be sent to the subscribers of the <strong>getpeers </strong>method.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": [
                {
                    "name": "type",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "address",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "version",
                    "required": "no",
                    "type": "number"
                },
                {
                    "name": "description",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "query",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/getdevicename",
            "description": "<p>Gets the device name used for Wi-Fi direct communication, which appears as the peer name for this device on the other neighboring Wi-Fi direct devices.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": []
        },
        {
            "uri": "com.webos.service.wifi/p2p/getgrouppeers",
            "description": "<p>Gets the list of peers for an existing Wi-Fi direct group.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": [
                {
                    "name": "ssid",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/getgroups",
            "description": "<p>Gets information about all Wi-Fi Direct groups. Callers can subscribe to this method to be notified of any changes in the list of groups.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/getp2prequests",
            "description": "<p>Subscribe the caller for notifications of the&nbsp;incoming Wi-Fi direct connection requests.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/getpeers",
            "description": "<p>Gets information about the Wi-Fi Direct peers. Callers can subscribe to this method to be notified of changes in the list of neighboring peers.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "scan",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/getstate",
            "description": "<p>Gets the current state of Wi-Fi direct connection on this device.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/getwifidisplayinfo",
            "description": "<p>Gets the Wi-Fi display parameters.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": []
        },
        {
            "uri": "com.webos.service.wifi/p2p/invite",
            "description": "<p>Invites a Wi-Fi direct peer to the group to which this device belongs.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "peerAddress",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/rejectpeer",
            "description": "<p>Reject a connection attempt from a peer (specified with a device address). This is a mechanism to reject a pending GO Negotiation with a peer and request to automatically block any further connection or discovery of the peer.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "peerAddress",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/setdevicename",
            "description": "<p>Sets the device name for the Wi-Fi direct communication. This name appears as peer name for this device on other neighboring Wi-Fi direct devices.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "deviceName",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/setgointent",
            "description": "<p>Changes the group owner intent value used&nbsp;by Miracast service.&nbsp;Miracast service uses this API when TV needs to change the role in the P2P (Peer-to-Peer) group.</p>\n\n<p><strong>Note(s):</strong></p>\n\n<ul>\n\t<li>Subscription is not supported in this API.</li>\n\t<li>WiFi and P2P must be enabled to use this method.</li>\n</ul>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "GOIntent",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/setlistenchannel",
            "description": "<p><span style=\"color:rgb(0, 0, 0)\">Before any connection can be formed, P2P devices have to find each other. For this they alternately listen and send&nbsp;</span><em>probe requests</em><span style=\"color:rgb(0, 0, 0)\">with additional&nbsp;</span><em>P2P information elements</em><span style=\"color:rgb(0, 0, 0)\">&nbsp;on so-called&nbsp;</span><em>social channels</em><span style=\"color:rgb(0, 0, 0)\">, which are channels 1, 6 and 11 in the 2.4GHz band. This method can be used to set the desired channel, which by default is channel 11.</span></p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "listenChannel",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/setlistenparams",
            "description": "<p>Control P2P extended listen parameters like period and interval, which determines the frequency at which the TV is listening for new connections and the time duration for each listen state.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "period",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "interval",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/setstate",
            "description": "<p>Enables or disables the Wi-Fi Direct connection, as well as to set listen and persistent modes.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "P2P",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "listenState",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "persistentMode",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/settethering",
            "description": "<p>Enables or disables a groups&#39; tethering property.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "ssid",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "tethering",
                    "required": "yes",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/p2p/setwifidisplayinfo",
            "description": "<p>Sets the Wi-Fi display parameters.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "enabled",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "deviceType",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "sessionAvailable",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "rtspPort",
                    "required": "no",
                    "type": "number"
                },
                {
                    "name": "cpSupport",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/scan",
            "description": "<p>Triggers a manual scan for the Wi-Fi networks. It should not be used together with the <strong>findnetworks </strong>method as using both at the same time will result in errors.&nbsp;This method will trigger a scan and return immediately. Results of the scan are posted to the subscribers of <strong>findnetworks and&nbsp;getNetworks</strong>.</p>",
            "acg": "wifi.management",
            "parameters": []
        },
        {
            "uri": "com.webos.service.wifi/setCountryCode",
            "description": "<p>Sets the current&nbsp;country code of the Wi-Fi adapter.&nbsp;This affects the allowed Wi-Fi channel for&nbsp;both AP (Access Point) and&nbsp;STA (Station) modes.</p>\n\n<p>Format of the country code follows the alpha-2 code of ISO-3166-1.</p>",
            "parameters": [
                {
                    "name": "countryCode",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/setstate",
            "description": "<p>Enables or disables Wi-Fi on the system by enabling/disabling the Wi-Fi interface.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "state",
                    "required": "yes",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/startwps",
            "description": "<p>Starts the WPS authentication process. If <strong>wpsPin </strong>argument is provided then the WPS-PIN&nbsp;method will be used, else WPS-PBC&nbsp;method will be used.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "wpsPin",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/tethering/getMaxStationCount",
            "description": "<p>Gets the maximum number of stations allowed to connect to the AP.</p>",
            "acg": "wifi.query",
            "parameters": []
        },
        {
            "uri": "com.webos.service.wifi/tethering/getState",
            "description": "<p>Gets the current Wi-Fi tethering state.</p>",
            "acg": "wifi.privilegedquery",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/tethering/getStationCount",
            "description": "<p>Gets the number of devices that are connected to the signage softAP.&nbsp;</p>",
            "acg": "wifi.privilegedquery",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/tethering/setMaxStationCount",
            "description": "<p>Sets the maximum number of stations allowed to connect to the AP.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "maxStationCount",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.service.wifi/tethering/setState",
            "description": "<p>Sets the Wi-Fi tethering state. Wi-Fi tethering can either be enabled or disabled.</p>\n\n<p>At least the&nbsp;<strong>ssid</strong>&nbsp;field needs to be set before enabling tethering. This can be done either with a separate setState call or within the enable call.</p>\n\n<p>The &quot;ssid&quot;, &quot;securityType&quot; and &quot;passPhrase&quot; configuration values are persisted across device reboots.</p>\n\n<p><strong>Note: </strong>Although all parameters are optional, at least one parameter needs to be specified.</p>",
            "acg": "wifi.management",
            "parameters": [
                {
                    "name": "enabled",
                    "required": "no",
                    "type": "Boolean"
                },
                {
                    "name": "ssid",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "securityType",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "passPhrase",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "required": "no",
                    "type": "Number"
                },
                {
                    "name": "channel",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "ipAddress",
                    "required": "no",
                    "type": "String"
                }
            ]
        },
        {
            "uri": "com.webos.surfacemanager/captureCompositorOutput",
            "description": "<p>Takes a screenshot of the content that the compositor generates. The content can be either a frame that contains the graphics composition result or an application surface that is being composited.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>This method can be used when a privileged webOS component wants to take a screenshot for its own purpose. It should not be allowed for public use since the screenshot may contain security-sensitive information.</li>\n\t<li>As this method is provided by LSM (Luna Surface Manager), the content is limited to what LSM is able to composite. It may not be possible to take video area with this method due to this technical limitation.</li>\n\t<li>Scaling is not supported.</li>\n</ul>",
            "acg": "surfacemanager.devutility",
            "parameters": [
                {
                    "name": "output",
                    "required": "yes",
                    "type": "String"
                },
                {
                    "name": "appId",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "format",
                    "required": "no",
                    "type": "String"
                },
                {
                    "name": "displayId",
                    "required": "no",
                    "type": "Number"
                }
            ]
        },
        {
            "uri": "com.webos.surfacemanager/getAppMirroring",
            "description": "<p>Gets the status of the app mirroring.</p>",
            "acg": "surfacemanager.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.surfacemanager/getForegroundAppInfo",
            "description": "<p>Provides the list of applications that are currently visible in the foreground.</p>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li>This is a private method that can be used by SAM only.</li>\n\t<li>For public use, refer to the <strong>com.webos.applicationManager/getForegroundAppInfo</strong> method.</li>\n</ul>",
            "acg": "surfacemanager.query",
            "parameters": [
                {
                    "name": "subscribe",
                    "required": "no",
                    "type": "Boolean"
                }
            ]
        },
        {
            "uri": "com.webos.surfacemanager/setAppMirroring",
            "description": "<p>Starts or stops app mirroring for a given display pair.</p>",
            "acg": "surfacemanager.operation",
            "parameters": [
                {
                    "name": "mirror",
                    "required": "yes",
                    "type": "Boolean"
                },
                {
                    "name": "from",
                    "required": "yes",
                    "type": "Number"
                },
                {
                    "name": "to",
                    "required": "yes",
                    "type": "Number"
                }
            ]
        }
    ]
}